import{ls as e}from"../platform/platform.js";import{Runtime as t}from"../root/root.js";import{ViewManager as i}from"../ui/ui.js";let o;async function s(){return o||(await t.Runtime.instance().loadModulePromise("emulation"),o=await import("./emulation.js")),o}i.registerViewExtension({location:"settings-view",commandPrompt:"Show Devices",title:()=>e`Devices`,order:30,loadView:async()=>(await s()).DevicesSettingsTab.DevicesSettingsTab.instance(),id:"devices",settings:["standardEmulatedDeviceList","customEmulatedDeviceList"]}),i.registerViewExtension({location:"drawer-view",commandPrompt:"Show Sensors",title:()=>e`Sensors`,id:"sensors",persistence:"closeable",order:100,loadView:async()=>(await s()).SensorsView.SensorsView.instance(),tags:[()=>e`geolocation`,()=>e`timezones`,()=>e`locale`,()=>e`locales`,()=>e`accelerometer`,()=>e`device orientation`]}),i.registerViewExtension({location:"settings-view",id:"emulation-locations",commandPrompt:"Show Locations",title:()=>e`Locations`,order:40,loadView:async()=>(await s()).LocationsSettingsTab.LocationsSettingsTab.instance(),settings:["emulation.locations"]});

import{Settings as t}from"../common/common.js";import{Reload as e}from"../components/components.js";import{userMetrics as s,InspectorFrontendHost as i,UserMetrics as n}from"../host/host.js";import{i18n as r}from"../i18n/i18n.js";import{ls as o}from"../platform/platform.js";import{Runtime as a}from"../root/root.js";import{Widget as c,Utils as d,ARIAUtils as l,ViewManager as h,Toolbar as u,TabbedPane as g,Dialog as m,GlassPane as p,UIUtils as b,SettingsUI as _,InspectorView as S,Tooltip as y,ListWidget as f,ListModel as v,ListControl as E,ShortcutRegistry as C,KeyboardShortcut as T,ActionRegistry as I,Icon as k}from"../ui/ui.js";const x={settings:"Settings",shortcuts:"Shortcuts",preferences:"Preferences",restoreDefaultsAndReload:"Restore defaults and reload",experiments:"Experiments",theseExperimentsCouldBeUnstable:"These experiments could be unstable or unreliable and may require you to restart DevTools.",theseExperimentsAreParticularly:"These experiments are particularly unstable. Enable at your own risk.",warning:"WARNING:",oneOrMoreSettingsHaveChanged:"One or more settings have changed which requires a reload to take effect."},w=r.registerUIStrings("settings/SettingsScreen.js",x),L=r.getLocalizedString.bind(void 0,w);let A;class R extends c.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/settingsScreen.css",{enableLegacyPatching:!0}),this.contentElement.classList.add("settings-window-main"),this.contentElement.classList.add("vbox");const t=document.createElement("div"),e=d.createShadowRootWithCoreStyles(t,{cssFile:"settings/settingsScreen.css",enableLegacyPatching:!0,delegatesFocus:void 0}).createChild("div","settings-window-title");l.markAsHeading(e,1),e.textContent=L(x.settings),this._tabbedLocation=h.ViewManager.instance().createTabbedLocation((()=>R._revealSettingsScreen()),"settings-view");const s=this._tabbedLocation.tabbedPane();s.leftToolbar().appendToolbarItem(new u.ToolbarItem(t)),s.setShrinkableTabs(!1),s.makeVerticalTabLayout();const i=h.ViewManager.instance().view("keybinds");i&&i.widget().then((t=>{this._keybindsTab=t})),s.show(this.contentElement),s.selectTab("preferences"),s.addEventListener(g.Events.TabInvoked,this._tabInvoked,this),this._reportTabOnReveal=!1}static instance(t={forceNew:null}){const{forceNew:e}=t;return A&&!e||(A=new R),A}static _revealSettingsScreen(){const t=R.instance();if(t.isShowing())return t;t._reportTabOnReveal=!0;const e=new m.Dialog;return e.contentElement.tabIndex=-1,e.addCloseButton(),e.setOutsideClickCallback((()=>{})),e.setPointerEventsBehavior(p.PointerEventsBehavior.PierceGlassPane),e.setOutsideTabIndexBehavior(m.OutsideTabIndexBehavior.PreserveMainViewTabIndex),t.show(e.contentElement),e.setEscapeKeyCallback(t._onEscapeKeyPressed.bind(t)),e.show(),t}static async _showSettingsScreen(t={name:void 0,focusTabHeader:void 0}){const{name:e,focusTabHeader:s}=t,i=R._revealSettingsScreen();i._selectTab(e||"preferences");const n=i._tabbedLocation.tabbedPane();await n.waitForTabElementUpdate(),s?n.focusSelectedTabHeader():n.focus()}resolveLocation(t){return this._tabbedLocation}_selectTab(t){this._tabbedLocation.tabbedPane().selectTab(t,!0)}_tabInvoked(t){const e=t.data;if(!e.isUserGesture)return;const s=e.prevTabId,i=e.tabId;!this._reportTabOnReveal&&s&&s===i||(this._reportTabOnReveal=!1,this._reportSettingsPanelShown(i))}_reportSettingsPanelShown(t){t!==L(x.shortcuts)?s.settingsPanelShown(t):s.settingsPanelShown("shortcuts")}_onEscapeKeyPressed(t){"keybinds"===this._tabbedLocation.tabbedPane().selectedTabId&&this._keybindsTab&&this._keybindsTab.onEscapeKeyPressed(t)}}class F extends c.VBox{constructor(t,e){super(),this.element.classList.add("settings-tab-container"),e&&(this.element.id=e);const s=this.element.createChild("header");b.createTextChild(s.createChild("h1"),t),this.containerElement=this.element.createChild("div","settings-container-wrapper").createChild("div","settings-tab settings-content settings-container")}_appendSection(t){const e=this.containerElement.createChild("div","settings-block");if(t){l.markAsGroup(e);const s=e.createChild("div","settings-section-title");s.textContent=t,l.markAsHeading(s,2),l.setAccessibleName(e,t)}return e}}class P extends F{constructor(){super(L(x.preferences),"preferences-tab-content");const s=["","Appearance","Sources","Elements","Network","Performance","Console","Extensions","Persistence","Debugger","Global"];this._nameToSection=new Map;for(const t of s)this._createSectionElement(t);const i=[...a.Runtime.instance().extensions("setting").map((t=>{const e=t.descriptor().category;return{category:e?o(e):void 0,settingName:t.descriptor().settingName,title:t.title(),order:t.descriptor().order,settingType:t.descriptor().settingType||"",defaultValue:t.descriptor().defaultValue}})),...t.getRegisteredSettings().map((t=>{const e=t.titleMac&&t.titleMac(),s=t.title&&t.title(),{category:i,settingName:n,order:r,settingType:o,defaultValue:a}=t;return{category:i||void 0,settingName:n,title:e||s,order:r||void 0,settingType:o,defaultValue:a}}))];i.sort(((t,e)=>t.order&&e.order?t.order-e.order:0)),i.forEach(this._addSetting.bind(this)),a.Runtime.instance().extensions(_.SettingUI).forEach(this._addSettingUI.bind(this)),this._appendSection().appendChild(b.createTextButton(L(x.restoreDefaultsAndReload),(function(){t.Settings.instance().clearAll(),e.reload()})))}static isSettingVisible(t){return Boolean(t.title&&t.category)}_addSetting(e){if(!P.isSettingVisible(e))return;const s=e.category;if(!s)return;const i=this._sectionElement(s);if(!i)return;const n=t.Settings.instance().moduleSetting(e.settingName),r=_.createControlForSetting(n);r&&i.appendChild(r)}_addSettingUI(t){const e=t.descriptor().category||"";t.instance().then(function(t){const s=t.settingElement();if(s){let t=this._sectionElement(e);t||(t=this._createSectionElement(e)),t.appendChild(s)}}.bind(this))}_createSectionElement(t){const e=t&&L(t),s=this._appendSection(e);return this._nameToSection.set(t,s),s}_sectionElement(t){return this._nameToSection.get(t)||null}}var B=Object.freeze({__proto__:null,UIStrings:x,SettingsScreen:R,GenericSettingsTab:P,ExperimentsSettingsTab:class extends F{constructor(){super(L(x.experiments),"experiments-tab-content");const t=a.experiments.allConfigurableExperiments().sort(),e=t.filter((t=>t.unstable)),s=t.filter((t=>!t.unstable));if(s.length){const t=this._appendSection(),e=L(x.theseExperimentsCouldBeUnstable);t.appendChild(this._createExperimentsWarningSubsection(e));for(const e of s)t.appendChild(this._createExperimentCheckbox(e))}if(e.length){const t=this._appendSection(),s=L(x.theseExperimentsAreParticularly);t.appendChild(this._createExperimentsWarningSubsection(s));for(const s of e)"blackboxJSFramesOnTimeline"!==s.name&&t.appendChild(this._createExperimentCheckbox(s))}}_createExperimentsWarningSubsection(t){const e=document.createElement("div");e.createChild("span","settings-experiments-warning-subsection-warning").textContent=L(x.warning),b.createTextChild(e," ");return e.createChild("span","settings-experiments-warning-subsection-message").textContent=t,e}_createExperimentCheckbox(t){const e=b.CheckboxLabel.create(L(t.title),t.isEnabled()),i=e.checkboxElement;i.name=t.name,i.addEventListener("click",(function(){t.setEnabled(i.checked),"ignoreListJSFramesOnTimeline"===t.name&&a.experiments.setEnabled("blackboxJSFramesOnTimeline",i.checked),s.experimentChanged(t.name,t.isEnabled()),S.InspectorView.instance().displayReloadRequiredWarning(L(x.oneOrMoreSettingsHaveChanged))}),!1);const n=document.createElement("p");return n.className=t.unstable&&!t.isEnabled()?"settings-experiment-unstable":"",n.appendChild(e),n}},ActionDelegate:class{handleAction(t,e){switch(e){case"settings.show":return R._showSettingsScreen({focusTabHeader:!0}),!0;case"settings.documentation":return i.InspectorFrontendHostInstance.openInNewTab(b.addReferrerToURL("https://developers.google.com/web/tools/chrome-devtools/")),!0;case"settings.shortcuts":return R._showSettingsScreen({name:"keybinds",focusTabHeader:!0}),!0}return!1}},Revealer:class{reveal(e){console.assert(e instanceof t.Setting);const s=e;let n=!1;[...a.Runtime.instance().extensions("setting").map((t=>{const e=t.descriptor().category;return{category:e?o(e):void 0,settingName:t.descriptor().settingName,title:t.title(),order:t.descriptor().order,settingType:t.descriptor().settingType||"",defaultValue:t.descriptor().defaultValue}})),...t.getRegisteredSettings().map((t=>{const e=t.titleMac&&t.titleMac(),s=t.title&&t.title(),{category:i,settingName:n,order:r,settingType:o,defaultValue:a}=t;return{category:i||void 0,settingName:n,title:e||s,order:r||void 0,settingType:o,defaultValue:a}}))].forEach((function(t){if(!P.isSettingVisible(t))return;t.settingName===s.name&&(i.InspectorFrontendHostInstance.bringToFront(),R._showSettingsScreen(),n=!0)})),a.Runtime.instance().extensions(_.SettingUI).forEach((function(t){const e=t.descriptor().settings;e&&-1!==e.indexOf(s.name)&&(i.InspectorFrontendHostInstance.bringToFront(),R._showSettingsScreen(),n=!0)}));return[...a.Runtime.instance().extensions("view").map((t=>({location:t.descriptor().location,settings:t.descriptor().settings,id:t.descriptor().id}))),...h.getRegisteredViewExtensions().map((t=>({location:t.location(),settings:t.settings(),id:t.viewId()})))].forEach((function(t){if("settings-view"!==t.location)return;const e=t.settings;e&&-1!==e.indexOf(s.name)&&(i.InspectorFrontendHostInstance.bringToFront(),R._showSettingsScreen({name:t.id}),n=!0)})),n?Promise.resolve():Promise.reject()}},ShowSettingsScreenOptions:undefined,SettingDescriptor:undefined});const K={frameworkIgnoreList:"Framework Ignore List",debuggerWillSkipThroughThe:"Debugger will skip through the scripts and will not stop on exceptions thrown by them.",ignoreListContentScripts:"Add content scripts to ignore list",ignoreListContentScriptsExtension:"Add content scripts to ignore list (extension scripts in the page)",ignoreList:"Ignore List",disabled:"Disabled",noIgnoreListPatterns:"No ignore list patterns",addPattern:"Add pattern...",addFilenamePattern:"Add filename pattern",ignoreScriptsWhoseNamesMatchS:"Ignore scripts whose names match '{PH1}'",pattern:"Pattern",behavior:"Behavior",patternCannotBeEmpty:"Pattern cannot be empty",patternAlreadyExists:"Pattern already exists",patternMustBeAValidRegular:"Pattern must be a valid regular expression"},M=r.registerUIStrings("settings/FrameworkIgnoreListSettingsTab.js",K),N=r.getLocalizedString.bind(void 0,M);class D extends c.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/frameworkIgnoreListSettingsTab.css",{enableLegacyPatching:!0});const e=this.contentElement.createChild("div","header");e.textContent=N(K.frameworkIgnoreList),l.markAsHeading(e,1),this.contentElement.createChild("div","intro").textContent=N(K.debuggerWillSkipThroughThe);const s=this.contentElement.createChild("div","ignore-list-content-scripts");s.appendChild(_.createSettingCheckbox(N(K.ignoreListContentScripts),t.Settings.instance().moduleSetting("skipContentScripts"),!0)),y.Tooltip.install(s,N(K.ignoreListContentScriptsExtension)),this._ignoreListLabel=N(K.ignoreList),this._disabledLabel=N(K.disabled),this._list=new f.ListWidget(this),this._list.element.classList.add("ignore-list"),this._list.registerRequiredCSS("settings/frameworkIgnoreListSettingsTab.css",{enableLegacyPatching:!0});const i=document.createElement("div");i.classList.add("ignore-list-empty"),i.textContent=N(K.noIgnoreListPatterns),this._list.setEmptyPlaceholder(i),this._list.show(this.contentElement);const n=b.createTextButton(N(K.addPattern),this._addButtonClicked.bind(this),"add-button");l.setAccessibleName(n,N(K.addFilenamePattern)),this.contentElement.appendChild(n),this._setting=t.Settings.instance().moduleSetting("skipStackFramesPattern"),this._setting.addChangeListener(this._settingUpdated,this),this.setDefaultFocusedElement(n)}wasShown(){super.wasShown(),this._settingUpdated()}_settingUpdated(){this._list.clear();const t=this._setting.getAsArray();for(let e=0;e<t.length;++e)this._list.appendItem(t[e],!0)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:!1})}renderItem(t,e){const s=document.createElement("div");s.classList.add("ignore-list-item");const i=s.createChild("div","ignore-list-pattern");return i.textContent=t.pattern,y.Tooltip.install(i,N(K.ignoreScriptsWhoseNamesMatchS,{PH1:t.pattern})),s.createChild("div","ignore-list-separator"),s.createChild("div","ignore-list-behavior").textContent=t.disabled?this._disabledLabel:this._ignoreListLabel,t.disabled&&s.classList.add("ignore-list-disabled"),s}removeItemRequested(t,e){const s=this._setting.getAsArray();s.splice(e,1),this._setting.setAsArray(s)}commitEdit(t,e,s){t.pattern=e.control("pattern").value.trim(),t.disabled=e.control("behavior").value===this._disabledLabel;const i=this._setting.getAsArray();s&&i.push(t),this._setting.setAsArray(i)}beginEdit(t){const e=this._createEditor();return e.control("pattern").value=t.pattern,e.control("behavior").value=t.disabled?this._disabledLabel:this._ignoreListLabel,e}_createEditor(){if(this._editor)return this._editor;const t=new f.Editor;this._editor=t;const e=t.contentElement(),s=e.createChild("div","ignore-list-edit-row");s.createChild("div","ignore-list-pattern").textContent=N(K.pattern),s.createChild("div","ignore-list-separator ignore-list-separator-invisible"),s.createChild("div","ignore-list-behavior").textContent=N(K.behavior);const i=e.createChild("div","ignore-list-edit-row"),n=t.createInput("pattern","text","/framework\\.js$",function(t,e,s){const i=s.value.trim(),n=this._setting.getAsArray();if(!i.length)return{valid:!1,errorMessage:N(K.patternCannotBeEmpty)};for(let t=0;t<n.length;++t)if(t!==e&&n[t].pattern===i)return{valid:!1,errorMessage:N(K.patternAlreadyExists)};let r;try{r=new RegExp(i)}catch(t){}if(!r)return{valid:!1,errorMessage:N(K.patternMustBeAValidRegular)};return{valid:!0,errorMessage:void 0}}.bind(this));l.setAccessibleName(n,N(K.pattern)),i.createChild("div","ignore-list-pattern").appendChild(n),i.createChild("div","ignore-list-separator ignore-list-separator-invisible");const r=t.createSelect("behavior",[this._ignoreListLabel,this._disabledLabel],(function(t,e,s){return{valid:!0,errorMessage:void 0}}));return l.setAccessibleName(r,N(K.behavior)),i.createChild("div","ignore-list-behavior").appendChild(r),t}}var U=Object.freeze({__proto__:null,UIStrings:K,FrameworkIgnoreListSettingsTab:D});const O={shortcuts:"Shortcuts",matchShortcutsFromPreset:"Match shortcuts from preset",keyboardShortcutsList:"Keyboard shortcuts list",shortcutModified:"Shortcut modified",noShortcutForAction:"No shortcut for action",addAShortcut:"Add a shortcut",confirmChanges:"Confirm changes",discardChanges:"Discard changes",removeShortcut:"Remove shortcut",editShortcut:"Edit shortcut",shortcutsCannotContainOnly:"Shortcuts cannot contain only modifier keys.",thisShortcutIsInUseByS:"This shortcut is in use by {PH1}: {PH2}.",RestoreDefaultShortcuts:"Restore default shortcuts",FullListOfDevtoolsKeyboard:"Full list of DevTools keyboard shortcuts and gestures",ResetShortcutsForAction:"Reset shortcuts for action"},V=r.registerUIStrings("settings/KeybindsSettingsTab.js",O),H=r.getLocalizedString.bind(void 0,V);class j extends c.VBox{constructor(){super(!0),this.registerRequiredCSS("settings/keybindsSettingsTab.css",{enableLegacyPatching:!0});this.contentElement.createChild("header").createChild("h1").textContent=H(O.shortcuts);const e=t.Settings.instance().moduleSetting("activeKeybindSet"),s=t.Settings.instance().moduleSetting("userShortcuts");s.addChangeListener(this.update,this),e.addChangeListener(this.update,this);const i=_.createControlForSetting(e,H(O.matchShortcutsFromPreset));i&&(i.classList.add("keybinds-set-select"),this.contentElement.appendChild(i)),this._items=new v.ListModel,this._list=new E.ListControl(this._items,this,E.ListMode.NonViewport),this._items.replaceAll(this._createListItems()),l.markAsList(this._list.element),this.registerRequiredCSS("settings/keybindsSettingsTab.css",{enableLegacyPatching:!0}),this.contentElement.appendChild(this._list.element),l.setAccessibleName(this._list.element,H(O.keyboardShortcutsList));const n=this.contentElement.createChild("div");n.classList.add("keybinds-footer");const r=b.createDocumentationLink("iterate/inspect-styles/shortcuts",H(O.FullListOfDevtoolsKeyboard));r.classList.add("docs-link"),n.appendChild(r),n.appendChild(b.createTextButton(H(O.RestoreDefaultShortcuts),(()=>{s.set([]),e.set(C.DefaultShortcutSetting)}))),this._editingItem=null,this._editingRow=null,this.update()}createElementForItem(t){let e=document.createElement("div");if("string"==typeof t)l.setLevel(e,1),e.classList.add("keybinds-category-header"),e.textContent=t;else{const s=new W(t,this,t===this._editingItem);e=s.element,l.setLevel(e,2),t===this._editingItem&&(this._editingRow=s)}return e.classList.add("keybinds-list-item"),l.markAsListitem(e),e.tabIndex=t===this._list.selectedItem()&&t!==this._editingItem?0:-1,e}commitChanges(t,e){for(const[t,i]of e)t.type!==T.Type.UnsetShortcut&&(C.ShortcutRegistry.instance().removeShortcut(t),i||s.actionTaken(n.Action.ShortcutRemoved)),i&&(C.ShortcutRegistry.instance().registerUserShortcut(t.changeKeys(i).changeType(T.Type.UserShortcut)),t.type===T.Type.UnsetShortcut?s.actionTaken(n.Action.UserShortcutAdded):s.actionTaken(n.Action.ShortcutModified));this.stopEditing(t)}heightForItem(t){return 0}isItemSelectable(t){return!0}selectedItemChanged(t,e,s,i){s&&(s.tabIndex=-1),i&&(e===this._editingItem&&this._editingRow?this._editingRow.focus():(i.tabIndex=0,this._list.element.hasFocus()&&i.focus()),this.setDefaultFocusedElement(i))}updateSelectedItemARIA(t,e){return!0}startEditing(t){this._editingItem&&this.stopEditing(this._editingItem),b.markBeingEdited(this._list.element,!0),this._editingItem=t,this._list.refreshItem(t)}stopEditing(t){b.markBeingEdited(this._list.element,!1),this._editingItem=null,this._editingRow=null,this._list.refreshItem(t),this.focus()}_createListItems(){const t=I.ActionRegistry.instance().actions().sort(((t,e)=>t.category()<e.category()?-1:t.category()>e.category()?1:t.id()<e.id()?-1:t.id()>e.id()?1:0)),e=[];let s;return t.forEach((t=>{s!==t.category()&&e.push(t.category()),e.push(t),s=t.category()})),e}onEscapeKeyPressed(t){const e=document.deepActiveElement();this._editingRow&&e&&"INPUT"===e.nodeName&&this._editingRow.onEscapeKeyPressed(t)}update(){this._editingItem&&this.stopEditing(this._editingItem),this._list.refreshAllItems(),this._list.selectedItem()||this._list.selectItem(this._items.at(0))}willHide(){this._editingItem&&this.stopEditing(this._editingItem)}}class W{constructor(t,e,s){this._isEditing=Boolean(s),this._settingsTab=e,this._item=t,this.element=document.createElement("div"),this._editedShortcuts=new Map,this._shortcutInputs=new Map,this._shortcuts=C.ShortcutRegistry.instance().shortcutsForAction(t.id()),this._elementToFocus=null,this._confirmButton=null,this._addShortcutLinkContainer=null,this._errorMessageElement=null,this._secondKeyTimeout=null,this._update()}focus(){this._elementToFocus&&this._elementToFocus.focus()}_update(){this.element.removeChildren(),this._elementToFocus=null,this._shortcutInputs.clear(),this.element.classList.toggle("keybinds-editing",this._isEditing),this.element.createChild("div","keybinds-action-name keybinds-list-text").textContent=this._item.title(),this._shortcuts.forEach(this._createShortcutRow,this),0===this._shortcuts.length&&this._createEmptyInfo(),this._isEditing&&this._setupEditor()}_createEmptyInfo(){if(C.ShortcutRegistry.instance().actionHasDefaultShortcut(this._item.id())){const t=k.Icon.create("largeicon-shortcut-changed","keybinds-modified");l.setAccessibleName(t,H(O.shortcutModified)),this.element.appendChild(t)}if(!this._isEditing){const t=this.element.createChild("div","keybinds-shortcut keybinds-list-text");l.setAccessibleName(t,H(O.noShortcutForAction)),a.experiments.isEnabled("keyboardShortcutEditor")&&this.element.appendChild(this._createEditButton())}}_setupEditor(){this._addShortcutLinkContainer=this.element.createChild("div","keybinds-shortcut devtools-link");const t=this._addShortcutLinkContainer.createChild("span","devtools-link");t.textContent=H(O.addAShortcut),t.tabIndex=0,l.markAsLink(t),self.onInvokeElement(t,this._addShortcut.bind(this)),this._elementToFocus||(this._elementToFocus=t),this._errorMessageElement=this.element.createChild("div","keybinds-info keybinds-error hidden"),l.markAsAlert(this._errorMessageElement),this.element.appendChild(this._createIconButton(H(O.ResetShortcutsForAction),"largeicon-undo","",this._resetShortcutsToDefaults.bind(this))),this._confirmButton=this._createIconButton(H(O.confirmChanges),"largeicon-checkmark","keybinds-confirm-button",(()=>this._settingsTab.commitChanges(this._item,this._editedShortcuts))),this.element.appendChild(this._confirmButton),this.element.appendChild(this._createIconButton(H(O.discardChanges),"largeicon-delete","keybinds-cancel-button",(()=>this._settingsTab.stopEditing(this._item)))),this.element.addEventListener("keydown",(t=>{isEscKey(t)&&(this._settingsTab.stopEditing(this._item),t.consume(!0))}))}_addShortcut(){const t=new T.KeyboardShortcut([],this._item.id(),T.Type.UnsetShortcut);this._shortcuts.push(t),this._update();const e=this._shortcutInputs.get(t);e&&e.focus()}_createShortcutRow(t,e){if(this._editedShortcuts.has(t)&&!this._editedShortcuts.get(t))return;let s;t.type===T.Type.UnsetShortcut||t.isDefault()||(s=k.Icon.create("largeicon-shortcut-changed","keybinds-modified"),l.setAccessibleName(s,H(O.shortcutModified)),this.element.appendChild(s));const i=this.element.createChild("div","keybinds-shortcut keybinds-list-text");if(this._isEditing){const e=i.createChild("input","harmony-input");e.spellcheck=!1,this._shortcutInputs.set(t,e),this._elementToFocus||(this._elementToFocus=e),e.value=t.title();const s=this._editedShortcuts.get(t);s&&(e.value=this._shortcutInputTextForDescriptors(s)),e.addEventListener("keydown",this._onShortcutInputKeyDown.bind(this,t,e)),e.addEventListener("blur",(()=>{null!==this._secondKeyTimeout&&(clearTimeout(this._secondKeyTimeout),this._secondKeyTimeout=null)})),i.appendChild(this._createIconButton(H(O.removeShortcut),"largeicon-trash-bin","keybinds-delete-button",(()=>{const e=this._shortcuts.indexOf(t);t.isDefault()||this._shortcuts.splice(e,1),this._editedShortcuts.set(t,null),this._update(),this.focus(),this._validateInputs()})))}else{t.descriptors.flatMap((t=>t.name.split(" + "))).forEach((t=>{i.createChild("span","keybinds-key").textContent=t})),a.experiments.isEnabled("keyboardShortcutEditor")&&0===e&&this.element.appendChild(this._createEditButton())}}_createEditButton(){return this._createIconButton(H(O.editShortcut),"largeicon-edit","keybinds-edit-button",(()=>this._settingsTab.startEditing(this._item)))}_createIconButton(t,e,s,i){const n=document.createElement("button");return n.appendChild(k.Icon.create(e)),n.addEventListener("click",i),l.setAccessibleName(n,t),s&&n.classList.add(s),n}_onShortcutInputKeyDown(t,e,s){if("Tab"!==s.key){const i=this._descriptorForEvent(s),n=this._editedShortcuts.get(t)||[];this._editedShortcuts.set(t,n);const r=2===n.length&&T.KeyboardShortcut.isModifier(n[1].key);2===n.length&&!r&&n.splice(0,2),this._secondKeyTimeout?(clearTimeout(this._secondKeyTimeout),this._secondKeyTimeout=null,n.push(i)):r?n[1]=i:T.KeyboardShortcut.isModifier(i.key)?n[0]=i:(n[0]=i,this._secondKeyTimeout=window.setTimeout((()=>{this._secondKeyTimeout=null}),C.KeyTimeout)),e.value=this._shortcutInputTextForDescriptors(n),this._validateInputs(),s.consume(!0)}}_descriptorForEvent(t){const e=T.KeyboardShortcut.makeKeyFromEvent(t),s=T.KeyboardShortcut.keyCodeAndModifiersFromKey(e),i=T.Keys[t.key]||T.KeyBindings[t.key];return T.KeyboardShortcut.makeDescriptor(i||t.key,s.modifiers)}_shortcutInputTextForDescriptors(t){return t.map((t=>t.name)).join(" ")}_resetShortcutsToDefaults(){this._editedShortcuts.clear();for(const t of this._shortcuts)if(t.type===T.Type.UnsetShortcut){const e=this._shortcuts.indexOf(t);this._shortcuts.splice(e,1)}else t.type===T.Type.UserShortcut&&this._editedShortcuts.set(t,null);C.ShortcutRegistry.instance().disabledDefaultsForAction(this._item.id()).forEach((t=>{this._shortcuts.push(t),this._editedShortcuts.set(t,t.descriptors)})),this._update(),this.focus()}onEscapeKeyPressed(t){const e=document.deepActiveElement();for(const[s,i]of this._shortcutInputs.entries())e===i&&this._onShortcutInputKeyDown(s,i,t)}_validateInputs(){const t=this._confirmButton,e=this._errorMessageElement;t&&e&&(t.disabled=!1,e.classList.add("hidden"),this._shortcutInputs.forEach(((s,i)=>{const n=this._editedShortcuts.get(i);if(!n)return;if(n.some((t=>T.KeyboardShortcut.isModifier(t.key))))return t.disabled=!0,s.classList.add("error-input"),l.setInvalid(s,!0),e.classList.remove("hidden"),void(e.textContent=H(O.shortcutsCannotContainOnly));const r=C.ShortcutRegistry.instance().actionsForDescriptors(n).filter((t=>t!==this._item.id()));if(r.length){t.disabled=!0,s.classList.add("error-input"),l.setInvalid(s,!0),e.classList.remove("hidden");const i=I.ActionRegistry.instance().action(r[0]);if(!i)return;const n=i.title(),o=i.category();e.textContent=H(O.thisShortcutIsInUseByS,{PH1:o,PH2:n})}else s.classList.remove("error-input"),l.setInvalid(s,!1)})))}}var q=Object.freeze({__proto__:null,UIStrings:O,KeybindsSettingsTab:j,ShortcutListItem:W,KeybindsItem:undefined});export{U as FrameworkIgnoreListSettingsTab,q as KeybindsSettingsTab,B as SettingsScreen};

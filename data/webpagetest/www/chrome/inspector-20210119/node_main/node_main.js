import{InspectorFrontendHost as e,InspectorFrontendHostAPI as t,userMetrics as n,UserMetrics as s}from"../host/host.js";import{i18n as o}from"../i18n/i18n.js";import{Panel as i,Widget as r,XLink as d,ListWidget as a,UIUtils as c}from"../ui/ui.js";import{ObjectWrapper as g}from"../common/common.js";import{TargetDetachedDialog as l}from"../components/components.js";import{Connections as h,SDKModel as _}from"../sdk/sdk.js";const v={nodejsDebuggingGuide:"Node.js debugging guide",specifyNetworkEndpointAnd:"Specify network endpoint and DevTools will connect to it automatically. Read {PH1} to learn more.",noConnectionsSpecified:"No connections specified",addConnection:"Add connection",networkAddressEgLocalhost:"Network address (e.g. localhost:9229)"},p=o.registerUIStrings("node_main/NodeConnectionsPanel.js",v),m=o.getLocalizedString.bind(void 0,p);class C extends i.Panel{constructor(){super("node-connection"),this.registerRequiredCSS("node_main/nodeConnectionsPanel.css",{enableLegacyPatching:!1}),this.contentElement.classList.add("node-panel");const n=this.contentElement.createChild("div","node-panel-center");n.createChild("img","node-panel-logo").src="https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg",e.InspectorFrontendHostInstance.events.addEventListener(t.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this),this._config,this.contentElement.tabIndex=0,this.setDefaultFocusedElement(this.contentElement),e.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),e.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0),this._networkDiscoveryView=new u((t=>{this._config.networkDiscoveryConfig=t,e.InspectorFrontendHostInstance.setDevicesDiscoveryConfig(this._config)})),this._networkDiscoveryView.show(n)}_devicesDiscoveryConfigChanged(e){this._config=e.data,this._networkDiscoveryView.discoveryConfigChanged(this._config.networkDiscoveryConfig)}}class u extends r.VBox{constructor(e){super(),this._callback=e,this.element.classList.add("network-discovery-view");const t=this.element.createChild("div","network-discovery-footer"),n=d.XLink.create("https://nodejs.org/en/docs/inspector/",m(v.nodejsDebuggingGuide));t.appendChild(o.getFormatLocalizedString(p,v.specifyNetworkEndpointAnd,{PH1:n})),this._list=new a.ListWidget(this),this._list.registerRequiredCSS("node_main/nodeConnectionsPanel.css",{enableLegacyPatching:!1}),this._list.element.classList.add("network-discovery-list");const s=document.createElement("div");s.classList.add("network-discovery-list-empty"),s.textContent=m(v.noConnectionsSpecified),this._list.setEmptyPlaceholder(s),this._list.show(this.element),this._editor=null;const i=c.createTextButton(m(v.addConnection),this._addNetworkTargetButtonClicked.bind(this),"add-network-target-button",!0);this.element.appendChild(i),this._networkDiscoveryConfig=[],this.element.classList.add("node-frontend")}_update(){const e=this._networkDiscoveryConfig.map((e=>e.address));this._callback.call(null,e)}_addNetworkTargetButtonClicked(){this._list.addNewItem(this._networkDiscoveryConfig.length,{address:"",port:""})}discoveryConfigChanged(e){this._networkDiscoveryConfig=[],this._list.clear();for(const t of e){const e={address:t,port:""};this._networkDiscoveryConfig.push(e),this._list.appendItem(e,!0)}}renderItem(e,t){const n=document.createElement("div");return n.classList.add("network-discovery-list-item"),n.createChild("div","network-discovery-value network-discovery-address").textContent=e.address,n}removeItemRequested(e,t){this._networkDiscoveryConfig.splice(t,1),this._list.removeItem(t),this._update()}commitEdit(e,t,n){e.address=t.control("address").value.trim(),n&&this._networkDiscoveryConfig.push(e),this._update()}beginEdit(e){const t=this._createEditor();return t.control("address").value=e.address,t}_createEditor(){if(this._editor)return this._editor;const e=new a.Editor;this._editor=e;const t=e.contentElement().createChild("div","network-discovery-edit-row"),n=e.createInput("address","text",m(v.networkAddressEgLocalhost),(function(e,t,n){const s=n.value.trim().match(/^([a-zA-Z0-9\.\-_]+):(\d+)$/);if(!s)return{valid:!1,errorMessage:void 0};return{valid:parseInt(s[2],10)<=65535,errorMessage:void 0}}));return t.createChild("div","network-discovery-value network-discovery-address").appendChild(n),e}}var f=Object.freeze({__proto__:null,UIStrings:v,NodeConnectionsPanel:C,NodeConnectionsView:u});const w={main:"Main",nodejsS:"Node.js: {PH1}"},y=o.registerUIStrings("node_main/NodeMain.js",w),k=o.getLocalizedString.bind(void 0,y);class D extends g.ObjectWrapper{async run(){n.actionTaken(s.Action.ConnectToNodeJSFromFrontend),h.initMainConnection((async()=>{_.TargetManager.instance().createTarget("main",k(w.main),_.Type.Browser,null).setInspectedURL("Node.js")}),l.TargetDetachedDialog.webSocketConnectionLost)}}class I extends _.SDKModel{constructor(n){super(n),this._targetManager=n.targetManager(),this._parentTarget=n,this._targetAgent=n.targetAgent(),this._childTargets=new Map,this._childConnections=new Map,n.registerTargetDispatcher(this),this._targetAgent.invoke_setDiscoverTargets({discover:!0}),e.InspectorFrontendHostInstance.events.addEventListener(t.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this),e.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),e.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0)}_devicesDiscoveryConfigChanged(e){const t=e.data,n=[];for(const e of t.networkDiscoveryConfig){const t=e.split(":"),s=parseInt(t[1],10);t[0]&&s&&n.push({host:t[0],port:s})}this._targetAgent.invoke_setRemoteLocations({locations:n})}dispose(){e.InspectorFrontendHostInstance.events.removeEventListener(t.Events.DevicesDiscoveryConfigChanged,this._devicesDiscoveryConfigChanged,this);for(const e of this._childTargets.keys())this.detachedFromTarget({sessionId:e})}targetCreated({targetInfo:e}){"node"!==e.type||e.attached||this._targetAgent.invoke_attachToTarget({targetId:e.targetId,flatten:!1})}targetInfoChanged(e){}targetDestroyed(e){}attachedToTarget({sessionId:e,targetInfo:t}){const n=k(w.nodejsS,{PH1:t.url}),s=new T(this._targetAgent,e);this._childConnections.set(e,s);const o=this._targetManager.createTarget(t.targetId,n,_.Type.Node,this._parentTarget,void 0,void 0,s);this._childTargets.set(e,o),o.runtimeAgent().invoke_runIfWaitingForDebugger()}detachedFromTarget({sessionId:e}){const t=this._childTargets.get(e);t&&t.dispose("target terminated"),this._childTargets.delete(e),this._childConnections.delete(e)}receivedMessageFromTarget({sessionId:e,message:t}){const n=this._childConnections.get(e),s=n?n._onMessage:null;s&&s.call(null,t)}targetCrashed(e){}}class T{constructor(e,t){this._targetAgent=e,this._sessionId=t,this._onMessage=null,this._onDisconnect=null}setOnMessage(e){this._onMessage=e}setOnDisconnect(e){this._onDisconnect=e}sendRawMessage(e){this._targetAgent.invoke_sendMessageToTarget({message:e,sessionId:this._sessionId})}async disconnect(){this._onDisconnect&&this._onDisconnect.call(null,"force disconnect"),this._onDisconnect=null,this._onMessage=null,await this._targetAgent.invoke_detachFromTarget({sessionId:this._sessionId})}}_.SDKModel.register(I,_.Capability.Target,!0);var E=Object.freeze({__proto__:null,UIStrings:w,NodeMainImpl:D,NodeChildTargetManager:I,NodeConnection:T});export{f as NodeConnectionsPanel,E as NodeMain};

import{SDKModel as e,DebuggerModel as t,DOMDebuggerModel as n,RuntimeModel as i}from"../sdk/sdk.js";import{ls as s}from"../platform/platform.js";import{Widget as o,TreeOutline as a,Context as r,UIUtils as d,ARIAUtils as c,ViewManager as l,ListModel as h,ListControl as p,ContextMenu as m,Toolbar as u,InplaceEditor as k}from"../ui/ui.js";import{UIString as g,Linkifier as b,Revealer as _}from"../common/common.js";import{DebuggerPausedMessage as f}from"../sources/sources.js";import{EventListenersView as E}from"../event_listeners/event_listeners.js";class x extends o.VBox{constructor(n,i,s,o){super(!0),this._categoriesTreeOutline=new a.TreeOutlineInShadow,this._categoriesTreeOutline.registerRequiredCSS("browser_debugger/categorizedBreakpointsSidebarPane.css",{enableLegacyPatching:!0}),this._categoriesTreeOutline.setShowSelectionOnKeyboardFocus(!0),this.contentElement.appendChild(this._categoriesTreeOutline.element),this._viewId=s,this._detailsPausedReason=o,this._categories=new Map;for(const e of n)this._categories.has(e)||this._createCategory(e);if(n.length>0){const e=this._categories.get(n[0]);e&&e.element.select()}this._breakpoints=new Map;for(const e of i)this._createBreakpoint(e);e.TargetManager.instance().addModelListener(t.DebuggerModel,t.Events.DebuggerPaused,this._update,this),e.TargetManager.instance().addModelListener(t.DebuggerModel,t.Events.DebuggerResumed,this._update,this),r.Context.instance().addFlavorChangeListener(e.Target,this._update,this)}focus(){this._categoriesTreeOutline.forceSelect()}_createCategory(e){const t=d.CheckboxLabel.create(e);t.checkboxElement.addEventListener("click",this._categoryCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const n=new a.TreeElement(t);n.listItemElement.addEventListener("keydown",(t=>{if(" "===t.key){const n=this._categories.get(e);n&&n.checkbox.click(),t.consume(!0)}})),t.checkboxElement.addEventListener("focus",(()=>n.listItemElement.focus())),c.setChecked(n.listItemElement,!1),this._categoriesTreeOutline.appendChild(n),this._categories.set(e,{element:n,checkbox:t.checkboxElement})}_createBreakpoint(e){const t=d.CheckboxLabel.create(e.title());t.classList.add("source-code"),t.checkboxElement.addEventListener("click",this._breakpointCheckboxClicked.bind(this,e),!0),t.checkboxElement.tabIndex=-1;const n=new a.TreeElement(t);n.listItemElement.addEventListener("keydown",(t=>{if(" "===t.key){const n=this._breakpoints.get(e);n&&n.checkbox.click(),t.consume(!0)}})),t.checkboxElement.addEventListener("focus",(()=>n.listItemElement.focus())),c.setChecked(n.listItemElement,!1),n.listItemElement.createChild("div","breakpoint-hit-marker");const i=this._categories.get(e.category());i&&i.element.appendChild(n),this._breakpoints.set(e,{element:n,checkbox:t.checkboxElement})}_getBreakpointFromPausedDetails(e){return null}_update(){const n=r.Context.instance().flavor(e.Target),i=n?n.model(t.DebuggerModel):null,o=i?i.debuggerPausedDetails():null;if(!o||o.reason!==this._detailsPausedReason||!o.auxData)return void(this._highlightedElement&&(c.setDescription(this._highlightedElement,""),this._highlightedElement.classList.remove("breakpoint-hit"),delete this._highlightedElement));const a=this._getBreakpointFromPausedDetails(o);if(!a)return;l.ViewManager.instance().showView(this._viewId);const d=this._categories.get(a.category());d&&d.element.expand();const h=this._breakpoints.get(a);h&&(this._highlightedElement=h.element.listItemElement,c.setDescription(this._highlightedElement,s`breakpoint hit`),this._highlightedElement.classList.add("breakpoint-hit"))}_categoryCheckboxClicked(e){const t=this._categories.get(e);if(!t)return;const n=t.checkbox.checked;c.setChecked(t.element.listItemElement,n);for(const t of this._breakpoints.keys())if(t.category()===e){const e=this._breakpoints.get(t);e&&(e.checkbox.checked=n,this._toggleBreakpoint(t,n))}}_toggleBreakpoint(e,t){e.setEnabled(t)}_breakpointCheckboxClicked(e){const t=this._breakpoints.get(e);if(!t)return;this._toggleBreakpoint(e,t.checkbox.checked),c.setChecked(t.element.listItemElement,t.checkbox.checked);let n=!1,i=!1;for(const t of this._breakpoints.keys())t.category()===e.category()&&(t.enabled()?n=!0:i=!0);const s=this._categories.get(e.category());s&&(s.checkbox.checked=n,s.checkbox.indeterminate=n&&i,s.checkbox.indeterminate?c.setCheckboxAsIndeterminate(s.element.listItemElement):c.setChecked(s.element.listItemElement,n))}}let v;class B extends x{constructor(){const e=n.DOMDebuggerManager.instance().cspViolationBreakpoints(),t=e.map((e=>e.category()));t.sort(),super(t,e,"sources.cspViolationBreakpoints",Protocol.Debugger.PausedEventReason.CSPViolation)}static instance(){return v||(v=new B),v}_getBreakpointFromPausedDetails(e){const t=e.auxData&&e.auxData.violationType?e.auxData.violationType:"",i=n.DOMDebuggerManager.instance().cspViolationBreakpoints().find((e=>e.type()===t));return i||null}_toggleBreakpoint(e,t){e.setEnabled(t),n.DOMDebuggerManager.instance().updateCSPViolationBreakpoints()}}var M=Object.freeze({__proto__:null,CSPViolationBreakpointsSidebarPane:B});let D;class C extends o.VBox{constructor(){super(!0),this.registerRequiredCSS("browser_debugger/domBreakpointsSidebarPane.css",{enableLegacyPatching:!1}),this.elementToCheckboxes=new WeakMap,this._emptyElement=this.contentElement.createChild("div","gray-info-message"),this._emptyElement.textContent=g.UIString("No breakpoints"),this._breakpoints=new h.ListModel,this._list=new p.ListControl(this._breakpoints,this,p.ListMode.NonViewport),this.contentElement.appendChild(this._list.element),this._list.element.classList.add("breakpoint-list","hidden"),c.markAsList(this._list.element),c.setAccessibleName(this._list.element,s`DOM Breakpoints list`),this._emptyElement.tabIndex=-1,e.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointAdded,this._breakpointAdded,this),e.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointToggled,this._breakpointToggled,this),e.TargetManager.instance().addModelListener(n.DOMDebuggerModel,n.Events.DOMBreakpointsRemoved,this._breakpointsRemoved,this);for(const t of e.TargetManager.instance().models(n.DOMDebuggerModel)){t.retrieveDOMBreakpoints();for(const e of t.domBreakpoints())this._addBreakpoint(e)}this._highlightedBreakpoint=null,this._update()}static instance(){return D||(D=new C),D}createElementForItem(e){const t=document.createElement("div");t.classList.add("breakpoint-entry"),t.addEventListener("contextmenu",this._contextMenu.bind(this,e),!0),c.markAsListitem(t),t.tabIndex=-1;const n=d.CheckboxLabel.create(void 0,e.enabled),i=n.checkboxElement;i.addEventListener("click",this._checkboxClicked.bind(this,e),!1),i.tabIndex=-1,this.elementToCheckboxes.set(t,i),t.appendChild(n),t.addEventListener("keydown",(e=>{" "===e.key&&(n.checkboxElement.click(),e.consume(!0))}));const o=document.createElement("div");o.classList.add("dom-breakpoint"),t.appendChild(o);const a=document.createElement("div"),r=L.get(e.type);a.textContent=r||null,c.setAccessibleName(i,s`${r}`);const l=document.createElement("monospace");l.style.display="block",o.appendChild(l),b.Linkifier.linkify(e.node,{preventKeyboardFocus:!0,tooltip:void 0}).then((e=>{l.appendChild(e),c.setAccessibleName(i,s`${r}: ${e.deepTextContent()}`)})),o.appendChild(a);const h=e.enabled?s`checked`:s`unchecked`;return e===this._highlightedBreakpoint?(t.classList.add("breakpoint-hit"),c.setDescription(t,s`${h} breakpoint hit`),c.setDescription(i,s`breakpoint hit`)):c.setDescription(t,h),this._emptyElement.classList.add("hidden"),this._list.element.classList.remove("hidden"),t}heightForItem(e){return 0}isItemSelectable(e){return!0}updateSelectedItemARIA(e,t){return!0}selectedItemChanged(e,t,n,i){n&&(n.tabIndex=-1),i&&(this.setDefaultFocusedElement(i),i.tabIndex=0,this.hasFocus()&&i.focus())}_breakpointAdded(e){this._addBreakpoint(e.data)}_breakpointToggled(e){const t=this.hasFocus(),n=e.data;this._list.refreshItem(n),t&&this.focus()}_breakpointsRemoved(e){const t=this.hasFocus(),n=e.data;let i=-1;for(const e of n){const t=this._breakpoints.indexOf(e);t>=0&&(this._breakpoints.remove(t),i=t)}if(0===this._breakpoints.length)this._emptyElement.classList.remove("hidden"),this.setDefaultFocusedElement(this._emptyElement),this._list.element.classList.add("hidden");else if(i>=0){const e=this._breakpoints.at(i);e&&this._list.selectItem(e)}t&&this.focus()}_addBreakpoint(e){this._breakpoints.insertWithComparator(e,((e,t)=>e.type>t.type?-1:e.type<t.type?1:0)),this._list.selectedItem()&&this.hasFocus()||this._list.selectItem(this._breakpoints.at(0))}_contextMenu(e,t){const n=new m.ContextMenu(t);n.defaultSection().appendItem(s`Reveal DOM node in Elements panel`,(()=>_.reveal(e.node))),n.defaultSection().appendItem(g.UIString("Remove breakpoint"),(()=>{e.domDebuggerModel.removeDOMBreakpoint(e.node,e.type)})),n.defaultSection().appendItem(g.UIString("Remove all DOM breakpoints"),(()=>{e.domDebuggerModel.removeAllDOMBreakpoints()})),n.show()}_checkboxClicked(e,t){e.domDebuggerModel.toggleDOMBreakpoint(e,!!t.target&&t.target.checked)}flavorChanged(e){this._update()}_update(){const e=r.Context.instance().flavor(t.DebuggerPausedDetails);if(this._highlightedBreakpoint){const e=this._highlightedBreakpoint;this._highlightedBreakpoint=null,this._list.refreshItem(e)}if(!e||!e.auxData||e.reason!==Protocol.Debugger.PausedEventReason.DOM)return;const i=e.debuggerModel.target().model(n.DOMDebuggerModel);if(!i)return;const s=i.resolveDOMBreakpointData(e.auxData);if(s){for(const e of this._breakpoints)e.node===s.node&&e.type===s.type&&(this._highlightedBreakpoint=e);this._highlightedBreakpoint&&this._list.refreshItem(this._highlightedBreakpoint),l.ViewManager.instance().showView("sources.domBreakpoints")}}}const L=new Map([[Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified,g.UIString("Subtree modified")],[Protocol.DOMDebugger.DOMBreakpointType.AttributeModified,g.UIString("Attribute modified")],[Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved,g.UIString("Node removed")]]);var I=Object.freeze({__proto__:null,DOMBreakpointsSidebarPane:C,BreakpointTypeLabels:L,ContextMenuProvider:class{appendApplicableItems(e,t,i){const s=i;if(s.pseudoType())return;const o=s.domModel().target().model(n.DOMDebuggerModel);if(!o)return;function a(e){o&&(o.hasDOMBreakpoint(s,e)?o.removeDOMBreakpoint(s,e):o.setDOMBreakpoint(s,e))}const r=t.debugSection().appendSubMenuItem(g.UIString("Break on"));for(const e of Object.values(Protocol.DOMDebugger.DOMBreakpointType)){const t=f.BreakpointTypeNouns.get(e);t&&r.defaultSection().appendCheckboxItem(t,a.bind(null,e),o.hasDOMBreakpoint(s,e))}}}});let w;class y extends x{constructor(){const e=n.DOMDebuggerManager.instance().eventListenerBreakpoints().map((e=>e.category()));e.sort();super(e,n.DOMDebuggerManager.instance().eventListenerBreakpoints(),"sources.eventListenerBreakpoints",Protocol.Debugger.PausedEventReason.EventListener)}static instance(){return w||(w=new y),w}_getBreakpointFromPausedDetails(e){return n.DOMDebuggerManager.instance().resolveEventListenerBreakpoint(e.auxData)}}var O=Object.freeze({__proto__:null,EventListenerBreakpointsSidebarPane:y});let S;class P extends o.VBox{constructor(){super(),this._refreshButton=new u.ToolbarButton(s`Refresh global listeners`,"largeicon-refresh"),this._refreshButton.addEventListener(u.ToolbarButton.Events.Click,this._refreshClick,this),this._refreshButton.setEnabled(!1),this._eventListenersView=new E.EventListenersView(this.update.bind(this),!0),this._eventListenersView.show(this.element),this.setDefaultFocusedChild(this._eventListenersView)}static instance(){return S||(S=new P),S}toolbarItems(){return[this._refreshButton]}update(){this._lastRequestedContext&&(this._lastRequestedContext.runtimeModel.releaseObjectGroup(R),delete this._lastRequestedContext);const e=r.Context.instance().flavor(i.ExecutionContext);if(!e)return this._eventListenersView.reset(),void this._eventListenersView.addEmptyHolderIfNeeded();this._lastRequestedContext=e,Promise.all([this._windowObjectInContext(e)]).then(this._eventListenersView.addObjects.bind(this._eventListenersView))}wasShown(){super.wasShown(),r.Context.instance().addFlavorChangeListener(i.ExecutionContext,this.update,this),this._refreshButton.setEnabled(!0),this.update()}willHide(){super.willHide(),r.Context.instance().removeFlavorChangeListener(i.ExecutionContext,this.update,this),this._refreshButton.setEnabled(!1)}_windowObjectInContext(e){return e.evaluate({expression:"self",objectGroup:R,includeCommandLineAPI:!1,silent:!0,returnByValue:!1,generatePreview:!1,timeout:void 0,throwOnSideEffect:void 0,disableBreaks:void 0,replMode:void 0,allowUnsafeEvalBlockedByCSP:void 0},!1,!1).then((e=>"error"in e||e.exceptionDetails?null:e.object))}_refreshClick(e){e.data.consume(),this.update()}}const R="object-event-listeners-sidebar-pane";var T=Object.freeze({__proto__:null,ObjectEventListenersSidebarPane:P,objectGroupName:R});const V=new WeakMap,A=new WeakMap;let F;class j extends o.VBox{constructor(){super(!0),this.registerRequiredCSS("browser_debugger/xhrBreakpointsSidebarPane.css",{enableLegacyPatching:!0}),this._breakpoints=new h.ListModel,this._list=new p.ListControl(this._breakpoints,this,p.ListMode.NonViewport),this.contentElement.appendChild(this._list.element),this._list.element.classList.add("breakpoint-list","hidden"),c.markAsList(this._list.element),c.setAccessibleName(this._list.element,s`XHR/fetch Breakpoints`),this._emptyElement=this.contentElement.createChild("div","gray-info-message"),this._emptyElement.textContent=g.UIString("No breakpoints"),this._breakpointElements=new Map,this._addButton=new u.ToolbarButton(s`Add XHR/fetch breakpoint`,"largeicon-add"),this._addButton.addEventListener(u.ToolbarButton.Events.Click,(e=>{this._addButtonClicked()})),this._emptyElement.addEventListener("contextmenu",this._emptyElementContextMenu.bind(this),!0),this._emptyElement.tabIndex=-1,this._restoreBreakpoints(),this._update()}static instance(){return F||(F=new j),F}toolbarItems(){return[this._addButton]}_emptyElementContextMenu(e){const t=new m.ContextMenu(e);t.defaultSection().appendItem(g.UIString("Add breakpoint"),this._addButtonClicked.bind(this)),t.show()}async _addButtonClicked(){await l.ViewManager.instance().showView("sources.xhrBreakpoints");const e=document.createElement("p");e.classList.add("breakpoint-condition"),e.textContent=g.UIString("Break when URL contains:");const t=e.createChild("span","breakpoint-condition-input");function i(t,i,s){this._removeListElement(e),t&&(n.DOMDebuggerManager.instance().addXHRBreakpoint(s,!0),this._setBreakpoint(s)),this._update()}c.setAccessibleName(t,s`URL Breakpoint`),this._addListElement(e,this._list.element.firstChild);const o=new k.Config(i.bind(this,!0),i.bind(this,!1));k.InplaceEditor.startEditing(t,o)}heightForItem(e){return 0}isItemSelectable(e){return!0}_setBreakpoint(e){-1!==this._breakpoints.indexOf(e)?this._list.refreshItem(e):this._breakpoints.insertWithComparator(e,((e,t)=>e>t?1:e<t?-1:0)),this._list.selectedItem()&&this.hasFocus()||this._list.selectItem(this._breakpoints.at(0))}createElementForItem(e){const t=document.createElement("div");c.markAsListitem(t);const i=t.createChild("div","breakpoint-entry");V.set(t,i);const o=n.DOMDebuggerManager.instance().xhrBreakpoints().get(e)||!1;c.markAsCheckbox(i),c.setChecked(i,o),i.addEventListener("contextmenu",this._contextMenu.bind(this,e),!0);const a=e?g.UIString('URL contains "%s"',e):g.UIString("Any XHR or fetch"),r=d.CheckboxLabel.create(a,o);return c.markAsHidden(r),c.setAccessibleName(i,a),i.appendChild(r),r.checkboxElement.addEventListener("click",this._checkboxClicked.bind(this,e,o),!1),i.addEventListener("click",(t=>{t.target===i&&this._checkboxClicked(e,o)}),!1),A.set(i,r.checkboxElement),r.checkboxElement.tabIndex=-1,i.tabIndex=-1,e===this._list.selectedItem()&&(i.tabIndex=0,this.setDefaultFocusedElement(i)),i.addEventListener("keydown",(t=>{let n=!1;" "===t.key?(this._checkboxClicked(e,o),n=!0):"Enter"===t.key&&(this._labelClicked(e),n=!0),n&&t.consume(!0)})),e===this._hitBreakpoint&&(i.classList.add("breakpoint-hit"),c.setDescription(i,s`breakpoint hit`)),r.classList.add("cursor-auto"),r.textElement.addEventListener("dblclick",this._labelClicked.bind(this,e),!1),this._breakpointElements.set(e,t),t}selectedItemChanged(e,t,n,i){if(n){const e=V.get(n);if(!e)throw new Error("Expected breakpoint entry to be found for an element");e.tabIndex=-1}if(i){const e=V.get(i);if(!e)throw new Error("Expected breakpoint entry to be found for an element");this.setDefaultFocusedElement(e),e.tabIndex=0,this.hasFocus()&&e.focus()}}updateSelectedItemARIA(e,t){return!0}_removeBreakpoint(e){const t=this._breakpoints.indexOf(e);t>=0&&this._breakpoints.remove(t),this._breakpointElements.delete(e),this._update()}_addListElement(e,t){this._list.element.insertBefore(e,t),this._emptyElement.classList.add("hidden"),this._list.element.classList.remove("hidden")}_removeListElement(e){this._list.element.removeChild(e),this._list.element.firstElementChild||(this._emptyElement.classList.remove("hidden"),this._list.element.classList.add("hidden"))}_contextMenu(e,t){const i=new m.ContextMenu(t);const s=g.UIString("Remove all breakpoints");i.defaultSection().appendItem(g.UIString("Add breakpoint"),this._addButtonClicked.bind(this)),i.defaultSection().appendItem(g.UIString("Remove breakpoint"),function(){n.DOMDebuggerManager.instance().removeXHRBreakpoint(e),this._removeBreakpoint(e)}.bind(this)),i.defaultSection().appendItem(s,function(){for(const e of this._breakpointElements.keys())n.DOMDebuggerManager.instance().removeXHRBreakpoint(e),this._removeBreakpoint(e);this._update()}.bind(this)),i.show()}_checkboxClicked(e,t){const i=this.hasFocus();n.DOMDebuggerManager.instance().toggleXHRBreakpoint(e,!t),this._list.refreshItem(e),this._list.selectItem(e),i&&this.focus()}_labelClicked(e){const t=this._breakpointElements.get(e),i=document.createElement("span");function s(s,o,a){if(this._removeListElement(i),s){n.DOMDebuggerManager.instance().removeXHRBreakpoint(e),this._removeBreakpoint(e);let i=!0;if(t){const e=V.get(t),n=e?A.get(e):void 0;n&&(i=n.checked)}n.DOMDebuggerManager.instance().addXHRBreakpoint(a,i),this._setBreakpoint(a),this._list.selectItem(a)}else t&&t.classList.remove("hidden");this.focus()}i.classList.add("breakpoint-condition"),i.textContent=e,t&&(this._list.element.insertBefore(i,t),t.classList.add("hidden"));const o=new k.Config(s.bind(this,!0),s.bind(this,!1));k.InplaceEditor.startEditing(i,o)}flavorChanged(e){this._update()}_update(){const e=0===this._breakpoints.length;this._list.element.classList.toggle("hidden",e),this._emptyElement.classList.toggle("hidden",!e);const n=r.Context.instance().flavor(t.DebuggerPausedDetails);if(!n||n.reason!==Protocol.Debugger.PausedEventReason.XHR){if(this._hitBreakpoint){const e=this._hitBreakpoint;delete this._hitBreakpoint,this._breakpoints.indexOf(e)>=0&&this._list.refreshItem(e)}return}const i=n.auxData&&n.auxData.breakpointURL;this._hitBreakpoint=i,this._breakpoints.indexOf(i)<0||(this._list.refreshItem(i),l.ViewManager.instance().showView("sources.xhrBreakpoints"))}_restoreBreakpoints(){const e=n.DOMDebuggerManager.instance().xhrBreakpoints();for(const t of e.keys())this._setBreakpoint(t)}}var U=Object.freeze({__proto__:null,XHRBreakpointsSidebarPane:j});export{M as CSPViolationBreakpointsSidebarPane,I as DOMBreakpointsSidebarPane,O as EventListenerBreakpointsSidebarPane,T as ObjectEventListenersSidebarPane,U as XHRBreakpointsSidebarPane};

import{InspectorFrontendHost as e}from"../host/host.js";import{i18n as t}from"../i18n/i18n.js";import{InspectorBackend as r}from"../protocol_client/protocol_client.js";import{SDKModel as o}from"../sdk/sdk.js";import{JSONView as i}from"../source_frame/source_frame.js";import{TextUtils as s}from"../text_utils/text_utils.js";import{DataGridUtils as n,DataGridControllerIntegrator as a,DataGridRenderers as d}from"../ui/components/components.js";import{Widget as l,Toolbar as c,SplitWidget as g,FilterSuggestionBuilder as h,TabbedPane as u,EmptyWidget as m}from"../ui/ui.js";const p={method:"Method",direction:"Direction",request:"Request",response:"Response",timestamp:"Timestamp",target:"Target",record:"Record",clearAll:"Clear all",filter:"Filter",documentation:"Documentation",sMs:"{PH1} ms",noMessageSelected:"No message selected"},_=t.registerUIStrings("protocol_monitor/ProtocolMonitor.js",p),b=t.getLocalizedString.bind(void 0,_),I=e=>b(p.sMs,{PH1:e});class w extends l.VBox{constructor(){super(!0),this._started=!1,this._startTime=0,this._dataGridRowForId=new Map,this.registerRequiredCSS("protocol_monitor/protocolMonitor.css",{enableLegacyPatching:!0});const t=new c.Toolbar("protocol-monitor-toolbar",this.contentElement),r=new c.ToolbarToggle(b(p.record),"largeicon-start-recording","largeicon-stop-recording");r.addEventListener(c.ToolbarButton.Events.Click,(()=>{r.setToggled(!r.toggled()),this._setRecording(r.toggled())})),r.setToggleWithRedColor(!0),t.appendToolbarItem(r),r.setToggled(!0);const o=new c.ToolbarButton(b(p.clearAll),"largeicon-clear");o.addEventListener(c.ToolbarButton.Events.Click,(()=>{this._dataGridIntegrator.update({...this._dataGridIntegrator.data(),rows:[]})})),t.appendToolbarItem(o);const i=new g.SplitWidget(!0,!0,"protocol-monitor-panel-split",250);i.show(this.contentElement),this._infoWidget=new v;const d={columns:[{id:"method",title:b(p.method),sortable:!1,widthWeighting:1,visible:!0,hideable:!1},{id:"direction",title:b(p.direction),sortable:!0,widthWeighting:1,visible:!1,hideable:!0},{id:"request",title:b(p.request),sortable:!1,widthWeighting:1,visible:!0,hideable:!0},{id:"response",title:b(p.response),sortable:!1,widthWeighting:1,visible:!0,hideable:!0},{id:"timestamp",title:b(p.timestamp),sortable:!0,widthWeighting:1,visible:!1,hideable:!0},{id:"target",title:b(p.target),sortable:!0,widthWeighting:1,visible:!1,hideable:!0}],rows:[],contextMenus:{bodyRow:(t,r,o)=>{const i=n.getRowEntryForColumnId(o,"method"),s=n.getRowEntryForColumnId(o,"direction");t.defaultSection().appendItem(b(p.filter),(()=>{const e=n.getRowEntryForColumnId(o,"method");this._textFilterUI.setValue("method:"+e.value,!0)})),t.defaultSection().appendItem(b(p.documentation),(()=>{if(!i.value)return;const[t,r]=String(i.value).split("."),o="sent"===s.value?"method":"event";e.InspectorFrontendHostInstance.openInNewTab(`https://chromedevtools.github.io/devtools-protocol/tot/${t}#${o}-${r}`)}))}}};this._dataGridIntegrator=new a.DataGridControllerIntegrator(d),this._dataGridIntegrator.dataGrid.addEventListener("cell-focused",(e=>{const t=e.data.row,r={request:n.getRowEntryForColumnId(t,"request"),response:n.getRowEntryForColumnId(t,"response"),direction:n.getRowEntryForColumnId(t,"direction")};this._infoWidget.render(r)})),this._dataGridIntegrator.addEventListener("new-user-filter-text",(e=>{const t=e;this._textFilterUI.setValue(t.data.filterText,!0)})),i.setMainWidget(this._dataGridIntegrator),i.setSidebarWidget(this._infoWidget);const l=["method","request","response","direction"];this._filterParser=new s.FilterParser(l),this._suggestionBuilder=new h.FilterSuggestionBuilder(l),this._textFilterUI=new c.ToolbarInput(b(p.filter),"",1,.2,"",this._suggestionBuilder.completions.bind(this._suggestionBuilder),!0),this._textFilterUI.addEventListener(c.ToolbarInput.Event.TextChanged,(e=>{const t=e.data,r=this._filterParser.parse(t);this._dataGridIntegrator.update({...this._dataGridIntegrator.data(),filters:r})})),t.appendToolbarItem(this._textFilterUI)}wasShown(){this._started||(this._started=!0,this._startTime=Date.now(),this._setRecording(!0))}_setRecording(e){const t=r.test;e?(t.onMessageSent=this._messageSent.bind(this),t.onMessageReceived=this._messageReceived.bind(this)):(t.onMessageSent=null,t.onMessageReceived=null)}_targetToString(e){return e?e.decorateLabel(`${e.name()} ${e===o.TargetManager.instance().mainTarget()?"":e.id()}`):""}_messageReceived(e,t){if("id"in e){const t=this._dataGridRowForId.get(e.id);if(!t)return;const r=this._dataGridIntegrator.data().rows.findIndex((e=>t===e)),o={...t,cells:t.cells.map((t=>"response"===t.columnId?{...t,value:JSON.stringify(e.result||e.error)}:t))},i=[...this._dataGridIntegrator.data().rows];return i[r]=o,this._dataGridRowForId.delete(e.id),void this._dataGridIntegrator.update({...this._dataGridIntegrator.data(),rows:i})}const r=t,o={cells:[{columnId:"method",value:e.method},{columnId:"request",value:"",renderer:d.codeBlockRenderer},{columnId:"response",value:JSON.stringify(e.params),renderer:d.codeBlockRenderer},{columnId:"timestamp",value:Date.now()-this._startTime,renderer:I},{columnId:"direction",value:"received"},{columnId:"target",value:this._targetToString(r)}],hidden:!1};this._dataGridIntegrator.update({...this._dataGridIntegrator.data(),rows:this._dataGridIntegrator.data().rows.concat([o])})}_messageSent(e,t){const r=t,o={cells:[{columnId:"method",value:e.method},{columnId:"request",value:JSON.stringify(e.params),renderer:d.codeBlockRenderer},{columnId:"response",value:"(pending)",renderer:d.codeBlockRenderer},{columnId:"timestamp",value:Date.now()-this._startTime,renderer:I},{columnId:"direction",value:"sent"},{columnId:"target",value:this._targetToString(r)}],hidden:!1};this._dataGridRowForId.set(e.id,o),this._dataGridIntegrator.update({...this._dataGridIntegrator.data(),rows:this._dataGridIntegrator.data().rows.concat([o])})}}class v extends l.VBox{constructor(){super(),this._tabbedPane=new u.TabbedPane,this._tabbedPane.appendTab("request",b(p.request),new l.Widget),this._tabbedPane.appendTab("response",b(p.response),new l.Widget),this._tabbedPane.show(this.contentElement),this._tabbedPane.selectTab("response"),this.render(null)}render(e){if(!e||!e.request||!e.response)return this._tabbedPane.changeTabView("request",new m.EmptyWidget(b(p.noMessageSelected))),void this._tabbedPane.changeTabView("response",new m.EmptyWidget(b(p.noMessageSelected)));const t=e&&e.direction&&"sent"===e.direction.value;this._tabbedPane.setTabEnabled("request",Boolean(t)),t||this._tabbedPane.selectTab("response");const r=JSON.parse(String(e.request.value)||"null");this._tabbedPane.changeTabView("request",i.JSONView.createViewSync(r));const o=JSON.parse(String(e.response.value)||"null");this._tabbedPane.changeTabView("response",i.JSONView.createViewSync(o))}}var T=Object.freeze({__proto__:null,UIStrings:p,ProtocolMonitorImpl:w,InfoWidget:v});export{T as ProtocolMonitor};

var perfetto = (function () {
	'use strict';

	function createCommonjsModule(fn, basedir, module) {
		return module = {
		  path: basedir,
		  exports: {},
		  require: function (path, base) {
	      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
	    }
		}, fn(module, module.exports), module.exports;
	}

	function commonjsRequire () {
		throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
	}

	var trace_processor = createCommonjsModule(function (module, exports) {
	var trace_processor_wasm = function(trace_processor_wasm) {
	  trace_processor_wasm = trace_processor_wasm || {};

	// The Module object: Our interface to the outside world. We import
	// and export values on it. There are various ways Module can be used:
	// 1. Not defined. We create it here
	// 2. A function parameter, function(Module) { ..generated code.. }
	// 3. pre-run appended it, var Module = {}; ..generated code..
	// 4. External script tag defines var Module.
	// We need to check if Module already exists (e.g. case 3 above).
	// Substitution will be replaced with actual code on later stage of the build,
	// this way Closure Compiler will not mangle it (e.g. case 4. above).
	// Note that if you want to run closure, and also to use Module
	// after the generated code, you will need to define   var Module = {};
	// before the code. Then that object will be used in the code, and you
	// can continue to use Module afterwards as well.
	var Module = typeof trace_processor_wasm !== 'undefined' ? trace_processor_wasm : {};

	// --pre-jses are emitted after the Module integration code, so that they can
	// refer to Module (if they choose; they can also define Module)
	// {{PRE_JSES}}

	// Sometimes an existing Module object exists with properties
	// meant to overwrite the default module functionality. Here
	// we collect those properties and reapply _after_ we configure
	// the current environment's defaults to avoid having to be so
	// defensive during initialization.
	var moduleOverrides = {};
	var key;
	for (key in Module) {
	  if (Module.hasOwnProperty(key)) {
	    moduleOverrides[key] = Module[key];
	  }
	}

	Module['arguments'] = [];
	Module['thisProgram'] = './this.program';
	Module['quit'] = function(status, toThrow) {
	  throw toThrow;
	};
	Module['preRun'] = [];
	Module['postRun'] = [];

	// The environment setup code below is customized to use Module.
	// *** Environment setup code ***
	var ENVIRONMENT_IS_WEB = false;
	var ENVIRONMENT_IS_WORKER = false;
	var ENVIRONMENT_IS_NODE = false;
	var ENVIRONMENT_IS_SHELL = false;

	// Three configurations we can be running in:
	// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
	// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
	// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

	if (Module['ENVIRONMENT']) {
	  if (Module['ENVIRONMENT'] === 'WEB') {
	    ENVIRONMENT_IS_WEB = true;
	  } else if (Module['ENVIRONMENT'] === 'WORKER') {
	    ENVIRONMENT_IS_WORKER = true;
	  } else if (Module['ENVIRONMENT'] === 'NODE') {
	    ENVIRONMENT_IS_NODE = true;
	  } else if (Module['ENVIRONMENT'] === 'SHELL') {
	    ENVIRONMENT_IS_SHELL = true;
	  } else {
	    throw new Error('Module[\'ENVIRONMENT\'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.');
	  }
	} else {
	  ENVIRONMENT_IS_WEB = typeof window === 'object';
	  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
	  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof commonjsRequire === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
	  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
	}


	if (ENVIRONMENT_IS_NODE) {
	  // Expose functionality in the same simple way that the shells work
	  // Note that we pollute the global namespace here, otherwise we break in node
	  var nodeFS;
	  var nodePath;

	  Module['read'] = function shell_read(filename, binary) {
	    var ret;
	      if (!nodeFS) nodeFS = require('fs');
	      if (!nodePath) nodePath = require('path');
	      filename = nodePath['normalize'](filename);
	      ret = nodeFS['readFileSync'](filename);
	    return binary ? ret : ret.toString();
	  };

	  Module['readBinary'] = function readBinary(filename) {
	    var ret = Module['read'](filename, true);
	    if (!ret.buffer) {
	      ret = new Uint8Array(ret);
	    }
	    assert(ret.buffer);
	    return ret;
	  };

	  if (process['argv'].length > 1) {
	    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
	  }

	  Module['arguments'] = process['argv'].slice(2);

	  // MODULARIZE will export the module in the proper place outside, we don't need to export here

	  process['on']('uncaughtException', function(ex) {
	    // suppress ExitStatus exceptions from showing an error
	    if (!(ex instanceof ExitStatus)) {
	      throw ex;
	    }
	  });
	  // Currently node will swallow unhandled rejections, but this behavior is
	  // deprecated, and in the future it will exit with error status.
	  process['on']('unhandledRejection', function(reason, p) {
	    Module['printErr']('node.js exiting due to unhandled promise rejection');
	    process['exit'](1);
	  });

	  Module['inspect'] = function () { return '[Emscripten Module object]'; };
	}
	else if (ENVIRONMENT_IS_SHELL) {
	  if (typeof read != 'undefined') {
	    Module['read'] = function shell_read(f) {
	      return read(f);
	    };
	  }

	  Module['readBinary'] = function readBinary(f) {
	    var data;
	    if (typeof readbuffer === 'function') {
	      return new Uint8Array(readbuffer(f));
	    }
	    data = read(f, 'binary');
	    assert(typeof data === 'object');
	    return data;
	  };

	  if (typeof scriptArgs != 'undefined') {
	    Module['arguments'] = scriptArgs;
	  } else if (typeof arguments != 'undefined') {
	    Module['arguments'] = arguments;
	  }

	  if (typeof quit === 'function') {
	    Module['quit'] = function(status, toThrow) {
	      quit(status);
	    };
	  }
	}
	else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
	  Module['read'] = function shell_read(url) {
	      var xhr = new XMLHttpRequest();
	      xhr.open('GET', url, false);
	      xhr.send(null);
	      return xhr.responseText;
	  };

	  if (ENVIRONMENT_IS_WORKER) {
	    Module['readBinary'] = function readBinary(url) {
	        var xhr = new XMLHttpRequest();
	        xhr.open('GET', url, false);
	        xhr.responseType = 'arraybuffer';
	        xhr.send(null);
	        return new Uint8Array(xhr.response);
	    };
	  }

	  Module['readAsync'] = function readAsync(url, onload, onerror) {
	    var xhr = new XMLHttpRequest();
	    xhr.open('GET', url, true);
	    xhr.responseType = 'arraybuffer';
	    xhr.onload = function xhr_onload() {
	      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
	        onload(xhr.response);
	        return;
	      }
	      onerror();
	    };
	    xhr.onerror = onerror;
	    xhr.send(null);
	  };

	  Module['setWindowTitle'] = function(title) { document.title = title; };
	}
	else {
	  // Unreachable because SHELL is dependent on the others
	  throw new Error('unknown runtime environment');
	}

	// console.log is checked first, as 'print' on the web will open a print dialogue
	// printErr is preferable to console.warn (works better in shells)
	// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
	Module['print'] = typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null);
	Module['printErr'] = typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || Module['print']);

	// *** Environment setup code ***

	// Closure helpers
	Module.print = Module['print'];
	Module.printErr = Module['printErr'];

	// Merge back in the overrides
	for (key in moduleOverrides) {
	  if (moduleOverrides.hasOwnProperty(key)) {
	    Module[key] = moduleOverrides[key];
	  }
	}
	// Free the object hierarchy contained in the overrides, this lets the GC
	// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
	moduleOverrides = undefined;



	// {{PREAMBLE_ADDITIONS}}

	var STACK_ALIGN = 16;

	// stack management, and other functionality that is provided by the compiled code,
	// should not be used before it is ready
	stackSave = stackRestore = stackAlloc = setTempRet0 = getTempRet0 = function() {
	  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
	};

	function staticAlloc(size) {
	  assert(!staticSealed);
	  var ret = STATICTOP;
	  STATICTOP = (STATICTOP + size + 15) & -16;
	  return ret;
	}

	function dynamicAlloc(size) {
	  assert(DYNAMICTOP_PTR);
	  var ret = HEAP32[DYNAMICTOP_PTR>>2];
	  var end = (ret + size + 15) & -16;
	  HEAP32[DYNAMICTOP_PTR>>2] = end;
	  if (end >= TOTAL_MEMORY) {
	    var success = enlargeMemory();
	    if (!success) {
	      HEAP32[DYNAMICTOP_PTR>>2] = ret;
	      return 0;
	    }
	  }
	  return ret;
	}

	function alignMemory(size, factor) {
	  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
	  var ret = size = Math.ceil(size / factor) * factor;
	  return ret;
	}

	function getNativeTypeSize(type) {
	  switch (type) {
	    case 'i1': case 'i8': return 1;
	    case 'i16': return 2;
	    case 'i32': return 4;
	    case 'i64': return 8;
	    case 'float': return 4;
	    case 'double': return 8;
	    default: {
	      if (type[type.length-1] === '*') {
	        return 4; // A pointer
	      } else if (type[0] === 'i') {
	        var bits = parseInt(type.substr(1));
	        assert(bits % 8 === 0);
	        return bits / 8;
	      } else {
	        return 0;
	      }
	    }
	  }
	}

	function warnOnce(text) {
	  if (!warnOnce.shown) warnOnce.shown = {};
	  if (!warnOnce.shown[text]) {
	    warnOnce.shown[text] = 1;
	    Module.printErr(text);
	  }
	}



	var jsCallStartIndex = 1;
	var functionPointers = new Array(32);

	// 'sig' parameter is only used on LLVM wasm backend
	function addFunction(func, sig) {
	  if (typeof sig === 'undefined') {
	    Module.printErr('Warning: addFunction: Provide a wasm function signature ' +
	                    'string as a second argument');
	  }
	  var base = 0;
	  for (var i = base; i < base + 32; i++) {
	    if (!functionPointers[i]) {
	      functionPointers[i] = func;
	      return jsCallStartIndex + i;
	    }
	  }
	  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
	}

	// The address globals begin at. Very low in memory, for code size and optimization opportunities.
	// Above 0 is static memory, starting with globals.
	// Then the stack.
	// Then 'dynamic' memory for sbrk.
	var GLOBAL_BASE = 1024;



	// === Preamble library stuff ===

	// Documentation for the public APIs defined in this file must be updated in:
	//    site/source/docs/api_reference/preamble.js.rst
	// A prebuilt local version of the documentation is available at:
	//    site/build/text/docs/api_reference/preamble.js.txt
	// You can also build docs locally as HTML or other formats in site/
	// An online HTML version (which may be of a different version of Emscripten)
	//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html



	//========================================
	// Runtime essentials
	//========================================

	var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()

	/** @type {function(*, string=)} */
	function assert(condition, text) {
	  if (!condition) {
	    abort('Assertion failed: ' + text);
	  }
	}

	// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
	function getCFunc(ident) {
	  var func = Module['_' + ident]; // closure exported function
	  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
	  return func;
	}

	var JSfuncs = {
	  // Helpers for cwrap -- it can't refer to Runtime directly because it might
	  // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
	  // out what the minified function name is.
	  'stackSave': function() {
	    stackSave();
	  },
	  'stackRestore': function() {
	    stackRestore();
	  },
	  // type conversion from js to c
	  'arrayToC' : function(arr) {
	    var ret = stackAlloc(arr.length);
	    writeArrayToMemory(arr, ret);
	    return ret;
	  },
	  'stringToC' : function(str) {
	    var ret = 0;
	    if (str !== null && str !== undefined && str !== 0) { // null string
	      // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
	      var len = (str.length << 2) + 1;
	      ret = stackAlloc(len);
	      stringToUTF8(str, ret, len);
	    }
	    return ret;
	  }
	};

	// For fast lookup of conversion functions
	var toC = {
	  'string': JSfuncs['stringToC'], 'array': JSfuncs['arrayToC']
	};

	// C calling interface.
	function ccall (ident, returnType, argTypes, args, opts) {
	  var func = getCFunc(ident);
	  var cArgs = [];
	  var stack = 0;
	  assert(returnType !== 'array', 'Return type should not be "array".');
	  if (args) {
	    for (var i = 0; i < args.length; i++) {
	      var converter = toC[argTypes[i]];
	      if (converter) {
	        if (stack === 0) stack = stackSave();
	        cArgs[i] = converter(args[i]);
	      } else {
	        cArgs[i] = args[i];
	      }
	    }
	  }
	  var ret = func.apply(null, cArgs);
	  if (returnType === 'string') ret = Pointer_stringify(ret);
	  else if (returnType === 'boolean') ret = Boolean(ret);
	  if (stack !== 0) {
	    stackRestore(stack);
	  }
	  return ret;
	}

	function cwrap (ident, returnType, argTypes) {
	  argTypes = argTypes || [];
	  var cfunc = getCFunc(ident);
	  // When the function takes numbers and returns a number, we can just return
	  // the original function
	  var numericArgs = argTypes.every(function(type){ return type === 'number'});
	  var numericRet = returnType !== 'string';
	  if (numericRet && numericArgs) {
	    return cfunc;
	  }
	  return function() {
	    return ccall(ident, returnType, argTypes, arguments);
	  }
	}

	/** @type {function(number, number, string, boolean=)} */
	function setValue(ptr, value, type, noSafe) {
	  type = type || 'i8';
	  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
	    switch(type) {
	      case 'i1': HEAP8[((ptr)>>0)]=value; break;
	      case 'i8': HEAP8[((ptr)>>0)]=value; break;
	      case 'i16': HEAP16[((ptr)>>1)]=value; break;
	      case 'i32': HEAP32[((ptr)>>2)]=value; break;
	      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
	      case 'float': HEAPF32[((ptr)>>2)]=value; break;
	      case 'double': HEAPF64[((ptr)>>3)]=value; break;
	      default: abort('invalid type for setValue: ' + type);
	    }
	}

	var ALLOC_NORMAL = 0; // Tries to use _malloc()
	var ALLOC_STATIC = 2; // Cannot be freed
	var ALLOC_NONE = 4; // Do not allocate

	// allocate(): This is for internal use. You can use it yourself as well, but the interface
	//             is a little tricky (see docs right below). The reason is that it is optimized
	//             for multiple syntaxes to save space in generated code. So you should
	//             normally not use allocate(), and instead allocate memory using _malloc(),
	//             initialize it with setValue(), and so forth.
	// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
	//        in *bytes* (note that this is sometimes confusing: the next parameter does not
	//        affect this!)
	// @types: Either an array of types, one for each byte (or 0 if no type at that position),
	//         or a single type which is used for the entire block. This only matters if there
	//         is initial data - if @slab is a number, then this does not matter at all and is
	//         ignored.
	// @allocator: How to allocate memory, see ALLOC_*
	/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
	function allocate(slab, types, allocator, ptr) {
	  var zeroinit, size;
	  if (typeof slab === 'number') {
	    zeroinit = true;
	    size = slab;
	  } else {
	    zeroinit = false;
	    size = slab.length;
	  }

	  var singleType = typeof types === 'string' ? types : null;

	  var ret;
	  if (allocator == ALLOC_NONE) {
	    ret = ptr;
	  } else {
	    ret = [typeof _malloc === 'function' ? _malloc : staticAlloc, stackAlloc, staticAlloc, dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
	  }

	  if (zeroinit) {
	    var stop;
	    ptr = ret;
	    assert((ret & 3) == 0);
	    stop = ret + (size & ~3);
	    for (; ptr < stop; ptr += 4) {
	      HEAP32[((ptr)>>2)]=0;
	    }
	    stop = ret + size;
	    while (ptr < stop) {
	      HEAP8[((ptr++)>>0)]=0;
	    }
	    return ret;
	  }

	  if (singleType === 'i8') {
	    if (slab.subarray || slab.slice) {
	      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
	    } else {
	      HEAPU8.set(new Uint8Array(slab), ret);
	    }
	    return ret;
	  }

	  var i = 0, type, typeSize, previousType;
	  while (i < size) {
	    var curr = slab[i];

	    type = singleType || types[i];
	    if (type === 0) {
	      i++;
	      continue;
	    }
	    assert(type, 'Must know what type to store in allocate!');

	    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

	    setValue(ret+i, curr, type);

	    // no need to look up size unless type changes, so cache it
	    if (previousType !== type) {
	      typeSize = getNativeTypeSize(type);
	      previousType = type;
	    }
	    i += typeSize;
	  }

	  return ret;
	}

	/** @type {function(number, number=)} */
	function Pointer_stringify(ptr, length) {
	  if (length === 0 || !ptr) return '';
	  // TODO: use TextDecoder
	  // Find the length, and check for UTF while doing so
	  var hasUtf = 0;
	  var t;
	  var i = 0;
	  while (1) {
	    assert(ptr + i < TOTAL_MEMORY);
	    t = HEAPU8[(((ptr)+(i))>>0)];
	    hasUtf |= t;
	    if (t == 0 && !length) break;
	    i++;
	    if (length && i == length) break;
	  }
	  if (!length) length = i;

	  var ret = '';

	  if (hasUtf < 128) {
	    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
	    var curr;
	    while (length > 0) {
	      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
	      ret = ret ? ret + curr : curr;
	      ptr += MAX_CHUNK;
	      length -= MAX_CHUNK;
	    }
	    return ret;
	  }
	  return UTF8ToString(ptr);
	}

	// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
	// a copy of that string as a Javascript String object.

	var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
	function UTF8ArrayToString(u8Array, idx) {
	  var endPtr = idx;
	  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
	  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
	  while (u8Array[endPtr]) ++endPtr;

	  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
	    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
	  } else {
	    var u0, u1, u2, u3, u4, u5;

	    var str = '';
	    while (1) {
	      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
	      u0 = u8Array[idx++];
	      if (!u0) return str;
	      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
	      u1 = u8Array[idx++] & 63;
	      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
	      u2 = u8Array[idx++] & 63;
	      if ((u0 & 0xF0) == 0xE0) {
	        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
	      } else {
	        u3 = u8Array[idx++] & 63;
	        if ((u0 & 0xF8) == 0xF0) {
	          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
	        } else {
	          u4 = u8Array[idx++] & 63;
	          if ((u0 & 0xFC) == 0xF8) {
	            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
	          } else {
	            u5 = u8Array[idx++] & 63;
	            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
	          }
	        }
	      }
	      if (u0 < 0x10000) {
	        str += String.fromCharCode(u0);
	      } else {
	        var ch = u0 - 0x10000;
	        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
	      }
	    }
	  }
	}

	// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
	// a copy of that string as a Javascript String object.

	function UTF8ToString(ptr) {
	  return UTF8ArrayToString(HEAPU8,ptr);
	}

	// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
	// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
	// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
	// Parameters:
	//   str: the Javascript string to copy.
	//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
	//   outIdx: The starting offset in the array to begin the copying.
	//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
	//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
	//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
	// Returns the number of bytes written, EXCLUDING the null terminator.

	function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
	  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
	    return 0;

	  var startIdx = outIdx;
	  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
	  for (var i = 0; i < str.length; ++i) {
	    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
	    // See http://unicode.org/faq/utf_bom.html#utf16-3
	    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
	    var u = str.charCodeAt(i); // possibly a lead surrogate
	    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
	    if (u <= 0x7F) {
	      if (outIdx >= endIdx) break;
	      outU8Array[outIdx++] = u;
	    } else if (u <= 0x7FF) {
	      if (outIdx + 1 >= endIdx) break;
	      outU8Array[outIdx++] = 0xC0 | (u >> 6);
	      outU8Array[outIdx++] = 0x80 | (u & 63);
	    } else if (u <= 0xFFFF) {
	      if (outIdx + 2 >= endIdx) break;
	      outU8Array[outIdx++] = 0xE0 | (u >> 12);
	      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
	      outU8Array[outIdx++] = 0x80 | (u & 63);
	    } else if (u <= 0x1FFFFF) {
	      if (outIdx + 3 >= endIdx) break;
	      outU8Array[outIdx++] = 0xF0 | (u >> 18);
	      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
	      outU8Array[outIdx++] = 0x80 | (u & 63);
	    } else if (u <= 0x3FFFFFF) {
	      if (outIdx + 4 >= endIdx) break;
	      outU8Array[outIdx++] = 0xF8 | (u >> 24);
	      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
	      outU8Array[outIdx++] = 0x80 | (u & 63);
	    } else {
	      if (outIdx + 5 >= endIdx) break;
	      outU8Array[outIdx++] = 0xFC | (u >> 30);
	      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
	      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
	      outU8Array[outIdx++] = 0x80 | (u & 63);
	    }
	  }
	  // Null-terminate the pointer to the buffer.
	  outU8Array[outIdx] = 0;
	  return outIdx - startIdx;
	}

	// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
	// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
	// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
	// Returns the number of bytes written, EXCLUDING the null terminator.

	function stringToUTF8(str, outPtr, maxBytesToWrite) {
	  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
	  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
	}

	// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

	function lengthBytesUTF8(str) {
	  var len = 0;
	  for (var i = 0; i < str.length; ++i) {
	    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
	    // See http://unicode.org/faq/utf_bom.html#utf16-3
	    var u = str.charCodeAt(i); // possibly a lead surrogate
	    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
	    if (u <= 0x7F) {
	      ++len;
	    } else if (u <= 0x7FF) {
	      len += 2;
	    } else if (u <= 0xFFFF) {
	      len += 3;
	    } else if (u <= 0x1FFFFF) {
	      len += 4;
	    } else if (u <= 0x3FFFFFF) {
	      len += 5;
	    } else {
	      len += 6;
	    }
	  }
	  return len;
	}

	// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
	// a copy of that string as a Javascript String object.

	var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;

	// Allocate heap space for a JS string, and write it there.
	// It is the responsibility of the caller to free() that memory.
	function allocateUTF8(str) {
	  var size = lengthBytesUTF8(str) + 1;
	  var ret = _malloc(size);
	  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
	  return ret;
	}

	function demangle(func) {
	  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
	  return func;
	}

	function demangleAll(text) {
	  var regex =
	    /__Z[\w\d_]+/g;
	  return text.replace(regex,
	    function(x) {
	      var y = demangle(x);
	      return x === y ? x : (x + ' [' + y + ']');
	    });
	}

	function jsStackTrace() {
	  var err = new Error();
	  if (!err.stack) {
	    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
	    // so try that as a special-case.
	    try {
	      throw new Error(0);
	    } catch(e) {
	      err = e;
	    }
	    if (!err.stack) {
	      return '(no stack trace available)';
	    }
	  }
	  return err.stack.toString();
	}

	function stackTrace() {
	  var js = jsStackTrace();
	  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
	  return demangleAll(js);
	}

	// Memory management

	var PAGE_SIZE = 16384;
	var WASM_PAGE_SIZE = 65536;
	var ASMJS_PAGE_SIZE = 16777216;
	var MIN_TOTAL_MEMORY = 16777216;

	function alignUp(x, multiple) {
	  if (x % multiple > 0) {
	    x += multiple - (x % multiple);
	  }
	  return x;
	}

	var /** @type {ArrayBuffer} */
	  buffer,
	/** @type {Int8Array} */
	  HEAP8,
	/** @type {Uint8Array} */
	  HEAPU8,
	/** @type {Int16Array} */
	  HEAP16,
	/** @type {Uint16Array} */
	  HEAPU16,
	/** @type {Int32Array} */
	  HEAP32,
	/** @type {Uint32Array} */
	  HEAPU32,
	/** @type {Float32Array} */
	  HEAPF32,
	/** @type {Float64Array} */
	  HEAPF64;

	function updateGlobalBuffer(buf) {
	  Module['buffer'] = buffer = buf;
	}

	function updateGlobalBufferViews() {
	  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
	  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
	  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
	  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
	  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
	  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
	  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
	  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
	}

	var STATIC_BASE, STATICTOP, staticSealed; // static area
	var STACK_BASE, STACKTOP, STACK_MAX; // stack area
	var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

	  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
	  staticSealed = false;


	// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
	function writeStackCookie() {
	  assert((STACK_MAX & 3) == 0);
	  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
	  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
	}

	function checkStackCookie() {
	  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
	    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
	  }
	  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
	  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
	}

	function abortStackOverflow(allocSize) {
	  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
	}

	function abortOnCannotGrowMemory() {
	  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
	}

	if (!Module['reallocBuffer']) Module['reallocBuffer'] = function(size) {
	  var ret;
	  try {
	    if (ArrayBuffer.transfer) {
	      ret = ArrayBuffer.transfer(buffer, size);
	    } else {
	      var oldHEAP8 = HEAP8;
	      ret = new ArrayBuffer(size);
	      var temp = new Int8Array(ret);
	      temp.set(oldHEAP8);
	    }
	  } catch(e) {
	    return false;
	  }
	  var success = _emscripten_replace_memory(ret);
	  if (!success) return false;
	  return ret;
	};

	function enlargeMemory() {
	  // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.
	  assert(HEAP32[DYNAMICTOP_PTR>>2] > TOTAL_MEMORY); // This function should only ever be called after the ceiling of the dynamic heap has already been bumped to exceed the current total size of the asm.js heap.


	  var PAGE_MULTIPLE = Module["usingWasm"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE; // In wasm, heap size must be a multiple of 64KB. In asm.js, they need to be multiples of 16MB.
	  var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.

	  if (HEAP32[DYNAMICTOP_PTR>>2] > LIMIT) {
	    Module.printErr('Cannot enlarge memory, asked to go up to ' + HEAP32[DYNAMICTOP_PTR>>2] + ' bytes, but the limit is ' + LIMIT + ' bytes!');
	    return false;
	  }

	  var OLD_TOTAL_MEMORY = TOTAL_MEMORY;
	  TOTAL_MEMORY = Math.max(TOTAL_MEMORY, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.

	  while (TOTAL_MEMORY < HEAP32[DYNAMICTOP_PTR>>2]) { // Keep incrementing the heap size as long as it's less than what is requested.
	    if (TOTAL_MEMORY <= 536870912) {
	      TOTAL_MEMORY = alignUp(2 * TOTAL_MEMORY, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...
	    } else {
	      TOTAL_MEMORY = Math.min(alignUp((3 * TOTAL_MEMORY + 2147483648) / 4, PAGE_MULTIPLE), LIMIT); // ..., but after that, add smaller increments towards 2GB, which we cannot reach
	    }
	  }

	  var replacement = Module['reallocBuffer'](TOTAL_MEMORY);
	  if (!replacement || replacement.byteLength != TOTAL_MEMORY) {
	    Module.printErr('Failed to grow the heap from ' + OLD_TOTAL_MEMORY + ' bytes to ' + TOTAL_MEMORY + ' bytes, not enough memory!');
	    if (replacement) {
	      Module.printErr('Expected to get back a buffer of size ' + TOTAL_MEMORY + ' bytes, but instead got back a buffer of size ' + replacement.byteLength);
	    }
	    // restore the state to before this call, we failed
	    TOTAL_MEMORY = OLD_TOTAL_MEMORY;
	    return false;
	  }

	  // everything worked

	  updateGlobalBuffer(replacement);
	  updateGlobalBufferViews();

	  if (!Module["usingWasm"]) {
	    Module.printErr('Warning: Enlarging memory arrays, this is not fast! ' + [OLD_TOTAL_MEMORY, TOTAL_MEMORY]);
	  }


	  return true;
	}

	var byteLength;
	try {
	  byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, 'byteLength').get);
	  byteLength(new ArrayBuffer(4)); // can fail on older ie
	} catch(e) { // can fail on older node/v8
	  byteLength = function(buffer) { return buffer.byteLength; };
	}

	var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
	var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 33554432;
	if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

	// Initialize the runtime's memory
	// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
	assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
	       'JS engine does not provide full typed array support');



	// Use a provided buffer, if there is one, or else allocate a new one
	if (Module['buffer']) {
	  buffer = Module['buffer'];
	  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
	} else {
	  // Use a WebAssembly memory where available
	  if (typeof WebAssembly === 'object' && typeof WebAssembly.Memory === 'function') {
	    assert(TOTAL_MEMORY % WASM_PAGE_SIZE === 0);
	    Module['wasmMemory'] = new WebAssembly.Memory({ 'initial': TOTAL_MEMORY / WASM_PAGE_SIZE });
	    buffer = Module['wasmMemory'].buffer;
	  } else
	  {
	    buffer = new ArrayBuffer(TOTAL_MEMORY);
	  }
	  assert(buffer.byteLength === TOTAL_MEMORY);
	  Module['buffer'] = buffer;
	}
	updateGlobalBufferViews();


	function getTotalMemory() {
	  return TOTAL_MEMORY;
	}

	// Endianness check (note: assumes compiler arch was little-endian)
	  HEAP32[0] = 0x63736d65; /* 'emsc' */
	HEAP16[1] = 0x6373;
	if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

	function callRuntimeCallbacks(callbacks) {
	  while(callbacks.length > 0) {
	    var callback = callbacks.shift();
	    if (typeof callback == 'function') {
	      callback();
	      continue;
	    }
	    var func = callback.func;
	    if (typeof func === 'number') {
	      if (callback.arg === undefined) {
	        Module['dynCall_v'](func);
	      } else {
	        Module['dynCall_vi'](func, callback.arg);
	      }
	    } else {
	      func(callback.arg === undefined ? null : callback.arg);
	    }
	  }
	}

	var __ATPRERUN__  = []; // functions called before the runtime is initialized
	var __ATINIT__    = []; // functions called during startup
	var __ATMAIN__    = []; // functions called when main() is to be run
	var __ATEXIT__    = []; // functions called during shutdown
	var __ATPOSTRUN__ = []; // functions called after the runtime has exited

	var runtimeInitialized = false;
	var runtimeExited = false;


	function preRun() {
	  // compatibility - merge in anything from Module['preRun'] at this time
	  if (Module['preRun']) {
	    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
	    while (Module['preRun'].length) {
	      addOnPreRun(Module['preRun'].shift());
	    }
	  }
	  callRuntimeCallbacks(__ATPRERUN__);
	}

	function ensureInitRuntime() {
	  checkStackCookie();
	  if (runtimeInitialized) return;
	  runtimeInitialized = true;
	  callRuntimeCallbacks(__ATINIT__);
	}

	function preMain() {
	  checkStackCookie();
	  callRuntimeCallbacks(__ATMAIN__);
	}

	function exitRuntime() {
	  checkStackCookie();
	  callRuntimeCallbacks(__ATEXIT__);
	  runtimeExited = true;
	}

	function postRun() {
	  checkStackCookie();
	  // compatibility - merge in anything from Module['postRun'] at this time
	  if (Module['postRun']) {
	    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
	    while (Module['postRun'].length) {
	      addOnPostRun(Module['postRun'].shift());
	    }
	  }
	  callRuntimeCallbacks(__ATPOSTRUN__);
	}

	function addOnPreRun(cb) {
	  __ATPRERUN__.unshift(cb);
	}

	function addOnPostRun(cb) {
	  __ATPOSTRUN__.unshift(cb);
	}

	function writeArrayToMemory(array, buffer) {
	  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)');
	  HEAP8.set(array, buffer);
	}

	function writeAsciiToMemory(str, buffer, dontAddNull) {
	  for (var i = 0; i < str.length; ++i) {
	    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
	    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
	  }
	  // Null-terminate the pointer to the HEAP.
	  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
	}

	assert(Math['imul'] && Math['fround'] && Math['clz32'] && Math['trunc'], 'this is a legacy browser, build with LEGACY_VM_SUPPORT');

	var Math_abs = Math.abs;
	var Math_ceil = Math.ceil;
	var Math_floor = Math.floor;
	var Math_min = Math.min;

	// A counter of dependencies for calling run(). If we need to
	// do asynchronous work before running, increment this and
	// decrement it. Incrementing must happen in a place like
	// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
	// Note that you can add dependencies in preRun, even though
	// it happens right before run - run will be postponed until
	// the dependencies are met.
	var runDependencies = 0;
	var runDependencyWatcher = null;
	var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
	var runDependencyTracking = {};

	function getUniqueRunDependency(id) {
	  var orig = id;
	  while (1) {
	    if (!runDependencyTracking[id]) return id;
	    id = orig + Math.random();
	  }
	  return id;
	}

	function addRunDependency(id) {
	  runDependencies++;
	  if (Module['monitorRunDependencies']) {
	    Module['monitorRunDependencies'](runDependencies);
	  }
	  if (id) {
	    assert(!runDependencyTracking[id]);
	    runDependencyTracking[id] = 1;
	    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
	      // Check for missing dependencies every few seconds
	      runDependencyWatcher = setInterval(function() {
	        if (ABORT) {
	          clearInterval(runDependencyWatcher);
	          runDependencyWatcher = null;
	          return;
	        }
	        var shown = false;
	        for (var dep in runDependencyTracking) {
	          if (!shown) {
	            shown = true;
	            Module.printErr('still waiting on run dependencies:');
	          }
	          Module.printErr('dependency: ' + dep);
	        }
	        if (shown) {
	          Module.printErr('(end of list)');
	        }
	      }, 10000);
	    }
	  } else {
	    Module.printErr('warning: run dependency added without ID');
	  }
	}

	function removeRunDependency(id) {
	  runDependencies--;
	  if (Module['monitorRunDependencies']) {
	    Module['monitorRunDependencies'](runDependencies);
	  }
	  if (id) {
	    assert(runDependencyTracking[id]);
	    delete runDependencyTracking[id];
	  } else {
	    Module.printErr('warning: run dependency removed without ID');
	  }
	  if (runDependencies == 0) {
	    if (runDependencyWatcher !== null) {
	      clearInterval(runDependencyWatcher);
	      runDependencyWatcher = null;
	    }
	    if (dependenciesFulfilled) {
	      var callback = dependenciesFulfilled;
	      dependenciesFulfilled = null;
	      callback(); // can add another dependenciesFulfilled
	    }
	  }
	}

	Module["preloadedImages"] = {}; // maps url to image data
	Module["preloadedAudios"] = {}; // maps url to audio data






	// Prefix of data URIs emitted by SINGLE_FILE and related options.
	var dataURIPrefix = 'data:application/octet-stream;base64,';

	// Indicates whether filename is a base64 data URI.
	function isDataURI(filename) {
	  return String.prototype.startsWith ?
	      filename.startsWith(dataURIPrefix) :
	      filename.indexOf(dataURIPrefix) === 0;
	}




	function integrateWasmJS() {

	  var wasmTextFile = 'trace_processor.wast';
	  var wasmBinaryFile = 'trace_processor.wasm';
	  var asmjsCodeFile = 'trace_processor.temp.asm.js';

	  if (typeof Module['locateFile'] === 'function') {
	    if (!isDataURI(wasmTextFile)) {
	      wasmTextFile = Module['locateFile'](wasmTextFile);
	    }
	    if (!isDataURI(wasmBinaryFile)) {
	      wasmBinaryFile = Module['locateFile'](wasmBinaryFile);
	    }
	    if (!isDataURI(asmjsCodeFile)) {
	      asmjsCodeFile = Module['locateFile'](asmjsCodeFile);
	    }
	  }

	  // utilities

	  var wasmPageSize = 64*1024;

	  var info = {
	    'global': null,
	    'env': null,
	    'asm2wasm': { // special asm2wasm imports
	      "f64-rem": function(x, y) {
	        return x % y;
	      },
	      "debugger": function() {
	        debugger;
	      }
	    },
	    'parent': Module // Module inside wasm-js.cpp refers to wasm-js.cpp; this allows access to the outside program.
	  };

	  var exports = null;


	  function mergeMemory(newBuffer) {
	    // The wasm instance creates its memory. But static init code might have written to
	    // buffer already, including the mem init file, and we must copy it over in a proper merge.
	    // TODO: avoid this copy, by avoiding such static init writes
	    // TODO: in shorter term, just copy up to the last static init write
	    var oldBuffer = Module['buffer'];
	    if (newBuffer.byteLength < oldBuffer.byteLength) {
	      Module['printErr']('the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here');
	    }
	    var oldView = new Int8Array(oldBuffer);
	    var newView = new Int8Array(newBuffer);


	    newView.set(oldView);
	    updateGlobalBuffer(newBuffer);
	    updateGlobalBufferViews();
	  }

	  function fixImports(imports) {
	    return imports;
	  }

	  function getBinary() {
	    try {
	      if (Module['wasmBinary']) {
	        return new Uint8Array(Module['wasmBinary']);
	      }
	      if (Module['readBinary']) {
	        return Module['readBinary'](wasmBinaryFile);
	      } else {
	        throw "on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)";
	      }
	    }
	    catch (err) {
	      abort(err);
	    }
	  }

	  function getBinaryPromise() {
	    // if we don't have the binary yet, and have the Fetch api, use that
	    // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web
	    if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {
	      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {
	        if (!response['ok']) {
	          throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
	        }
	        return response['arrayBuffer']();
	      }).catch(function () {
	        return getBinary();
	      });
	    }
	    // Otherwise, getBinary should be able to get it synchronously
	    return new Promise(function(resolve, reject) {
	      resolve(getBinary());
	    });
	  }

	  // do-method functions


	  function doNativeWasm(global, env, providedBuffer) {
	    if (typeof WebAssembly !== 'object') {
	      Module['printErr']('no native wasm support detected');
	      return false;
	    }
	    // prepare memory import
	    if (!(Module['wasmMemory'] instanceof WebAssembly.Memory)) {
	      Module['printErr']('no native wasm Memory in use');
	      return false;
	    }
	    env['memory'] = Module['wasmMemory'];
	    // Load the wasm module and create an instance of using native support in the JS engine.
	    info['global'] = {
	      'NaN': NaN,
	      'Infinity': Infinity
	    };
	    info['global.Math'] = Math;
	    info['env'] = env;
	    // handle a generated wasm instance, receiving its exports and
	    // performing other necessary setup
	    function receiveInstance(instance, module) {
	      exports = instance.exports;
	      if (exports.memory) mergeMemory(exports.memory);
	      Module['asm'] = exports;
	      Module["usingWasm"] = true;
	      removeRunDependency('wasm-instantiate');
	    }
	    addRunDependency('wasm-instantiate');

	    // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
	    // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel
	    // to any other async startup actions they are performing.
	    if (Module['instantiateWasm']) {
	      try {
	        return Module['instantiateWasm'](info, receiveInstance);
	      } catch(e) {
	        Module['printErr']('Module.instantiateWasm callback failed with error: ' + e);
	        return false;
	      }
	    }

	    // Async compilation can be confusing when an error on the page overwrites Module
	    // (for example, if the order of elements is wrong, and the one defining Module is
	    // later), so we save Module and check it later.
	    var trueModule = Module;
	    function receiveInstantiatedSource(output) {
	      // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.
	      // receiveInstance() will swap in the exports (to Module.asm) so they can be called
	      assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');
	      trueModule = null;
	      receiveInstance(output['instance'], output['module']);
	    }
	    function instantiateArrayBuffer(receiver) {
	      getBinaryPromise().then(function(binary) {
	        return WebAssembly.instantiate(binary, info);
	      }).then(receiver).catch(function(reason) {
	        Module['printErr']('failed to asynchronously prepare wasm: ' + reason);
	        abort(reason);
	      });
	    }
	    // Prefer streaming instantiation if available.
	    if (!Module['wasmBinary'] &&
	        typeof WebAssembly.instantiateStreaming === 'function' &&
	        !isDataURI(wasmBinaryFile) &&
	        typeof fetch === 'function') {
	      WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, { credentials: 'same-origin' }), info)
	        .then(receiveInstantiatedSource)
	        .catch(function(reason) {
	          // We expect the most common failure cause to be a bad MIME type for the binary,
	          // in which case falling back to ArrayBuffer instantiation should work.
	          Module['printErr']('wasm streaming compile failed: ' + reason);
	          Module['printErr']('falling back to ArrayBuffer instantiation');
	          instantiateArrayBuffer(receiveInstantiatedSource);
	        });
	    } else {
	      instantiateArrayBuffer(receiveInstantiatedSource);
	    }
	    return {}; // no exports yet; we'll fill them in later
	  }


	  // We may have a preloaded value in Module.asm, save it
	  Module['asmPreload'] = Module['asm'];

	  // Memory growth integration code

	  var asmjsReallocBuffer = Module['reallocBuffer'];

	  var wasmReallocBuffer = function(size) {
	    var PAGE_MULTIPLE = Module["usingWasm"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE; // In wasm, heap size must be a multiple of 64KB. In asm.js, they need to be multiples of 16MB.
	    size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size
	    var old = Module['buffer'];
	    var oldSize = old.byteLength;
	    if (Module["usingWasm"]) {
	      // native wasm support
	      try {
	        var result = Module['wasmMemory'].grow((size - oldSize) / wasmPageSize); // .grow() takes a delta compared to the previous size
	        if (result !== (-1 | 0)) {
	          // success in native wasm memory growth, get the buffer from the memory
	          return Module['buffer'] = Module['wasmMemory'].buffer;
	        } else {
	          return null;
	        }
	      } catch(e) {
	        console.error('Module.reallocBuffer: Attempted to grow from ' + oldSize  + ' bytes to ' + size + ' bytes, but got error: ' + e);
	        return null;
	      }
	    }
	  };

	  Module['reallocBuffer'] = function(size) {
	    {
	      return wasmReallocBuffer(size);
	    }
	  };

	  // Provide an "asm.js function" for the application, called to "link" the asm.js module. We instantiate
	  // the wasm module at that time, and it receives imports and provides exports and so forth, the app
	  // doesn't need to care that it is wasm or olyfilled wasm or asm.js.

	  Module['asm'] = function(global, env, providedBuffer) {
	    env = fixImports(env);

	    // import table
	    if (!env['table']) {
	      var TABLE_SIZE = Module['wasmTableSize'];
	      if (TABLE_SIZE === undefined) TABLE_SIZE = 1024; // works in binaryen interpreter at least
	      var MAX_TABLE_SIZE = Module['wasmMaxTableSize'];
	      if (typeof WebAssembly === 'object' && typeof WebAssembly.Table === 'function') {
	        if (MAX_TABLE_SIZE !== undefined) {
	          env['table'] = new WebAssembly.Table({ 'initial': TABLE_SIZE, 'maximum': MAX_TABLE_SIZE, 'element': 'anyfunc' });
	        } else {
	          env['table'] = new WebAssembly.Table({ 'initial': TABLE_SIZE, element: 'anyfunc' });
	        }
	      } else {
	        env['table'] = new Array(TABLE_SIZE); // works in binaryen interpreter at least
	      }
	      Module['wasmTable'] = env['table'];
	    }

	    if (!env['memoryBase']) {
	      env['memoryBase'] = Module['STATIC_BASE']; // tell the memory segments where to place themselves
	    }
	    if (!env['tableBase']) {
	      env['tableBase'] = 0; // table starts at 0 by default, in dynamic linking this will change
	    }

	    // try the methods. each should return the exports if it succeeded

	    var exports;
	    exports = doNativeWasm(global, env);

	    if (!exports) abort('no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods');


	    return exports;
	  };

	  var methodHandler = Module['asm']; // note our method handler, as we may modify Module['asm'] later
	}

	integrateWasmJS();





	STATIC_BASE = GLOBAL_BASE;

	STATICTOP = STATIC_BASE + 546592;
	/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101(); } }, { func: function() { __GLOBAL__sub_I_json_value_cpp(); } }, { func: function() { __GLOBAL__sub_I_iostream_cpp(); } });







	var STATIC_BUMP = 546592;
	Module["STATIC_BASE"] = STATIC_BASE;
	Module["STATIC_BUMP"] = STATIC_BUMP;

	/* no memory initializer */
	var tempDoublePtr = STATICTOP; STATICTOP += 16;

	assert(tempDoublePtr % 8 == 0);

	// {{PRE_LIBRARY}}


	  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
	      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
	    }

	  function ___assert_fail(condition, filename, line, func) {
	      abort('Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function']);
	    }

	  
	  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(adjusted) {
	        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
	        for (var key in EXCEPTIONS.infos) {
	          var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
	          var info = EXCEPTIONS.infos[ptr];
	          if (info.adjusted === adjusted) {
	            return ptr;
	          }
	        }
	        return adjusted;
	      },addRef:function(ptr) {
	        if (!ptr) return;
	        var info = EXCEPTIONS.infos[ptr];
	        info.refcount++;
	      },decRef:function(ptr) {
	        if (!ptr) return;
	        var info = EXCEPTIONS.infos[ptr];
	        assert(info.refcount > 0);
	        info.refcount--;
	        // A rethrown exception can reach refcount 0; it must not be discarded
	        // Its next handler will clear the rethrown flag and addRef it, prior to
	        // final decRef and destruction here
	        if (info.refcount === 0 && !info.rethrown) {
	          if (info.destructor) {
	            Module['dynCall_vi'](info.destructor, ptr);
	          }
	          delete EXCEPTIONS.infos[ptr];
	          ___cxa_free_exception(ptr);
	        }
	      },clearRef:function(ptr) {
	        if (!ptr) return;
	        var info = EXCEPTIONS.infos[ptr];
	        info.refcount = 0;
	      }};function ___cxa_begin_catch(ptr) {
	      var info = EXCEPTIONS.infos[ptr];
	      if (info && !info.caught) {
	        info.caught = true;
	        __ZSt18uncaught_exceptionv.uncaught_exception--;
	      }
	      if (info) info.rethrown = false;
	      EXCEPTIONS.caught.push(ptr);
	      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
	      return ptr;
	    }

	  function ___cxa_pure_virtual() {
	      ABORT = true;
	      throw 'Pure virtual function called!';
	    }

	  
	  
	  function ___resumeException(ptr) {
	      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
	      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
	    }function ___cxa_find_matching_catch() {
	      var thrown = EXCEPTIONS.last;
	      if (!thrown) {
	        // just pass through the null ptr
	        return ((setTempRet0(0),0)|0);
	      }
	      var info = EXCEPTIONS.infos[thrown];
	      var throwntype = info.type;
	      if (!throwntype) {
	        // just pass through the thrown ptr
	        return ((setTempRet0(0),thrown)|0);
	      }
	      var typeArray = Array.prototype.slice.call(arguments);
	  
	      var pointer = Module['___cxa_is_pointer_type'](throwntype);
	      // can_catch receives a **, add indirection
	      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
	      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
	      thrown = ___cxa_find_matching_catch.buffer;
	      // The different catch blocks are denoted by different types.
	      // Due to inheritance, those types may not precisely match the
	      // type of the thrown object. Find one which matches, and
	      // return the type of the catch block which should be called.
	      for (var i = 0; i < typeArray.length; i++) {
	        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
	          thrown = HEAP32[((thrown)>>2)]; // undo indirection
	          info.adjusted = thrown;
	          return ((setTempRet0(typeArray[i]),thrown)|0);
	        }
	      }
	      // Shouldn't happen unless we have bogus data in typeArray
	      // or encounter a type for which emscripten doesn't have suitable
	      // typeinfo defined. Best-efforts match just in case.
	      thrown = HEAP32[((thrown)>>2)]; // undo indirection
	      return ((setTempRet0(throwntype),thrown)|0);
	    }function ___gxx_personality_v0() {
	    }

	  function ___lock() {}

	  
	  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
	  
	  function ___setErrNo(value) {
	      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
	      else Module.printErr('failed to set errno from JS');
	      return value;
	    }function ___map_file(pathname, size) {
	      ___setErrNo(ERRNO_CODES.EPERM);
	      return -1;
	    }

	  
	  
	  
	  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
	  
	  var PATH={splitPath:function(filename) {
	        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	        return splitPathRe.exec(filename).slice(1);
	      },normalizeArray:function(parts, allowAboveRoot) {
	        // if the path tries to go above the root, `up` ends up > 0
	        var up = 0;
	        for (var i = parts.length - 1; i >= 0; i--) {
	          var last = parts[i];
	          if (last === '.') {
	            parts.splice(i, 1);
	          } else if (last === '..') {
	            parts.splice(i, 1);
	            up++;
	          } else if (up) {
	            parts.splice(i, 1);
	            up--;
	          }
	        }
	        // if the path is allowed to go above the root, restore leading ..s
	        if (allowAboveRoot) {
	          for (; up; up--) {
	            parts.unshift('..');
	          }
	        }
	        return parts;
	      },normalize:function(path) {
	        var isAbsolute = path.charAt(0) === '/',
	            trailingSlash = path.substr(-1) === '/';
	        // Normalize the path
	        path = PATH.normalizeArray(path.split('/').filter(function(p) {
	          return !!p;
	        }), !isAbsolute).join('/');
	        if (!path && !isAbsolute) {
	          path = '.';
	        }
	        if (path && trailingSlash) {
	          path += '/';
	        }
	        return (isAbsolute ? '/' : '') + path;
	      },dirname:function(path) {
	        var result = PATH.splitPath(path),
	            root = result[0],
	            dir = result[1];
	        if (!root && !dir) {
	          // No dirname whatsoever
	          return '.';
	        }
	        if (dir) {
	          // It has a dirname, strip trailing slash
	          dir = dir.substr(0, dir.length - 1);
	        }
	        return root + dir;
	      },basename:function(path) {
	        // EMSCRIPTEN return '/'' for '/', not an empty string
	        if (path === '/') return '/';
	        var lastSlash = path.lastIndexOf('/');
	        if (lastSlash === -1) return path;
	        return path.substr(lastSlash+1);
	      },extname:function(path) {
	        return PATH.splitPath(path)[3];
	      },join:function() {
	        var paths = Array.prototype.slice.call(arguments, 0);
	        return PATH.normalize(paths.join('/'));
	      },join2:function(l, r) {
	        return PATH.normalize(l + '/' + r);
	      },resolve:function() {
	        var resolvedPath = '',
	          resolvedAbsolute = false;
	        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	          var path = (i >= 0) ? arguments[i] : FS.cwd();
	          // Skip empty and invalid entries
	          if (typeof path !== 'string') {
	            throw new TypeError('Arguments to path.resolve must be strings');
	          } else if (!path) {
	            return ''; // an invalid portion invalidates the whole thing
	          }
	          resolvedPath = path + '/' + resolvedPath;
	          resolvedAbsolute = path.charAt(0) === '/';
	        }
	        // At this point the path should be resolved to a full absolute path, but
	        // handle relative paths to be safe (might happen when process.cwd() fails)
	        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
	          return !!p;
	        }), !resolvedAbsolute).join('/');
	        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
	      },relative:function(from, to) {
	        from = PATH.resolve(from).substr(1);
	        to = PATH.resolve(to).substr(1);
	        function trim(arr) {
	          var start = 0;
	          for (; start < arr.length; start++) {
	            if (arr[start] !== '') break;
	          }
	          var end = arr.length - 1;
	          for (; end >= 0; end--) {
	            if (arr[end] !== '') break;
	          }
	          if (start > end) return [];
	          return arr.slice(start, end - start + 1);
	        }
	        var fromParts = trim(from.split('/'));
	        var toParts = trim(to.split('/'));
	        var length = Math.min(fromParts.length, toParts.length);
	        var samePartsLength = length;
	        for (var i = 0; i < length; i++) {
	          if (fromParts[i] !== toParts[i]) {
	            samePartsLength = i;
	            break;
	          }
	        }
	        var outputParts = [];
	        for (var i = samePartsLength; i < fromParts.length; i++) {
	          outputParts.push('..');
	        }
	        outputParts = outputParts.concat(toParts.slice(samePartsLength));
	        return outputParts.join('/');
	      }};
	  
	  var TTY={ttys:[],init:function () {
	        // https://github.com/kripken/emscripten/pull/1555
	        // if (ENVIRONMENT_IS_NODE) {
	        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
	        //   // device, it always assumes it's a TTY device. because of this, we're forcing
	        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
	        //   // with text files until FS.init can be refactored.
	        //   process['stdin']['setEncoding']('utf8');
	        // }
	      },shutdown:function() {
	        // https://github.com/kripken/emscripten/pull/1555
	        // if (ENVIRONMENT_IS_NODE) {
	        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
	        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
	        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
	        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
	        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
	        //   process['stdin']['pause']();
	        // }
	      },register:function(dev, ops) {
	        TTY.ttys[dev] = { input: [], output: [], ops: ops };
	        FS.registerDevice(dev, TTY.stream_ops);
	      },stream_ops:{open:function(stream) {
	          var tty = TTY.ttys[stream.node.rdev];
	          if (!tty) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	          }
	          stream.tty = tty;
	          stream.seekable = false;
	        },close:function(stream) {
	          // flush any pending line data
	          stream.tty.ops.flush(stream.tty);
	        },flush:function(stream) {
	          stream.tty.ops.flush(stream.tty);
	        },read:function(stream, buffer, offset, length, pos /* ignored */) {
	          if (!stream.tty || !stream.tty.ops.get_char) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	          }
	          var bytesRead = 0;
	          for (var i = 0; i < length; i++) {
	            var result;
	            try {
	              result = stream.tty.ops.get_char(stream.tty);
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }
	            if (result === undefined && bytesRead === 0) {
	              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	            }
	            if (result === null || result === undefined) break;
	            bytesRead++;
	            buffer[offset+i] = result;
	          }
	          if (bytesRead) {
	            stream.node.timestamp = Date.now();
	          }
	          return bytesRead;
	        },write:function(stream, buffer, offset, length, pos) {
	          if (!stream.tty || !stream.tty.ops.put_char) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
	          }
	          for (var i = 0; i < length; i++) {
	            try {
	              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
	            } catch (e) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }
	          }
	          if (length) {
	            stream.node.timestamp = Date.now();
	          }
	          return i;
	        }},default_tty_ops:{get_char:function(tty) {
	          if (!tty.input.length) {
	            var result = null;
	            if (ENVIRONMENT_IS_NODE) {
	              // we will read data by chunks of BUFSIZE
	              var BUFSIZE = 256;
	              var buf = new Buffer(BUFSIZE);
	              var bytesRead = 0;
	  
	              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
	  
	              var fd = process.stdin.fd;
	              if (isPosixPlatform) {
	                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
	                var usingDevice = false;
	                try {
	                  fd = fs.openSync('/dev/stdin', 'r');
	                  usingDevice = true;
	                } catch (e) {}
	              }
	  
	              try {
	                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
	              } catch(e) {
	                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
	                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
	                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
	                else throw e;
	              }
	  
	              if (usingDevice) { fs.closeSync(fd); }
	              if (bytesRead > 0) {
	                result = buf.slice(0, bytesRead).toString('utf-8');
	              } else {
	                result = null;
	              }
	  
	            } else if (typeof window != 'undefined' &&
	              typeof window.prompt == 'function') {
	              // Browser.
	              result = window.prompt('Input: ');  // returns null on cancel
	              if (result !== null) {
	                result += '\n';
	              }
	            } else if (typeof readline == 'function') {
	              // Command line.
	              result = readline();
	              if (result !== null) {
	                result += '\n';
	              }
	            }
	            if (!result) {
	              return null;
	            }
	            tty.input = intArrayFromString(result, true);
	          }
	          return tty.input.shift();
	        },put_char:function(tty, val) {
	          if (val === null || val === 10) {
	            Module['print'](UTF8ArrayToString(tty.output, 0));
	            tty.output = [];
	          } else {
	            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
	          }
	        },flush:function(tty) {
	          if (tty.output && tty.output.length > 0) {
	            Module['print'](UTF8ArrayToString(tty.output, 0));
	            tty.output = [];
	          }
	        }},default_tty1_ops:{put_char:function(tty, val) {
	          if (val === null || val === 10) {
	            Module['printErr'](UTF8ArrayToString(tty.output, 0));
	            tty.output = [];
	          } else {
	            if (val != 0) tty.output.push(val);
	          }
	        },flush:function(tty) {
	          if (tty.output && tty.output.length > 0) {
	            Module['printErr'](UTF8ArrayToString(tty.output, 0));
	            tty.output = [];
	          }
	        }}};
	  
	  var MEMFS={ops_table:null,mount:function(mount) {
	        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
	      },createNode:function(parent, name, mode, dev) {
	        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
	          // no supported
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        if (!MEMFS.ops_table) {
	          MEMFS.ops_table = {
	            dir: {
	              node: {
	                getattr: MEMFS.node_ops.getattr,
	                setattr: MEMFS.node_ops.setattr,
	                lookup: MEMFS.node_ops.lookup,
	                mknod: MEMFS.node_ops.mknod,
	                rename: MEMFS.node_ops.rename,
	                unlink: MEMFS.node_ops.unlink,
	                rmdir: MEMFS.node_ops.rmdir,
	                readdir: MEMFS.node_ops.readdir,
	                symlink: MEMFS.node_ops.symlink
	              },
	              stream: {
	                llseek: MEMFS.stream_ops.llseek
	              }
	            },
	            file: {
	              node: {
	                getattr: MEMFS.node_ops.getattr,
	                setattr: MEMFS.node_ops.setattr
	              },
	              stream: {
	                llseek: MEMFS.stream_ops.llseek,
	                read: MEMFS.stream_ops.read,
	                write: MEMFS.stream_ops.write,
	                allocate: MEMFS.stream_ops.allocate,
	                mmap: MEMFS.stream_ops.mmap,
	                msync: MEMFS.stream_ops.msync
	              }
	            },
	            link: {
	              node: {
	                getattr: MEMFS.node_ops.getattr,
	                setattr: MEMFS.node_ops.setattr,
	                readlink: MEMFS.node_ops.readlink
	              },
	              stream: {}
	            },
	            chrdev: {
	              node: {
	                getattr: MEMFS.node_ops.getattr,
	                setattr: MEMFS.node_ops.setattr
	              },
	              stream: FS.chrdev_stream_ops
	            }
	          };
	        }
	        var node = FS.createNode(parent, name, mode, dev);
	        if (FS.isDir(node.mode)) {
	          node.node_ops = MEMFS.ops_table.dir.node;
	          node.stream_ops = MEMFS.ops_table.dir.stream;
	          node.contents = {};
	        } else if (FS.isFile(node.mode)) {
	          node.node_ops = MEMFS.ops_table.file.node;
	          node.stream_ops = MEMFS.ops_table.file.stream;
	          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
	          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
	          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
	          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
	          node.contents = null; 
	        } else if (FS.isLink(node.mode)) {
	          node.node_ops = MEMFS.ops_table.link.node;
	          node.stream_ops = MEMFS.ops_table.link.stream;
	        } else if (FS.isChrdev(node.mode)) {
	          node.node_ops = MEMFS.ops_table.chrdev.node;
	          node.stream_ops = MEMFS.ops_table.chrdev.stream;
	        }
	        node.timestamp = Date.now();
	        // add the new node to the parent
	        if (parent) {
	          parent.contents[name] = node;
	        }
	        return node;
	      },getFileDataAsRegularArray:function(node) {
	        if (node.contents && node.contents.subarray) {
	          var arr = [];
	          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
	          return arr; // Returns a copy of the original data.
	        }
	        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
	      },getFileDataAsTypedArray:function(node) {
	        if (!node.contents) return new Uint8Array;
	        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
	        return new Uint8Array(node.contents);
	      },expandFileStorage:function(node, newCapacity) {
	  
	        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
	          var prevCapacity = node.contents ? node.contents.length : 0;
	          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
	          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
	          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
	          // avoid overshooting the allocation cap by a very large margin.
	          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
	          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
	          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
	          var oldContents = node.contents;
	          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
	          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
	          return;
	        }
	        // Not using a typed array to back the file storage. Use a standard JS array instead.
	        if (!node.contents && newCapacity > 0) node.contents = [];
	        while (node.contents.length < newCapacity) node.contents.push(0);
	      },resizeFileStorage:function(node, newSize) {
	        if (node.usedBytes == newSize) return;
	        if (newSize == 0) {
	          node.contents = null; // Fully decommit when requesting a resize to zero.
	          node.usedBytes = 0;
	          return;
	        }
	        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
	          var oldContents = node.contents;
	          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
	          if (oldContents) {
	            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
	          }
	          node.usedBytes = newSize;
	          return;
	        }
	        // Backing with a JS array.
	        if (!node.contents) node.contents = [];
	        if (node.contents.length > newSize) node.contents.length = newSize;
	        else while (node.contents.length < newSize) node.contents.push(0);
	        node.usedBytes = newSize;
	      },node_ops:{getattr:function(node) {
	          var attr = {};
	          // device numbers reuse inode numbers.
	          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
	          attr.ino = node.id;
	          attr.mode = node.mode;
	          attr.nlink = 1;
	          attr.uid = 0;
	          attr.gid = 0;
	          attr.rdev = node.rdev;
	          if (FS.isDir(node.mode)) {
	            attr.size = 4096;
	          } else if (FS.isFile(node.mode)) {
	            attr.size = node.usedBytes;
	          } else if (FS.isLink(node.mode)) {
	            attr.size = node.link.length;
	          } else {
	            attr.size = 0;
	          }
	          attr.atime = new Date(node.timestamp);
	          attr.mtime = new Date(node.timestamp);
	          attr.ctime = new Date(node.timestamp);
	          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
	          //       but this is not required by the standard.
	          attr.blksize = 4096;
	          attr.blocks = Math.ceil(attr.size / attr.blksize);
	          return attr;
	        },setattr:function(node, attr) {
	          if (attr.mode !== undefined) {
	            node.mode = attr.mode;
	          }
	          if (attr.timestamp !== undefined) {
	            node.timestamp = attr.timestamp;
	          }
	          if (attr.size !== undefined) {
	            MEMFS.resizeFileStorage(node, attr.size);
	          }
	        },lookup:function(parent, name) {
	          throw FS.genericErrors[ERRNO_CODES.ENOENT];
	        },mknod:function(parent, name, mode, dev) {
	          return MEMFS.createNode(parent, name, mode, dev);
	        },rename:function(old_node, new_dir, new_name) {
	          // if we're overwriting a directory at new_name, make sure it's empty.
	          if (FS.isDir(old_node.mode)) {
	            var new_node;
	            try {
	              new_node = FS.lookupNode(new_dir, new_name);
	            } catch (e) {
	            }
	            if (new_node) {
	              for (var i in new_node.contents) {
	                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	              }
	            }
	          }
	          // do the internal rewiring
	          delete old_node.parent.contents[old_node.name];
	          old_node.name = new_name;
	          new_dir.contents[new_name] = old_node;
	          old_node.parent = new_dir;
	        },unlink:function(parent, name) {
	          delete parent.contents[name];
	        },rmdir:function(parent, name) {
	          var node = FS.lookupNode(parent, name);
	          for (var i in node.contents) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	          }
	          delete parent.contents[name];
	        },readdir:function(node) {
	          var entries = ['.', '..'];
	          for (var key in node.contents) {
	            if (!node.contents.hasOwnProperty(key)) {
	              continue;
	            }
	            entries.push(key);
	          }
	          return entries;
	        },symlink:function(parent, newname, oldpath) {
	          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
	          node.link = oldpath;
	          return node;
	        },readlink:function(node) {
	          if (!FS.isLink(node.mode)) {
	            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	          }
	          return node.link;
	        }},stream_ops:{read:function(stream, buffer, offset, length, position) {
	          var contents = stream.node.contents;
	          if (position >= stream.node.usedBytes) return 0;
	          var size = Math.min(stream.node.usedBytes - position, length);
	          assert(size >= 0);
	          if (size > 8 && contents.subarray) { // non-trivial, and typed array
	            buffer.set(contents.subarray(position, position + size), offset);
	          } else {
	            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
	          }
	          return size;
	        },write:function(stream, buffer, offset, length, position, canOwn) {
	          if (!length) return 0;
	          var node = stream.node;
	          node.timestamp = Date.now();
	  
	          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
	            if (canOwn) {
	              assert(position === 0, 'canOwn must imply no weird position inside the file');
	              node.contents = buffer.subarray(offset, offset + length);
	              node.usedBytes = length;
	              return length;
	            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
	              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
	              node.usedBytes = length;
	              return length;
	            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
	              node.contents.set(buffer.subarray(offset, offset + length), position);
	              return length;
	            }
	          }
	  
	          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
	          MEMFS.expandFileStorage(node, position+length);
	          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
	          else {
	            for (var i = 0; i < length; i++) {
	             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
	            }
	          }
	          node.usedBytes = Math.max(node.usedBytes, position+length);
	          return length;
	        },llseek:function(stream, offset, whence) {
	          var position = offset;
	          if (whence === 1) {  // SEEK_CUR.
	            position += stream.position;
	          } else if (whence === 2) {  // SEEK_END.
	            if (FS.isFile(stream.node.mode)) {
	              position += stream.node.usedBytes;
	            }
	          }
	          if (position < 0) {
	            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	          }
	          return position;
	        },allocate:function(stream, offset, length) {
	          MEMFS.expandFileStorage(stream.node, offset + length);
	          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
	        },mmap:function(stream, buffer, offset, length, position, prot, flags) {
	          if (!FS.isFile(stream.node.mode)) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	          }
	          var ptr;
	          var allocated;
	          var contents = stream.node.contents;
	          // Only make a new copy when MAP_PRIVATE is specified.
	          if ( !(flags & 2) &&
	                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
	            // We can't emulate MAP_SHARED when the file is not backed by the buffer
	            // we're mapping to (e.g. the HEAP buffer).
	            allocated = false;
	            ptr = contents.byteOffset;
	          } else {
	            // Try to avoid unnecessary slices.
	            if (position > 0 || position + length < stream.node.usedBytes) {
	              if (contents.subarray) {
	                contents = contents.subarray(position, position + length);
	              } else {
	                contents = Array.prototype.slice.call(contents, position, position + length);
	              }
	            }
	            allocated = true;
	            ptr = _malloc(length);
	            if (!ptr) {
	              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
	            }
	            buffer.set(contents, ptr);
	          }
	          return { ptr: ptr, allocated: allocated };
	        },msync:function(stream, buffer, offset, length, mmapFlags) {
	          if (!FS.isFile(stream.node.mode)) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	          }
	          if (mmapFlags & 2) {
	            // MAP_PRIVATE calls need not to be synced back to underlying fs
	            return 0;
	          }
	  
	          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
	          // should we check if bytesWritten and length are the same?
	          return 0;
	        }}};
	  
	  var IDBFS={dbs:{},indexedDB:function() {
	        if (typeof indexedDB !== 'undefined') return indexedDB;
	        var ret = null;
	        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
	        assert(ret, 'IDBFS used, but indexedDB not supported');
	        return ret;
	      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(mount) {
	        // reuse all of the core MEMFS functionality
	        return MEMFS.mount.apply(null, arguments);
	      },syncfs:function(mount, populate, callback) {
	        IDBFS.getLocalSet(mount, function(err, local) {
	          if (err) return callback(err);
	  
	          IDBFS.getRemoteSet(mount, function(err, remote) {
	            if (err) return callback(err);
	  
	            var src = populate ? remote : local;
	            var dst = populate ? local : remote;
	  
	            IDBFS.reconcile(src, dst, callback);
	          });
	        });
	      },getDB:function(name, callback) {
	        // check the cache first
	        var db = IDBFS.dbs[name];
	        if (db) {
	          return callback(null, db);
	        }
	  
	        var req;
	        try {
	          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
	        } catch (e) {
	          return callback(e);
	        }
	        if (!req) {
	          return callback("Unable to connect to IndexedDB");
	        }
	        req.onupgradeneeded = function(e) {
	          var db = e.target.result;
	          var transaction = e.target.transaction;
	  
	          var fileStore;
	  
	          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
	            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
	          } else {
	            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
	          }
	  
	          if (!fileStore.indexNames.contains('timestamp')) {
	            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
	          }
	        };
	        req.onsuccess = function() {
	          db = req.result;
	  
	          // add to the cache
	          IDBFS.dbs[name] = db;
	          callback(null, db);
	        };
	        req.onerror = function(e) {
	          callback(this.error);
	          e.preventDefault();
	        };
	      },getLocalSet:function(mount, callback) {
	        var entries = {};
	  
	        function isRealDir(p) {
	          return p !== '.' && p !== '..';
	        }        function toAbsolute(root) {
	          return function(p) {
	            return PATH.join2(root, p);
	          }
	        }  
	        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
	  
	        while (check.length) {
	          var path = check.pop();
	          var stat;
	  
	          try {
	            stat = FS.stat(path);
	          } catch (e) {
	            return callback(e);
	          }
	  
	          if (FS.isDir(stat.mode)) {
	            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
	          }
	  
	          entries[path] = { timestamp: stat.mtime };
	        }
	  
	        return callback(null, { type: 'local', entries: entries });
	      },getRemoteSet:function(mount, callback) {
	        var entries = {};
	  
	        IDBFS.getDB(mount.mountpoint, function(err, db) {
	          if (err) return callback(err);
	  
	          try {
	            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
	            transaction.onerror = function(e) {
	              callback(this.error);
	              e.preventDefault();
	            };
	  
	            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
	            var index = store.index('timestamp');
	  
	            index.openKeyCursor().onsuccess = function(event) {
	              var cursor = event.target.result;
	  
	              if (!cursor) {
	                return callback(null, { type: 'remote', db: db, entries: entries });
	              }
	  
	              entries[cursor.primaryKey] = { timestamp: cursor.key };
	  
	              cursor.continue();
	            };
	          } catch (e) {
	            return callback(e);
	          }
	        });
	      },loadLocalEntry:function(path, callback) {
	        var stat, node;
	  
	        try {
	          var lookup = FS.lookupPath(path);
	          node = lookup.node;
	          stat = FS.stat(path);
	        } catch (e) {
	          return callback(e);
	        }
	  
	        if (FS.isDir(stat.mode)) {
	          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
	        } else if (FS.isFile(stat.mode)) {
	          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
	          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
	          node.contents = MEMFS.getFileDataAsTypedArray(node);
	          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
	        } else {
	          return callback(new Error('node type not supported'));
	        }
	      },storeLocalEntry:function(path, entry, callback) {
	        try {
	          if (FS.isDir(entry.mode)) {
	            FS.mkdir(path, entry.mode);
	          } else if (FS.isFile(entry.mode)) {
	            FS.writeFile(path, entry.contents, { canOwn: true });
	          } else {
	            return callback(new Error('node type not supported'));
	          }
	  
	          FS.chmod(path, entry.mode);
	          FS.utime(path, entry.timestamp, entry.timestamp);
	        } catch (e) {
	          return callback(e);
	        }
	  
	        callback(null);
	      },removeLocalEntry:function(path, callback) {
	        try {
	          var lookup = FS.lookupPath(path);
	          var stat = FS.stat(path);
	  
	          if (FS.isDir(stat.mode)) {
	            FS.rmdir(path);
	          } else if (FS.isFile(stat.mode)) {
	            FS.unlink(path);
	          }
	        } catch (e) {
	          return callback(e);
	        }
	  
	        callback(null);
	      },loadRemoteEntry:function(store, path, callback) {
	        var req = store.get(path);
	        req.onsuccess = function(event) { callback(null, event.target.result); };
	        req.onerror = function(e) {
	          callback(this.error);
	          e.preventDefault();
	        };
	      },storeRemoteEntry:function(store, path, entry, callback) {
	        var req = store.put(entry, path);
	        req.onsuccess = function() { callback(null); };
	        req.onerror = function(e) {
	          callback(this.error);
	          e.preventDefault();
	        };
	      },removeRemoteEntry:function(store, path, callback) {
	        var req = store.delete(path);
	        req.onsuccess = function() { callback(null); };
	        req.onerror = function(e) {
	          callback(this.error);
	          e.preventDefault();
	        };
	      },reconcile:function(src, dst, callback) {
	        var total = 0;
	  
	        var create = [];
	        Object.keys(src.entries).forEach(function (key) {
	          var e = src.entries[key];
	          var e2 = dst.entries[key];
	          if (!e2 || e.timestamp > e2.timestamp) {
	            create.push(key);
	            total++;
	          }
	        });
	  
	        var remove = [];
	        Object.keys(dst.entries).forEach(function (key) {
	          var e = dst.entries[key];
	          var e2 = src.entries[key];
	          if (!e2) {
	            remove.push(key);
	            total++;
	          }
	        });
	  
	        if (!total) {
	          return callback(null);
	        }
	        var completed = 0;
	        var db = src.type === 'remote' ? src.db : dst.db;
	        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
	        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
	  
	        function done(err) {
	          if (err) {
	            if (!done.errored) {
	              done.errored = true;
	              return callback(err);
	            }
	            return;
	          }
	          if (++completed >= total) {
	            return callback(null);
	          }
	        }  
	        transaction.onerror = function(e) {
	          done(this.error);
	          e.preventDefault();
	        };
	  
	        // sort paths in ascending order so directory entries are created
	        // before the files inside them
	        create.sort().forEach(function (path) {
	          if (dst.type === 'local') {
	            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
	              if (err) return done(err);
	              IDBFS.storeLocalEntry(path, entry, done);
	            });
	          } else {
	            IDBFS.loadLocalEntry(path, function (err, entry) {
	              if (err) return done(err);
	              IDBFS.storeRemoteEntry(store, path, entry, done);
	            });
	          }
	        });
	  
	        // sort paths in descending order so files are deleted before their
	        // parent directories
	        remove.sort().reverse().forEach(function(path) {
	          if (dst.type === 'local') {
	            IDBFS.removeLocalEntry(path, done);
	          } else {
	            IDBFS.removeRemoteEntry(store, path, done);
	          }
	        });
	      }};
	  
	  var NODEFS={isWindows:false,staticInit:function() {
	        NODEFS.isWindows = !!process.platform.match(/^win/);
	        var flags = process["binding"]("constants");
	        // Node.js 4 compatibility: it has no namespaces for constants
	        if (flags["fs"]) {
	          flags = flags["fs"];
	        }
	        NODEFS.flagsForNodeMap = {
	          "1024": flags["O_APPEND"],
	          "64": flags["O_CREAT"],
	          "128": flags["O_EXCL"],
	          "0": flags["O_RDONLY"],
	          "2": flags["O_RDWR"],
	          "4096": flags["O_SYNC"],
	          "512": flags["O_TRUNC"],
	          "1": flags["O_WRONLY"]
	        };
	      },bufferFrom:function (arrayBuffer) {
	        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
	        // Buffer.from before 4.5 was just a method inherited from Uint8Array
	        // Buffer.alloc has been added with Buffer.from together, so check it instead
	        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
	      },mount:function (mount) {
	        assert(ENVIRONMENT_IS_NODE);
	        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
	      },createNode:function (parent, name, mode, dev) {
	        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        var node = FS.createNode(parent, name, mode);
	        node.node_ops = NODEFS.node_ops;
	        node.stream_ops = NODEFS.stream_ops;
	        return node;
	      },getMode:function (path) {
	        var stat;
	        try {
	          stat = fs.lstatSync(path);
	          if (NODEFS.isWindows) {
	            // Node.js on Windows never represents permission bit 'x', so
	            // propagate read bits to execute bits
	            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
	          }
	        } catch (e) {
	          if (!e.code) throw e;
	          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	        }
	        return stat.mode;
	      },realPath:function (node) {
	        var parts = [];
	        while (node.parent !== node) {
	          parts.push(node.name);
	          node = node.parent;
	        }
	        parts.push(node.mount.opts.root);
	        parts.reverse();
	        return PATH.join.apply(null, parts);
	      },flagsForNode:function(flags) {
	        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
	        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
	        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
	        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
	        var newFlags = 0;
	        for (var k in NODEFS.flagsForNodeMap) {
	          if (flags & k) {
	            newFlags |= NODEFS.flagsForNodeMap[k];
	            flags ^= k;
	          }
	        }
	  
	        if (!flags) {
	          return newFlags;
	        } else {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	      },node_ops:{getattr:function(node) {
	          var path = NODEFS.realPath(node);
	          var stat;
	          try {
	            stat = fs.lstatSync(path);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
	          // See http://support.microsoft.com/kb/140365
	          if (NODEFS.isWindows && !stat.blksize) {
	            stat.blksize = 4096;
	          }
	          if (NODEFS.isWindows && !stat.blocks) {
	            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
	          }
	          return {
	            dev: stat.dev,
	            ino: stat.ino,
	            mode: stat.mode,
	            nlink: stat.nlink,
	            uid: stat.uid,
	            gid: stat.gid,
	            rdev: stat.rdev,
	            size: stat.size,
	            atime: stat.atime,
	            mtime: stat.mtime,
	            ctime: stat.ctime,
	            blksize: stat.blksize,
	            blocks: stat.blocks
	          };
	        },setattr:function(node, attr) {
	          var path = NODEFS.realPath(node);
	          try {
	            if (attr.mode !== undefined) {
	              fs.chmodSync(path, attr.mode);
	              // update the common node structure mode as well
	              node.mode = attr.mode;
	            }
	            if (attr.timestamp !== undefined) {
	              var date = new Date(attr.timestamp);
	              fs.utimesSync(path, date, date);
	            }
	            if (attr.size !== undefined) {
	              fs.truncateSync(path, attr.size);
	            }
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },lookup:function (parent, name) {
	          var path = PATH.join2(NODEFS.realPath(parent), name);
	          var mode = NODEFS.getMode(path);
	          return NODEFS.createNode(parent, name, mode);
	        },mknod:function (parent, name, mode, dev) {
	          var node = NODEFS.createNode(parent, name, mode, dev);
	          // create the backing node for this in the fs root as well
	          var path = NODEFS.realPath(node);
	          try {
	            if (FS.isDir(node.mode)) {
	              fs.mkdirSync(path, node.mode);
	            } else {
	              fs.writeFileSync(path, '', { mode: node.mode });
	            }
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	          return node;
	        },rename:function (oldNode, newDir, newName) {
	          var oldPath = NODEFS.realPath(oldNode);
	          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
	          try {
	            fs.renameSync(oldPath, newPath);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },unlink:function(parent, name) {
	          var path = PATH.join2(NODEFS.realPath(parent), name);
	          try {
	            fs.unlinkSync(path);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },rmdir:function(parent, name) {
	          var path = PATH.join2(NODEFS.realPath(parent), name);
	          try {
	            fs.rmdirSync(path);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },readdir:function(node) {
	          var path = NODEFS.realPath(node);
	          try {
	            return fs.readdirSync(path);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },symlink:function(parent, newName, oldPath) {
	          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
	          try {
	            fs.symlinkSync(oldPath, newPath);
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },readlink:function(node) {
	          var path = NODEFS.realPath(node);
	          try {
	            path = fs.readlinkSync(path);
	            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
	            return path;
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        }},stream_ops:{open:function (stream) {
	          var path = NODEFS.realPath(stream.node);
	          try {
	            if (FS.isFile(stream.node.mode)) {
	              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
	            }
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },close:function (stream) {
	          try {
	            if (FS.isFile(stream.node.mode) && stream.nfd) {
	              fs.closeSync(stream.nfd);
	            }
	          } catch (e) {
	            if (!e.code) throw e;
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },read:function (stream, buffer, offset, length, position) {
	          // Node.js < 6 compatibility: node errors on 0 length reads
	          if (length === 0) return 0;
	          try {
	            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },write:function (stream, buffer, offset, length, position) {
	          try {
	            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
	          } catch (e) {
	            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	          }
	        },llseek:function (stream, offset, whence) {
	          var position = offset;
	          if (whence === 1) {  // SEEK_CUR.
	            position += stream.position;
	          } else if (whence === 2) {  // SEEK_END.
	            if (FS.isFile(stream.node.mode)) {
	              try {
	                var stat = fs.fstatSync(stream.nfd);
	                position += stat.size;
	              } catch (e) {
	                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
	              }
	            }
	          }
	  
	          if (position < 0) {
	            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	          }
	  
	          return position;
	        }}};
	  
	  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
	        assert(ENVIRONMENT_IS_WORKER);
	        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
	        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
	        var createdParents = {};
	        function ensureParent(path) {
	          // return the parent node, creating subdirs as necessary
	          var parts = path.split('/');
	          var parent = root;
	          for (var i = 0; i < parts.length-1; i++) {
	            var curr = parts.slice(0, i+1).join('/');
	            // Issue 4254: Using curr as a node name will prevent the node
	            // from being found in FS.nameTable when FS.open is called on
	            // a path which holds a child of this node,
	            // given that all FS functions assume node names
	            // are just their corresponding parts within their given path,
	            // rather than incremental aggregates which include their parent's
	            // directories.
	            if (!createdParents[curr]) {
	              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
	            }
	            parent = createdParents[curr];
	          }
	          return parent;
	        }
	        function base(path) {
	          var parts = path.split('/');
	          return parts[parts.length-1];
	        }
	        // We also accept FileList here, by using Array.prototype
	        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
	          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
	        });
	        (mount.opts["blobs"] || []).forEach(function(obj) {
	          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
	        });
	        (mount.opts["packages"] || []).forEach(function(pack) {
	          pack['metadata'].files.forEach(function(file) {
	            var name = file.filename.substr(1); // remove initial slash
	            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
	          });
	        });
	        return root;
	      },createNode:function (parent, name, mode, dev, contents, mtime) {
	        var node = FS.createNode(parent, name, mode);
	        node.mode = mode;
	        node.node_ops = WORKERFS.node_ops;
	        node.stream_ops = WORKERFS.stream_ops;
	        node.timestamp = (mtime || new Date).getTime();
	        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
	        if (mode === WORKERFS.FILE_MODE) {
	          node.size = contents.size;
	          node.contents = contents;
	        } else {
	          node.size = 4096;
	          node.contents = {};
	        }
	        if (parent) {
	          parent.contents[name] = node;
	        }
	        return node;
	      },node_ops:{getattr:function(node) {
	          return {
	            dev: 1,
	            ino: undefined,
	            mode: node.mode,
	            nlink: 1,
	            uid: 0,
	            gid: 0,
	            rdev: undefined,
	            size: node.size,
	            atime: new Date(node.timestamp),
	            mtime: new Date(node.timestamp),
	            ctime: new Date(node.timestamp),
	            blksize: 4096,
	            blocks: Math.ceil(node.size / 4096),
	          };
	        },setattr:function(node, attr) {
	          if (attr.mode !== undefined) {
	            node.mode = attr.mode;
	          }
	          if (attr.timestamp !== undefined) {
	            node.timestamp = attr.timestamp;
	          }
	        },lookup:function(parent, name) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        },mknod:function (parent, name, mode, dev) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        },rename:function (oldNode, newDir, newName) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        },unlink:function(parent, name) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        },rmdir:function(parent, name) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        },readdir:function(node) {
	          var entries = ['.', '..'];
	          for (var key in node.contents) {
	            if (!node.contents.hasOwnProperty(key)) {
	              continue;
	            }
	            entries.push(key);
	          }
	          return entries;
	        },symlink:function(parent, newName, oldPath) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        },readlink:function(node) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
	          if (position >= stream.node.size) return 0;
	          var chunk = stream.node.contents.slice(position, position + length);
	          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
	          buffer.set(new Uint8Array(ab), offset);
	          return chunk.size;
	        },write:function (stream, buffer, offset, length, position) {
	          throw new FS.ErrnoError(ERRNO_CODES.EIO);
	        },llseek:function (stream, offset, whence) {
	          var position = offset;
	          if (whence === 1) {  // SEEK_CUR.
	            position += stream.position;
	          } else if (whence === 2) {  // SEEK_END.
	            if (FS.isFile(stream.node.mode)) {
	              position += stream.node.size;
	            }
	          }
	          if (position < 0) {
	            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	          }
	          return position;
	        }}};
	 STATICTOP += 16; STATICTOP += 16; STATICTOP += 16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e) {
	        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
	        return ___setErrNo(e.errno);
	      },lookupPath:function(path, opts) {
	        path = PATH.resolve(FS.cwd(), path);
	        opts = opts || {};
	  
	        if (!path) return { path: '', node: null };
	  
	        var defaults = {
	          follow_mount: true,
	          recurse_count: 0
	        };
	        for (var key in defaults) {
	          if (opts[key] === undefined) {
	            opts[key] = defaults[key];
	          }
	        }
	  
	        if (opts.recurse_count > 8) {  // max recursive lookup of 8
	          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	        }
	  
	        // split the path
	        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
	          return !!p;
	        }), false);
	  
	        // start at the root
	        var current = FS.root;
	        var current_path = '/';
	  
	        for (var i = 0; i < parts.length; i++) {
	          var islast = (i === parts.length-1);
	          if (islast && opts.parent) {
	            // stop resolving
	            break;
	          }
	  
	          current = FS.lookupNode(current, parts[i]);
	          current_path = PATH.join2(current_path, parts[i]);
	  
	          // jump to the mount's root node if this is a mountpoint
	          if (FS.isMountpoint(current)) {
	            if (!islast || (islast && opts.follow_mount)) {
	              current = current.mounted.root;
	            }
	          }
	  
	          // by default, lookupPath will not follow a symlink if it is the final path component.
	          // setting opts.follow = true will override this behavior.
	          if (!islast || opts.follow) {
	            var count = 0;
	            while (FS.isLink(current.mode)) {
	              var link = FS.readlink(current_path);
	              current_path = PATH.resolve(PATH.dirname(current_path), link);
	  
	              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
	              current = lookup.node;
	  
	              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
	                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
	              }
	            }
	          }
	        }
	  
	        return { path: current_path, node: current };
	      },getPath:function(node) {
	        var path;
	        while (true) {
	          if (FS.isRoot(node)) {
	            var mount = node.mount.mountpoint;
	            if (!path) return mount;
	            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
	          }
	          path = path ? node.name + '/' + path : node.name;
	          node = node.parent;
	        }
	      },hashName:function(parentid, name) {
	        var hash = 0;
	  
	  
	        for (var i = 0; i < name.length; i++) {
	          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
	        }
	        return ((parentid + hash) >>> 0) % FS.nameTable.length;
	      },hashAddNode:function(node) {
	        var hash = FS.hashName(node.parent.id, node.name);
	        node.name_next = FS.nameTable[hash];
	        FS.nameTable[hash] = node;
	      },hashRemoveNode:function(node) {
	        var hash = FS.hashName(node.parent.id, node.name);
	        if (FS.nameTable[hash] === node) {
	          FS.nameTable[hash] = node.name_next;
	        } else {
	          var current = FS.nameTable[hash];
	          while (current) {
	            if (current.name_next === node) {
	              current.name_next = node.name_next;
	              break;
	            }
	            current = current.name_next;
	          }
	        }
	      },lookupNode:function(parent, name) {
	        var err = FS.mayLookup(parent);
	        if (err) {
	          throw new FS.ErrnoError(err, parent);
	        }
	        var hash = FS.hashName(parent.id, name);
	        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
	          var nodeName = node.name;
	          if (node.parent.id === parent.id && nodeName === name) {
	            return node;
	          }
	        }
	        // if we failed to find it in the cache, call into the VFS
	        return FS.lookup(parent, name);
	      },createNode:function(parent, name, mode, rdev) {
	        if (!FS.FSNode) {
	          FS.FSNode = function(parent, name, mode, rdev) {
	            if (!parent) {
	              parent = this;  // root node sets parent to itself
	            }
	            this.parent = parent;
	            this.mount = parent.mount;
	            this.mounted = null;
	            this.id = FS.nextInode++;
	            this.name = name;
	            this.mode = mode;
	            this.node_ops = {};
	            this.stream_ops = {};
	            this.rdev = rdev;
	          };
	  
	          FS.FSNode.prototype = {};
	  
	          // compatibility
	          var readMode = 292 | 73;
	          var writeMode = 146;
	  
	          // NOTE we must use Object.defineProperties instead of individual calls to
	          // Object.defineProperty in order to make closure compiler happy
	          Object.defineProperties(FS.FSNode.prototype, {
	            read: {
	              get: function() { return (this.mode & readMode) === readMode; },
	              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
	            },
	            write: {
	              get: function() { return (this.mode & writeMode) === writeMode; },
	              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
	            },
	            isFolder: {
	              get: function() { return FS.isDir(this.mode); }
	            },
	            isDevice: {
	              get: function() { return FS.isChrdev(this.mode); }
	            }
	          });
	        }
	  
	        var node = new FS.FSNode(parent, name, mode, rdev);
	  
	        FS.hashAddNode(node);
	  
	        return node;
	      },destroyNode:function(node) {
	        FS.hashRemoveNode(node);
	      },isRoot:function(node) {
	        return node === node.parent;
	      },isMountpoint:function(node) {
	        return !!node.mounted;
	      },isFile:function(mode) {
	        return (mode & 61440) === 32768;
	      },isDir:function(mode) {
	        return (mode & 61440) === 16384;
	      },isLink:function(mode) {
	        return (mode & 61440) === 40960;
	      },isChrdev:function(mode) {
	        return (mode & 61440) === 8192;
	      },isBlkdev:function(mode) {
	        return (mode & 61440) === 24576;
	      },isFIFO:function(mode) {
	        return (mode & 61440) === 4096;
	      },isSocket:function(mode) {
	        return (mode & 49152) === 49152;
	      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(str) {
	        var flags = FS.flagModes[str];
	        if (typeof flags === 'undefined') {
	          throw new Error('Unknown file open mode: ' + str);
	        }
	        return flags;
	      },flagsToPermissionString:function(flag) {
	        var perms = ['r', 'w', 'rw'][flag & 3];
	        if ((flag & 512)) {
	          perms += 'w';
	        }
	        return perms;
	      },nodePermissions:function(node, perms) {
	        if (FS.ignorePermissions) {
	          return 0;
	        }
	        // return 0 if any user, group or owner bits are set.
	        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
	          return ERRNO_CODES.EACCES;
	        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
	          return ERRNO_CODES.EACCES;
	        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
	          return ERRNO_CODES.EACCES;
	        }
	        return 0;
	      },mayLookup:function(dir) {
	        var err = FS.nodePermissions(dir, 'x');
	        if (err) return err;
	        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
	        return 0;
	      },mayCreate:function(dir, name) {
	        try {
	          var node = FS.lookupNode(dir, name);
	          return ERRNO_CODES.EEXIST;
	        } catch (e) {
	        }
	        return FS.nodePermissions(dir, 'wx');
	      },mayDelete:function(dir, name, isdir) {
	        var node;
	        try {
	          node = FS.lookupNode(dir, name);
	        } catch (e) {
	          return e.errno;
	        }
	        var err = FS.nodePermissions(dir, 'wx');
	        if (err) {
	          return err;
	        }
	        if (isdir) {
	          if (!FS.isDir(node.mode)) {
	            return ERRNO_CODES.ENOTDIR;
	          }
	          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
	            return ERRNO_CODES.EBUSY;
	          }
	        } else {
	          if (FS.isDir(node.mode)) {
	            return ERRNO_CODES.EISDIR;
	          }
	        }
	        return 0;
	      },mayOpen:function(node, flags) {
	        if (!node) {
	          return ERRNO_CODES.ENOENT;
	        }
	        if (FS.isLink(node.mode)) {
	          return ERRNO_CODES.ELOOP;
	        } else if (FS.isDir(node.mode)) {
	          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
	              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
	            return ERRNO_CODES.EISDIR;
	          }
	        }
	        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
	      },MAX_OPEN_FDS:4096,nextfd:function(fd_start, fd_end) {
	        fd_start = fd_start || 0;
	        fd_end = fd_end || FS.MAX_OPEN_FDS;
	        for (var fd = fd_start; fd <= fd_end; fd++) {
	          if (!FS.streams[fd]) {
	            return fd;
	          }
	        }
	        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
	      },getStream:function(fd) {
	        return FS.streams[fd];
	      },createStream:function(stream, fd_start, fd_end) {
	        if (!FS.FSStream) {
	          FS.FSStream = function(){};
	          FS.FSStream.prototype = {};
	          // compatibility
	          Object.defineProperties(FS.FSStream.prototype, {
	            object: {
	              get: function() { return this.node; },
	              set: function(val) { this.node = val; }
	            },
	            isRead: {
	              get: function() { return (this.flags & 2097155) !== 1; }
	            },
	            isWrite: {
	              get: function() { return (this.flags & 2097155) !== 0; }
	            },
	            isAppend: {
	              get: function() { return (this.flags & 1024); }
	            }
	          });
	        }
	        // clone it, so we can return an instance of FSStream
	        var newStream = new FS.FSStream();
	        for (var p in stream) {
	          newStream[p] = stream[p];
	        }
	        stream = newStream;
	        var fd = FS.nextfd(fd_start, fd_end);
	        stream.fd = fd;
	        FS.streams[fd] = stream;
	        return stream;
	      },closeStream:function(fd) {
	        FS.streams[fd] = null;
	      },chrdev_stream_ops:{open:function(stream) {
	          var device = FS.getDevice(stream.node.rdev);
	          // override node's stream ops with the device's
	          stream.stream_ops = device.stream_ops;
	          // forward the open call
	          if (stream.stream_ops.open) {
	            stream.stream_ops.open(stream);
	          }
	        },llseek:function() {
	          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	        }},major:function(dev) {
	        return ((dev) >> 8);
	      },minor:function(dev) {
	        return ((dev) & 0xff);
	      },makedev:function(ma, mi) {
	        return ((ma) << 8 | (mi));
	      },registerDevice:function(dev, ops) {
	        FS.devices[dev] = { stream_ops: ops };
	      },getDevice:function(dev) {
	        return FS.devices[dev];
	      },getMounts:function(mount) {
	        var mounts = [];
	        var check = [mount];
	  
	        while (check.length) {
	          var m = check.pop();
	  
	          mounts.push(m);
	  
	          check.push.apply(check, m.mounts);
	        }
	  
	        return mounts;
	      },syncfs:function(populate, callback) {
	        if (typeof(populate) === 'function') {
	          callback = populate;
	          populate = false;
	        }
	  
	        FS.syncFSRequests++;
	  
	        if (FS.syncFSRequests > 1) {
	          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
	        }
	  
	        var mounts = FS.getMounts(FS.root.mount);
	        var completed = 0;
	  
	        function doCallback(err) {
	          assert(FS.syncFSRequests > 0);
	          FS.syncFSRequests--;
	          return callback(err);
	        }
	  
	        function done(err) {
	          if (err) {
	            if (!done.errored) {
	              done.errored = true;
	              return doCallback(err);
	            }
	            return;
	          }
	          if (++completed >= mounts.length) {
	            doCallback(null);
	          }
	        }  
	        // sync all mounts
	        mounts.forEach(function (mount) {
	          if (!mount.type.syncfs) {
	            return done(null);
	          }
	          mount.type.syncfs(mount, populate, done);
	        });
	      },mount:function(type, opts, mountpoint) {
	        var root = mountpoint === '/';
	        var pseudo = !mountpoint;
	        var node;
	  
	        if (root && FS.root) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        } else if (!root && !pseudo) {
	          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
	  
	          mountpoint = lookup.path;  // use the absolute path
	          node = lookup.node;
	  
	          if (FS.isMountpoint(node)) {
	            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	          }
	  
	          if (!FS.isDir(node.mode)) {
	            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	          }
	        }
	  
	        var mount = {
	          type: type,
	          opts: opts,
	          mountpoint: mountpoint,
	          mounts: []
	        };
	  
	        // create a root node for the fs
	        var mountRoot = type.mount(mount);
	        mountRoot.mount = mount;
	        mount.root = mountRoot;
	  
	        if (root) {
	          FS.root = mountRoot;
	        } else if (node) {
	          // set as a mountpoint
	          node.mounted = mount;
	  
	          // add the new mount to the current mount's children
	          if (node.mount) {
	            node.mount.mounts.push(mount);
	          }
	        }
	  
	        return mountRoot;
	      },unmount:function (mountpoint) {
	        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
	  
	        if (!FS.isMountpoint(lookup.node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	  
	        // destroy the nodes for this mount, and all its child mounts
	        var node = lookup.node;
	        var mount = node.mounted;
	        var mounts = FS.getMounts(mount);
	  
	        Object.keys(FS.nameTable).forEach(function (hash) {
	          var current = FS.nameTable[hash];
	  
	          while (current) {
	            var next = current.name_next;
	  
	            if (mounts.indexOf(current.mount) !== -1) {
	              FS.destroyNode(current);
	            }
	  
	            current = next;
	          }
	        });
	  
	        // no longer a mountpoint
	        node.mounted = null;
	  
	        // remove this mount from the child mounts
	        var idx = node.mount.mounts.indexOf(mount);
	        assert(idx !== -1);
	        node.mount.mounts.splice(idx, 1);
	      },lookup:function(parent, name) {
	        return parent.node_ops.lookup(parent, name);
	      },mknod:function(path, mode, dev) {
	        var lookup = FS.lookupPath(path, { parent: true });
	        var parent = lookup.node;
	        var name = PATH.basename(path);
	        if (!name || name === '.' || name === '..') {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        var err = FS.mayCreate(parent, name);
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        if (!parent.node_ops.mknod) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        return parent.node_ops.mknod(parent, name, mode, dev);
	      },create:function(path, mode) {
	        mode = mode !== undefined ? mode : 438 /* 0666 */;
	        mode &= 4095;
	        mode |= 32768;
	        return FS.mknod(path, mode, 0);
	      },mkdir:function(path, mode) {
	        mode = mode !== undefined ? mode : 511 /* 0777 */;
	        mode &= 511 | 512;
	        mode |= 16384;
	        return FS.mknod(path, mode, 0);
	      },mkdirTree:function(path, mode) {
	        var dirs = path.split('/');
	        var d = '';
	        for (var i = 0; i < dirs.length; ++i) {
	          if (!dirs[i]) continue;
	          d += '/' + dirs[i];
	          try {
	            FS.mkdir(d, mode);
	          } catch(e) {
	            if (e.errno != ERRNO_CODES.EEXIST) throw e;
	          }
	        }
	      },mkdev:function(path, mode, dev) {
	        if (typeof(dev) === 'undefined') {
	          dev = mode;
	          mode = 438 /* 0666 */;
	        }
	        mode |= 8192;
	        return FS.mknod(path, mode, dev);
	      },symlink:function(oldpath, newpath) {
	        if (!PATH.resolve(oldpath)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        var lookup = FS.lookupPath(newpath, { parent: true });
	        var parent = lookup.node;
	        if (!parent) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        var newname = PATH.basename(newpath);
	        var err = FS.mayCreate(parent, newname);
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        if (!parent.node_ops.symlink) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        return parent.node_ops.symlink(parent, newname, oldpath);
	      },rename:function(old_path, new_path) {
	        var old_dirname = PATH.dirname(old_path);
	        var new_dirname = PATH.dirname(new_path);
	        var old_name = PATH.basename(old_path);
	        var new_name = PATH.basename(new_path);
	        // parents must exist
	        var lookup, old_dir, new_dir;
	        try {
	          lookup = FS.lookupPath(old_path, { parent: true });
	          old_dir = lookup.node;
	          lookup = FS.lookupPath(new_path, { parent: true });
	          new_dir = lookup.node;
	        } catch (e) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }
	        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        // need to be part of the same mount
	        if (old_dir.mount !== new_dir.mount) {
	          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
	        }
	        // source must exist
	        var old_node = FS.lookupNode(old_dir, old_name);
	        // old path should not be an ancestor of the new path
	        var relative = PATH.relative(old_path, new_dirname);
	        if (relative.charAt(0) !== '.') {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        // new path should not be an ancestor of the old path
	        relative = PATH.relative(new_path, old_dirname);
	        if (relative.charAt(0) !== '.') {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
	        }
	        // see if the new path already exists
	        var new_node;
	        try {
	          new_node = FS.lookupNode(new_dir, new_name);
	        } catch (e) {
	          // not fatal
	        }
	        // early out if nothing needs to change
	        if (old_node === new_node) {
	          return;
	        }
	        // we'll need to delete the old entry
	        var isdir = FS.isDir(old_node.mode);
	        var err = FS.mayDelete(old_dir, old_name, isdir);
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        // need delete permissions if we'll be overwriting.
	        // need create permissions if new doesn't already exist.
	        err = new_node ?
	          FS.mayDelete(new_dir, new_name, isdir) :
	          FS.mayCreate(new_dir, new_name);
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        if (!old_dir.node_ops.rename) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }
	        // if we are going to change the parent, check write permissions
	        if (new_dir !== old_dir) {
	          err = FS.nodePermissions(old_dir, 'w');
	          if (err) {
	            throw new FS.ErrnoError(err);
	          }
	        }
	        try {
	          if (FS.trackingDelegate['willMovePath']) {
	            FS.trackingDelegate['willMovePath'](old_path, new_path);
	          }
	        } catch(e) {
	          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
	        }
	        // remove the node from the lookup hash
	        FS.hashRemoveNode(old_node);
	        // do the underlying fs rename
	        try {
	          old_dir.node_ops.rename(old_node, new_dir, new_name);
	        } catch (e) {
	          throw e;
	        } finally {
	          // add the node back to the hash (in case node_ops.rename
	          // changed its name)
	          FS.hashAddNode(old_node);
	        }
	        try {
	          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
	        } catch(e) {
	          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
	        }
	      },rmdir:function(path) {
	        var lookup = FS.lookupPath(path, { parent: true });
	        var parent = lookup.node;
	        var name = PATH.basename(path);
	        var node = FS.lookupNode(parent, name);
	        var err = FS.mayDelete(parent, name, true);
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        if (!parent.node_ops.rmdir) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        if (FS.isMountpoint(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }
	        try {
	          if (FS.trackingDelegate['willDeletePath']) {
	            FS.trackingDelegate['willDeletePath'](path);
	          }
	        } catch(e) {
	          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
	        }
	        parent.node_ops.rmdir(parent, name);
	        FS.destroyNode(node);
	        try {
	          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
	        } catch(e) {
	          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
	        }
	      },readdir:function(path) {
	        var lookup = FS.lookupPath(path, { follow: true });
	        var node = lookup.node;
	        if (!node.node_ops.readdir) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	        }
	        return node.node_ops.readdir(node);
	      },unlink:function(path) {
	        var lookup = FS.lookupPath(path, { parent: true });
	        var parent = lookup.node;
	        var name = PATH.basename(path);
	        var node = FS.lookupNode(parent, name);
	        var err = FS.mayDelete(parent, name, false);
	        if (err) {
	          // According to POSIX, we should map EISDIR to EPERM, but
	          // we instead do what Linux does (and we must, as we use
	          // the musl linux libc).
	          throw new FS.ErrnoError(err);
	        }
	        if (!parent.node_ops.unlink) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        if (FS.isMountpoint(node)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
	        }
	        try {
	          if (FS.trackingDelegate['willDeletePath']) {
	            FS.trackingDelegate['willDeletePath'](path);
	          }
	        } catch(e) {
	          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
	        }
	        parent.node_ops.unlink(parent, name);
	        FS.destroyNode(node);
	        try {
	          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
	        } catch(e) {
	          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
	        }
	      },readlink:function(path) {
	        var lookup = FS.lookupPath(path);
	        var link = lookup.node;
	        if (!link) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        if (!link.node_ops.readlink) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
	      },stat:function(path, dontFollow) {
	        var lookup = FS.lookupPath(path, { follow: !dontFollow });
	        var node = lookup.node;
	        if (!node) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        if (!node.node_ops.getattr) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        return node.node_ops.getattr(node);
	      },lstat:function(path) {
	        return FS.stat(path, true);
	      },chmod:function(path, mode, dontFollow) {
	        var node;
	        if (typeof path === 'string') {
	          var lookup = FS.lookupPath(path, { follow: !dontFollow });
	          node = lookup.node;
	        } else {
	          node = path;
	        }
	        if (!node.node_ops.setattr) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        node.node_ops.setattr(node, {
	          mode: (mode & 4095) | (node.mode & ~4095),
	          timestamp: Date.now()
	        });
	      },lchmod:function(path, mode) {
	        FS.chmod(path, mode, true);
	      },fchmod:function(fd, mode) {
	        var stream = FS.getStream(fd);
	        if (!stream) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        FS.chmod(stream.node, mode);
	      },chown:function(path, uid, gid, dontFollow) {
	        var node;
	        if (typeof path === 'string') {
	          var lookup = FS.lookupPath(path, { follow: !dontFollow });
	          node = lookup.node;
	        } else {
	          node = path;
	        }
	        if (!node.node_ops.setattr) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        node.node_ops.setattr(node, {
	          timestamp: Date.now()
	          // we ignore the uid / gid for now
	        });
	      },lchown:function(path, uid, gid) {
	        FS.chown(path, uid, gid, true);
	      },fchown:function(fd, uid, gid) {
	        var stream = FS.getStream(fd);
	        if (!stream) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        FS.chown(stream.node, uid, gid);
	      },truncate:function(path, len) {
	        if (len < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        var node;
	        if (typeof path === 'string') {
	          var lookup = FS.lookupPath(path, { follow: true });
	          node = lookup.node;
	        } else {
	          node = path;
	        }
	        if (!node.node_ops.setattr) {
	          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
	        }
	        if (FS.isDir(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	        }
	        if (!FS.isFile(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        var err = FS.nodePermissions(node, 'w');
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        node.node_ops.setattr(node, {
	          size: len,
	          timestamp: Date.now()
	        });
	      },ftruncate:function(fd, len) {
	        var stream = FS.getStream(fd);
	        if (!stream) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if ((stream.flags & 2097155) === 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        FS.truncate(stream.node, len);
	      },utime:function(path, atime, mtime) {
	        var lookup = FS.lookupPath(path, { follow: true });
	        var node = lookup.node;
	        node.node_ops.setattr(node, {
	          timestamp: Math.max(atime, mtime)
	        });
	      },open:function(path, flags, mode, fd_start, fd_end) {
	        if (path === "") {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
	        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
	        if ((flags & 64)) {
	          mode = (mode & 4095) | 32768;
	        } else {
	          mode = 0;
	        }
	        var node;
	        if (typeof path === 'object') {
	          node = path;
	        } else {
	          path = PATH.normalize(path);
	          try {
	            var lookup = FS.lookupPath(path, {
	              follow: !(flags & 131072)
	            });
	            node = lookup.node;
	          } catch (e) {
	            // ignore
	          }
	        }
	        // perhaps we need to create the node
	        var created = false;
	        if ((flags & 64)) {
	          if (node) {
	            // if O_CREAT and O_EXCL are set, error out if the node already exists
	            if ((flags & 128)) {
	              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
	            }
	          } else {
	            // node doesn't exist, try to create it
	            node = FS.mknod(path, mode, 0);
	            created = true;
	          }
	        }
	        if (!node) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        // can't truncate a device
	        if (FS.isChrdev(node.mode)) {
	          flags &= ~512;
	        }
	        // if asked only for a directory, then this must be one
	        if ((flags & 65536) && !FS.isDir(node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	        }
	        // check permissions, if this is not a file we just created now (it is ok to
	        // create and write to a file with read-only permissions; it is read-only
	        // for later use)
	        if (!created) {
	          var err = FS.mayOpen(node, flags);
	          if (err) {
	            throw new FS.ErrnoError(err);
	          }
	        }
	        // do truncation if necessary
	        if ((flags & 512)) {
	          FS.truncate(node, 0);
	        }
	        // we've already handled these, don't pass down to the underlying vfs
	        flags &= ~(128 | 512);
	  
	        // register the stream with the filesystem
	        var stream = FS.createStream({
	          node: node,
	          path: FS.getPath(node),  // we want the absolute path to the node
	          flags: flags,
	          seekable: true,
	          position: 0,
	          stream_ops: node.stream_ops,
	          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
	          ungotten: [],
	          error: false
	        }, fd_start, fd_end);
	        // call the new stream's open function
	        if (stream.stream_ops.open) {
	          stream.stream_ops.open(stream);
	        }
	        if (Module['logReadFiles'] && !(flags & 1)) {
	          if (!FS.readFiles) FS.readFiles = {};
	          if (!(path in FS.readFiles)) {
	            FS.readFiles[path] = 1;
	            Module['printErr']('read file: ' + path);
	          }
	        }
	        try {
	          if (FS.trackingDelegate['onOpenFile']) {
	            var trackingFlags = 0;
	            if ((flags & 2097155) !== 1) {
	              trackingFlags |= FS.tracking.openFlags.READ;
	            }
	            if ((flags & 2097155) !== 0) {
	              trackingFlags |= FS.tracking.openFlags.WRITE;
	            }
	            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
	          }
	        } catch(e) {
	          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
	        }
	        return stream;
	      },close:function(stream) {
	        if (FS.isClosed(stream)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (stream.getdents) stream.getdents = null; // free readdir state
	        try {
	          if (stream.stream_ops.close) {
	            stream.stream_ops.close(stream);
	          }
	        } catch (e) {
	          throw e;
	        } finally {
	          FS.closeStream(stream.fd);
	        }
	        stream.fd = null;
	      },isClosed:function(stream) {
	        return stream.fd === null;
	      },llseek:function(stream, offset, whence) {
	        if (FS.isClosed(stream)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (!stream.seekable || !stream.stream_ops.llseek) {
	          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	        }
	        stream.position = stream.stream_ops.llseek(stream, offset, whence);
	        stream.ungotten = [];
	        return stream.position;
	      },read:function(stream, buffer, offset, length, position) {
	        if (length < 0 || position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        if (FS.isClosed(stream)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if ((stream.flags & 2097155) === 1) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (FS.isDir(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	        }
	        if (!stream.stream_ops.read) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        var seeking = typeof position !== 'undefined';
	        if (!seeking) {
	          position = stream.position;
	        } else if (!stream.seekable) {
	          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	        }
	        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
	        if (!seeking) stream.position += bytesRead;
	        return bytesRead;
	      },write:function(stream, buffer, offset, length, position, canOwn) {
	        if (length < 0 || position < 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        if (FS.isClosed(stream)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if ((stream.flags & 2097155) === 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (FS.isDir(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
	        }
	        if (!stream.stream_ops.write) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        if (stream.flags & 1024) {
	          // seek to the end before writing in append mode
	          FS.llseek(stream, 0, 2);
	        }
	        var seeking = typeof position !== 'undefined';
	        if (!seeking) {
	          position = stream.position;
	        } else if (!stream.seekable) {
	          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
	        }
	        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
	        if (!seeking) stream.position += bytesWritten;
	        try {
	          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
	        } catch(e) {
	          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
	        }
	        return bytesWritten;
	      },allocate:function(stream, offset, length) {
	        if (FS.isClosed(stream)) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (offset < 0 || length <= 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
	        }
	        if ((stream.flags & 2097155) === 0) {
	          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        }
	        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }
	        if (!stream.stream_ops.allocate) {
	          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
	        }
	        stream.stream_ops.allocate(stream, offset, length);
	      },mmap:function(stream, buffer, offset, length, position, prot, flags) {
	        // TODO if PROT is PROT_WRITE, make sure we have write access
	        if ((stream.flags & 2097155) === 1) {
	          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
	        }
	        if (!stream.stream_ops.mmap) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
	        }
	        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
	      },msync:function(stream, buffer, offset, length, mmapFlags) {
	        if (!stream || !stream.stream_ops.msync) {
	          return 0;
	        }
	        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
	      },munmap:function(stream) {
	        return 0;
	      },ioctl:function(stream, cmd, arg) {
	        if (!stream.stream_ops.ioctl) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
	        }
	        return stream.stream_ops.ioctl(stream, cmd, arg);
	      },readFile:function(path, opts) {
	        opts = opts || {};
	        opts.flags = opts.flags || 'r';
	        opts.encoding = opts.encoding || 'binary';
	        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
	          throw new Error('Invalid encoding type "' + opts.encoding + '"');
	        }
	        var ret;
	        var stream = FS.open(path, opts.flags);
	        var stat = FS.stat(path);
	        var length = stat.size;
	        var buf = new Uint8Array(length);
	        FS.read(stream, buf, 0, length, 0);
	        if (opts.encoding === 'utf8') {
	          ret = UTF8ArrayToString(buf, 0);
	        } else if (opts.encoding === 'binary') {
	          ret = buf;
	        }
	        FS.close(stream);
	        return ret;
	      },writeFile:function(path, data, opts) {
	        opts = opts || {};
	        opts.flags = opts.flags || 'w';
	        var stream = FS.open(path, opts.flags, opts.mode);
	        if (typeof data === 'string') {
	          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
	          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
	          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
	        } else if (ArrayBuffer.isView(data)) {
	          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
	        } else {
	          throw new Error('Unsupported data type');
	        }
	        FS.close(stream);
	      },cwd:function() {
	        return FS.currentPath;
	      },chdir:function(path) {
	        var lookup = FS.lookupPath(path, { follow: true });
	        if (lookup.node === null) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
	        }
	        if (!FS.isDir(lookup.node.mode)) {
	          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
	        }
	        var err = FS.nodePermissions(lookup.node, 'x');
	        if (err) {
	          throw new FS.ErrnoError(err);
	        }
	        FS.currentPath = lookup.path;
	      },createDefaultDirectories:function() {
	        FS.mkdir('/tmp');
	        FS.mkdir('/home');
	        FS.mkdir('/home/web_user');
	      },createDefaultDevices:function() {
	        // create /dev
	        FS.mkdir('/dev');
	        // setup /dev/null
	        FS.registerDevice(FS.makedev(1, 3), {
	          read: function() { return 0; },
	          write: function(stream, buffer, offset, length, pos) { return length; }
	        });
	        FS.mkdev('/dev/null', FS.makedev(1, 3));
	        // setup /dev/tty and /dev/tty1
	        // stderr needs to print output using Module['printErr']
	        // so we register a second tty just for it.
	        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
	        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
	        FS.mkdev('/dev/tty', FS.makedev(5, 0));
	        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
	        // setup /dev/[u]random
	        var random_device;
	        if (typeof crypto !== 'undefined') {
	          // for modern web browsers
	          var randomBuffer = new Uint8Array(1);
	          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
	        } else if (ENVIRONMENT_IS_NODE) {
	          // for nodejs
	          random_device = function() { return require('crypto')['randomBytes'](1)[0]; };
	        } else {
	          // default for ES5 platforms
	          random_device = function() { return (Math.random()*256)|0; };
	        }
	        FS.createDevice('/dev', 'random', random_device);
	        FS.createDevice('/dev', 'urandom', random_device);
	        // we're not going to emulate the actual shm device,
	        // just create the tmp dirs that reside in it commonly
	        FS.mkdir('/dev/shm');
	        FS.mkdir('/dev/shm/tmp');
	      },createSpecialDirectories:function() {
	        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
	        FS.mkdir('/proc');
	        FS.mkdir('/proc/self');
	        FS.mkdir('/proc/self/fd');
	        FS.mount({
	          mount: function() {
	            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
	            node.node_ops = {
	              lookup: function(parent, name) {
	                var fd = +name;
	                var stream = FS.getStream(fd);
	                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	                var ret = {
	                  parent: null,
	                  mount: { mountpoint: 'fake' },
	                  node_ops: { readlink: function() { return stream.path } }
	                };
	                ret.parent = ret; // make it look like a simple root node
	                return ret;
	              }
	            };
	            return node;
	          }
	        }, {}, '/proc/self/fd');
	      },createStandardStreams:function() {
	        // TODO deprecate the old functionality of a single
	        // input / output callback and that utilizes FS.createDevice
	        // and instead require a unique set of stream ops
	  
	        // by default, we symlink the standard streams to the
	        // default tty devices. however, if the standard streams
	        // have been overwritten we create a unique device for
	        // them instead.
	        if (Module['stdin']) {
	          FS.createDevice('/dev', 'stdin', Module['stdin']);
	        } else {
	          FS.symlink('/dev/tty', '/dev/stdin');
	        }
	        if (Module['stdout']) {
	          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
	        } else {
	          FS.symlink('/dev/tty', '/dev/stdout');
	        }
	        if (Module['stderr']) {
	          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
	        } else {
	          FS.symlink('/dev/tty1', '/dev/stderr');
	        }
	  
	        // open default streams for the stdin, stdout and stderr devices
	        var stdin = FS.open('/dev/stdin', 'r');
	        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
	  
	        var stdout = FS.open('/dev/stdout', 'w');
	        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
	  
	        var stderr = FS.open('/dev/stderr', 'w');
	        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
	      },ensureErrnoError:function() {
	        if (FS.ErrnoError) return;
	        FS.ErrnoError = function ErrnoError(errno, node) {
	          //Module.printErr(stackTrace()); // useful for debugging
	          this.node = node;
	          this.setErrno = function(errno) {
	            this.errno = errno;
	            for (var key in ERRNO_CODES) {
	              if (ERRNO_CODES[key] === errno) {
	                this.code = key;
	                break;
	              }
	            }
	          };
	          this.setErrno(errno);
	          this.message = ERRNO_MESSAGES[errno];
	          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)
	          if (this.stack) Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
	          if (this.stack) this.stack = demangleAll(this.stack);
	        };
	        FS.ErrnoError.prototype = new Error();
	        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
	        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
	        [ERRNO_CODES.ENOENT].forEach(function(code) {
	          FS.genericErrors[code] = new FS.ErrnoError(code);
	          FS.genericErrors[code].stack = '<generic error, no stack>';
	        });
	      },staticInit:function() {
	        FS.ensureErrnoError();
	  
	        FS.nameTable = new Array(4096);
	  
	        FS.mount(MEMFS, {}, '/');
	  
	        FS.createDefaultDirectories();
	        FS.createDefaultDevices();
	        FS.createSpecialDirectories();
	  
	        FS.filesystems = {
	          'MEMFS': MEMFS,
	          'IDBFS': IDBFS,
	          'NODEFS': NODEFS,
	          'WORKERFS': WORKERFS,
	        };
	      },init:function(input, output, error) {
	        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
	        FS.init.initialized = true;
	  
	        FS.ensureErrnoError();
	  
	        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
	        Module['stdin'] = input || Module['stdin'];
	        Module['stdout'] = output || Module['stdout'];
	        Module['stderr'] = error || Module['stderr'];
	  
	        FS.createStandardStreams();
	      },quit:function() {
	        FS.init.initialized = false;
	        // force-flush all streams, so we get musl std streams printed out
	        var fflush = Module['_fflush'];
	        if (fflush) fflush(0);
	        // close all of our streams
	        for (var i = 0; i < FS.streams.length; i++) {
	          var stream = FS.streams[i];
	          if (!stream) {
	            continue;
	          }
	          FS.close(stream);
	        }
	      },getMode:function(canRead, canWrite) {
	        var mode = 0;
	        if (canRead) mode |= 292 | 73;
	        if (canWrite) mode |= 146;
	        return mode;
	      },joinPath:function(parts, forceRelative) {
	        var path = PATH.join.apply(null, parts);
	        if (forceRelative && path[0] == '/') path = path.substr(1);
	        return path;
	      },absolutePath:function(relative, base) {
	        return PATH.resolve(base, relative);
	      },standardizePath:function(path) {
	        return PATH.normalize(path);
	      },findObject:function(path, dontResolveLastLink) {
	        var ret = FS.analyzePath(path, dontResolveLastLink);
	        if (ret.exists) {
	          return ret.object;
	        } else {
	          ___setErrNo(ret.error);
	          return null;
	        }
	      },analyzePath:function(path, dontResolveLastLink) {
	        // operate from within the context of the symlink's target
	        try {
	          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
	          path = lookup.path;
	        } catch (e) {
	        }
	        var ret = {
	          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
	          parentExists: false, parentPath: null, parentObject: null
	        };
	        try {
	          var lookup = FS.lookupPath(path, { parent: true });
	          ret.parentExists = true;
	          ret.parentPath = lookup.path;
	          ret.parentObject = lookup.node;
	          ret.name = PATH.basename(path);
	          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
	          ret.exists = true;
	          ret.path = lookup.path;
	          ret.object = lookup.node;
	          ret.name = lookup.node.name;
	          ret.isRoot = lookup.path === '/';
	        } catch (e) {
	          ret.error = e.errno;
	        }        return ret;
	      },createFolder:function(parent, name, canRead, canWrite) {
	        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
	        var mode = FS.getMode(canRead, canWrite);
	        return FS.mkdir(path, mode);
	      },createPath:function(parent, path, canRead, canWrite) {
	        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
	        var parts = path.split('/').reverse();
	        while (parts.length) {
	          var part = parts.pop();
	          if (!part) continue;
	          var current = PATH.join2(parent, part);
	          try {
	            FS.mkdir(current);
	          } catch (e) {
	            // ignore EEXIST
	          }
	          parent = current;
	        }
	        return current;
	      },createFile:function(parent, name, properties, canRead, canWrite) {
	        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
	        var mode = FS.getMode(canRead, canWrite);
	        return FS.create(path, mode);
	      },createDataFile:function(parent, name, data, canRead, canWrite, canOwn) {
	        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
	        var mode = FS.getMode(canRead, canWrite);
	        var node = FS.create(path, mode);
	        if (data) {
	          if (typeof data === 'string') {
	            var arr = new Array(data.length);
	            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
	            data = arr;
	          }
	          // make sure we can write to the file
	          FS.chmod(node, mode | 146);
	          var stream = FS.open(node, 'w');
	          FS.write(stream, data, 0, data.length, 0, canOwn);
	          FS.close(stream);
	          FS.chmod(node, mode);
	        }
	        return node;
	      },createDevice:function(parent, name, input, output) {
	        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
	        var mode = FS.getMode(!!input, !!output);
	        if (!FS.createDevice.major) FS.createDevice.major = 64;
	        var dev = FS.makedev(FS.createDevice.major++, 0);
	        // Create a fake device that a set of stream ops to emulate
	        // the old behavior.
	        FS.registerDevice(dev, {
	          open: function(stream) {
	            stream.seekable = false;
	          },
	          close: function(stream) {
	            // flush any pending line data
	            if (output && output.buffer && output.buffer.length) {
	              output(10);
	            }
	          },
	          read: function(stream, buffer, offset, length, pos /* ignored */) {
	            var bytesRead = 0;
	            for (var i = 0; i < length; i++) {
	              var result;
	              try {
	                result = input();
	              } catch (e) {
	                throw new FS.ErrnoError(ERRNO_CODES.EIO);
	              }
	              if (result === undefined && bytesRead === 0) {
	                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
	              }
	              if (result === null || result === undefined) break;
	              bytesRead++;
	              buffer[offset+i] = result;
	            }
	            if (bytesRead) {
	              stream.node.timestamp = Date.now();
	            }
	            return bytesRead;
	          },
	          write: function(stream, buffer, offset, length, pos) {
	            for (var i = 0; i < length; i++) {
	              try {
	                output(buffer[offset+i]);
	              } catch (e) {
	                throw new FS.ErrnoError(ERRNO_CODES.EIO);
	              }
	            }
	            if (length) {
	              stream.node.timestamp = Date.now();
	            }
	            return i;
	          }
	        });
	        return FS.mkdev(path, mode, dev);
	      },createLink:function(parent, name, target, canRead, canWrite) {
	        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
	        return FS.symlink(target, path);
	      },forceLoadFile:function(obj) {
	        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
	        var success = true;
	        if (typeof XMLHttpRequest !== 'undefined') {
	          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
	        } else if (Module['read']) {
	          // Command-line.
	          try {
	            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
	            //          read() will try to parse UTF8.
	            obj.contents = intArrayFromString(Module['read'](obj.url), true);
	            obj.usedBytes = obj.contents.length;
	          } catch (e) {
	            success = false;
	          }
	        } else {
	          throw new Error('Cannot load without read() or XMLHttpRequest.');
	        }
	        if (!success) ___setErrNo(ERRNO_CODES.EIO);
	        return success;
	      },createLazyFile:function(parent, name, url, canRead, canWrite) {
	        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
	        function LazyUint8Array() {
	          this.lengthKnown = false;
	          this.chunks = []; // Loaded chunks. Index is the chunk number
	        }
	        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
	          if (idx > this.length-1 || idx < 0) {
	            return undefined;
	          }
	          var chunkOffset = idx % this.chunkSize;
	          var chunkNum = (idx / this.chunkSize)|0;
	          return this.getter(chunkNum)[chunkOffset];
	        };
	        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
	          this.getter = getter;
	        };
	        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
	          // Find length
	          var xhr = new XMLHttpRequest();
	          xhr.open('HEAD', url, false);
	          xhr.send(null);
	          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
	          var datalength = Number(xhr.getResponseHeader("Content-length"));
	          var header;
	          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
	          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
	  
	          var chunkSize = 1024*1024; // Chunk size in bytes
	  
	          if (!hasByteServing) chunkSize = datalength;
	  
	          // Function to get a range from the remote URL.
	          var doXHR = (function(from, to) {
	            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
	            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
	  
	            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
	            var xhr = new XMLHttpRequest();
	            xhr.open('GET', url, false);
	            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
	  
	            // Some hints to the browser that we want binary data.
	            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
	            if (xhr.overrideMimeType) {
	              xhr.overrideMimeType('text/plain; charset=x-user-defined');
	            }
	  
	            xhr.send(null);
	            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
	            if (xhr.response !== undefined) {
	              return new Uint8Array(xhr.response || []);
	            } else {
	              return intArrayFromString(xhr.responseText || '', true);
	            }
	          });
	          var lazyArray = this;
	          lazyArray.setDataGetter(function(chunkNum) {
	            var start = chunkNum * chunkSize;
	            var end = (chunkNum+1) * chunkSize - 1; // including this byte
	            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
	            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
	              lazyArray.chunks[chunkNum] = doXHR(start, end);
	            }
	            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
	            return lazyArray.chunks[chunkNum];
	          });
	  
	          if (usesGzip || !datalength) {
	            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
	            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
	            datalength = this.getter(0).length;
	            chunkSize = datalength;
	            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
	          }
	  
	          this._length = datalength;
	          this._chunkSize = chunkSize;
	          this.lengthKnown = true;
	        };
	        if (typeof XMLHttpRequest !== 'undefined') {
	          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
	          var lazyArray = new LazyUint8Array();
	          Object.defineProperties(lazyArray, {
	            length: {
	              get: function() {
	                if(!this.lengthKnown) {
	                  this.cacheLength();
	                }
	                return this._length;
	              }
	            },
	            chunkSize: {
	              get: function() {
	                if(!this.lengthKnown) {
	                  this.cacheLength();
	                }
	                return this._chunkSize;
	              }
	            }
	          });
	  
	          var properties = { isDevice: false, contents: lazyArray };
	        } else {
	          var properties = { isDevice: false, url: url };
	        }
	  
	        var node = FS.createFile(parent, name, properties, canRead, canWrite);
	        // This is a total hack, but I want to get this lazy file code out of the
	        // core of MEMFS. If we want to keep this lazy file concept I feel it should
	        // be its own thin LAZYFS proxying calls to MEMFS.
	        if (properties.contents) {
	          node.contents = properties.contents;
	        } else if (properties.url) {
	          node.contents = null;
	          node.url = properties.url;
	        }
	        // Add a function that defers querying the file size until it is asked the first time.
	        Object.defineProperties(node, {
	          usedBytes: {
	            get: function() { return this.contents.length; }
	          }
	        });
	        // override each stream op with one that tries to force load the lazy file first
	        var stream_ops = {};
	        var keys = Object.keys(node.stream_ops);
	        keys.forEach(function(key) {
	          var fn = node.stream_ops[key];
	          stream_ops[key] = function forceLoadLazyFile() {
	            if (!FS.forceLoadFile(node)) {
	              throw new FS.ErrnoError(ERRNO_CODES.EIO);
	            }
	            return fn.apply(null, arguments);
	          };
	        });
	        // use a custom read function
	        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
	          if (!FS.forceLoadFile(node)) {
	            throw new FS.ErrnoError(ERRNO_CODES.EIO);
	          }
	          var contents = stream.node.contents;
	          if (position >= contents.length)
	            return 0;
	          var size = Math.min(contents.length - position, length);
	          assert(size >= 0);
	          if (contents.slice) { // normal array
	            for (var i = 0; i < size; i++) {
	              buffer[offset + i] = contents[position + i];
	            }
	          } else {
	            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
	              buffer[offset + i] = contents.get(position + i);
	            }
	          }
	          return size;
	        };
	        node.stream_ops = stream_ops;
	        return node;
	      },createPreloadedFile:function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
	        Browser.init(); // XXX perhaps this method should move onto Browser?
	        // TODO we should allow people to just pass in a complete filename instead
	        // of parent and name being that we just join them anyways
	        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
	        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
	        function processData(byteArray) {
	          function finish(byteArray) {
	            if (preFinish) preFinish();
	            if (!dontCreateFile) {
	              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
	            }
	            if (onload) onload();
	            removeRunDependency(dep);
	          }
	          var handled = false;
	          Module['preloadPlugins'].forEach(function(plugin) {
	            if (handled) return;
	            if (plugin['canHandle'](fullname)) {
	              plugin['handle'](byteArray, fullname, finish, function() {
	                if (onerror) onerror();
	                removeRunDependency(dep);
	              });
	              handled = true;
	            }
	          });
	          if (!handled) finish(byteArray);
	        }
	        addRunDependency(dep);
	        if (typeof url == 'string') {
	          Browser.asyncLoad(url, function(byteArray) {
	            processData(byteArray);
	          }, onerror);
	        } else {
	          processData(url);
	        }
	      },indexedDB:function() {
	        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
	      },DB_NAME:function() {
	        return 'EM_FS_' + window.location.pathname;
	      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths, onload, onerror) {
	        onload = onload || function(){};
	        onerror = onerror || function(){};
	        var indexedDB = FS.indexedDB();
	        try {
	          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	        } catch (e) {
	          return onerror(e);
	        }
	        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
	          console.log('creating db');
	          var db = openRequest.result;
	          db.createObjectStore(FS.DB_STORE_NAME);
	        };
	        openRequest.onsuccess = function openRequest_onsuccess() {
	          var db = openRequest.result;
	          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
	          var files = transaction.objectStore(FS.DB_STORE_NAME);
	          var ok = 0, fail = 0, total = paths.length;
	          function finish() {
	            if (fail == 0) onload(); else onerror();
	          }
	          paths.forEach(function(path) {
	            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
	            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish(); };
	            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish(); };
	          });
	          transaction.onerror = onerror;
	        };
	        openRequest.onerror = onerror;
	      },loadFilesFromDB:function(paths, onload, onerror) {
	        onload = onload || function(){};
	        onerror = onerror || function(){};
	        var indexedDB = FS.indexedDB();
	        try {
	          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
	        } catch (e) {
	          return onerror(e);
	        }
	        openRequest.onupgradeneeded = onerror; // no database to load from
	        openRequest.onsuccess = function openRequest_onsuccess() {
	          var db = openRequest.result;
	          try {
	            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
	          } catch(e) {
	            onerror(e);
	            return;
	          }
	          var files = transaction.objectStore(FS.DB_STORE_NAME);
	          var ok = 0, fail = 0, total = paths.length;
	          function finish() {
	            if (fail == 0) onload(); else onerror();
	          }
	          paths.forEach(function(path) {
	            var getRequest = files.get(path);
	            getRequest.onsuccess = function getRequest_onsuccess() {
	              if (FS.analyzePath(path).exists) {
	                FS.unlink(path);
	              }
	              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
	              ok++;
	              if (ok + fail == total) finish();
	            };
	            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish(); };
	          });
	          transaction.onerror = onerror;
	        };
	        openRequest.onerror = onerror;
	      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd, path) {
	        if (path[0] !== '/') {
	          // relative path
	          var dir;
	          if (dirfd === -100) {
	            dir = FS.cwd();
	          } else {
	            var dirstream = FS.getStream(dirfd);
	            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	            dir = dirstream.path;
	          }
	          path = PATH.join2(dir, path);
	        }
	        return path;
	      },doStat:function(func, path, buf) {
	        try {
	          var stat = func(path);
	        } catch (e) {
	          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
	            // an error occurred while trying to look up the path; we should just report ENOTDIR
	            return -ERRNO_CODES.ENOTDIR;
	          }
	          throw e;
	        }
	        HEAP32[((buf)>>2)]=stat.dev;
	        HEAP32[(((buf)+(4))>>2)]=0;
	        HEAP32[(((buf)+(8))>>2)]=stat.ino;
	        HEAP32[(((buf)+(12))>>2)]=stat.mode;
	        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
	        HEAP32[(((buf)+(20))>>2)]=stat.uid;
	        HEAP32[(((buf)+(24))>>2)]=stat.gid;
	        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
	        HEAP32[(((buf)+(32))>>2)]=0;
	        HEAP32[(((buf)+(36))>>2)]=stat.size;
	        HEAP32[(((buf)+(40))>>2)]=4096;
	        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
	        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
	        HEAP32[(((buf)+(52))>>2)]=0;
	        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
	        HEAP32[(((buf)+(60))>>2)]=0;
	        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
	        HEAP32[(((buf)+(68))>>2)]=0;
	        HEAP32[(((buf)+(72))>>2)]=stat.ino;
	        return 0;
	      },doMsync:function(addr, stream, len, flags) {
	        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
	        FS.msync(stream, buffer, 0, len, flags);
	      },doMkdir:function(path, mode) {
	        // remove a trailing slash, if one - /a/b/ has basename of '', but
	        // we want to create b in the context of this function
	        path = PATH.normalize(path);
	        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
	        FS.mkdir(path, mode, 0);
	        return 0;
	      },doMknod:function(path, mode, dev) {
	        // we don't want this in the JS API as it uses mknod to create all nodes.
	        switch (mode & 61440) {
	          case 32768:
	          case 8192:
	          case 24576:
	          case 4096:
	          case 49152:
	            break;
	          default: return -ERRNO_CODES.EINVAL;
	        }
	        FS.mknod(path, mode, dev);
	        return 0;
	      },doReadlink:function(path, buf, bufsize) {
	        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
	        var ret = FS.readlink(path);
	  
	        var len = Math.min(bufsize, lengthBytesUTF8(ret));
	        var endChar = HEAP8[buf+len];
	        stringToUTF8(ret, buf, bufsize+1);
	        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
	        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
	        HEAP8[buf+len] = endChar;
	  
	        return len;
	      },doAccess:function(path, amode) {
	        if (amode & ~7) {
	          // need a valid mode
	          return -ERRNO_CODES.EINVAL;
	        }
	        var node;
	        var lookup = FS.lookupPath(path, { follow: true });
	        node = lookup.node;
	        var perms = '';
	        if (amode & 4) perms += 'r';
	        if (amode & 2) perms += 'w';
	        if (amode & 1) perms += 'x';
	        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
	          return -ERRNO_CODES.EACCES;
	        }
	        return 0;
	      },doDup:function(path, flags, suggestFD) {
	        var suggest = FS.getStream(suggestFD);
	        if (suggest) FS.close(suggest);
	        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
	      },doReadv:function(stream, iov, iovcnt, offset) {
	        var ret = 0;
	        for (var i = 0; i < iovcnt; i++) {
	          var ptr = HEAP32[(((iov)+(i*8))>>2)];
	          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
	          var curr = FS.read(stream, HEAP8,ptr, len, offset);
	          if (curr < 0) return -1;
	          ret += curr;
	          if (curr < len) break; // nothing more to read
	        }
	        return ret;
	      },doWritev:function(stream, iov, iovcnt, offset) {
	        var ret = 0;
	        for (var i = 0; i < iovcnt; i++) {
	          var ptr = HEAP32[(((iov)+(i*8))>>2)];
	          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
	          var curr = FS.write(stream, HEAP8,ptr, len, offset);
	          if (curr < 0) return -1;
	          ret += curr;
	        }
	        return ret;
	      },varargs:0,get:function(varargs) {
	        SYSCALLS.varargs += 4;
	        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
	        return ret;
	      },getStr:function() {
	        var ret = Pointer_stringify(SYSCALLS.get());
	        return ret;
	      },getStreamFromFD:function() {
	        var stream = FS.getStream(SYSCALLS.get());
	        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        return stream;
	      },getSocketFromFD:function() {
	        var socket = SOCKFS.getSocket(SYSCALLS.get());
	        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
	        return socket;
	      },getSocketAddress:function(allowNull) {
	        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
	        if (allowNull && addrp === 0) return null;
	        var info = __read_sockaddr(addrp, addrlen);
	        if (info.errno) throw new FS.ErrnoError(info.errno);
	        info.addr = DNS.lookup_addr(info.addr) || info.addr;
	        return info;
	      },get64:function() {
	        var low = SYSCALLS.get(), high = SYSCALLS.get();
	        if (low >= 0) assert(high === 0);
	        else assert(high === -1);
	        return low;
	      },getZero:function() {
	        assert(SYSCALLS.get() === 0);
	      }};function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // unlink
	      var path = SYSCALLS.getStr();
	      FS.unlink(path);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall118(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // fsync
	      var stream = SYSCALLS.getStreamFromFD();
	      return 0; // we can't do anything synchronously; the in-memory FS is already synced to
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall125(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // mprotect
	      return 0; // let's not and say we did
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // llseek
	      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
	      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
	      var offset = offset_low;
	      FS.llseek(stream, offset, whence);
	      HEAP32[((result)>>2)]=stream.position;
	      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // readv
	      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
	      return SYSCALLS.doReadv(stream, iov, iovcnt);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // writev
	      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
	      return SYSCALLS.doWritev(stream, iov, iovcnt);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall15(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // chmod
	      var path = SYSCALLS.getStr(), mode = SYSCALLS.get();
	      FS.chmod(path, mode);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall183(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // getcwd
	      var buf = SYSCALLS.get(), size = SYSCALLS.get();
	      if (size === 0) return -ERRNO_CODES.EINVAL;
	      var cwd = FS.cwd();
	      var cwdLengthInBytes = lengthBytesUTF8(cwd);
	      if (size < cwdLengthInBytes + 1) return -ERRNO_CODES.ERANGE;
	      stringToUTF8(cwd, buf, size);
	      return buf;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall192(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // mmap2
	      var addr = SYSCALLS.get(), len = SYSCALLS.get(), prot = SYSCALLS.get(), flags = SYSCALLS.get(), fd = SYSCALLS.get(), off = SYSCALLS.get();
	      off <<= 12; // undo pgoffset
	      var ptr;
	      var allocated = false;
	      if (fd === -1) {
	        ptr = _memalign(PAGE_SIZE, len);
	        if (!ptr) return -ERRNO_CODES.ENOMEM;
	        _memset(ptr, 0, len);
	        allocated = true;
	      } else {
	        var info = FS.getStream(fd);
	        if (!info) return -ERRNO_CODES.EBADF;
	        var res = FS.mmap(info, HEAPU8, addr, len, off, prot, flags);
	        ptr = res.ptr;
	        allocated = res.allocated;
	      }
	      SYSCALLS.mappings[ptr] = { malloc: ptr, len: len, allocated: allocated, fd: fd, flags: flags };
	      return ptr;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall194(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // ftruncate64
	      var fd = SYSCALLS.get(), zero = SYSCALLS.getZero(), length = SYSCALLS.get64();
	      FS.ftruncate(fd, length);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall195(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // SYS_stat64
	      var path = SYSCALLS.getStr(), buf = SYSCALLS.get();
	      return SYSCALLS.doStat(FS.stat, path, buf);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall196(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // SYS_lstat64
	      var path = SYSCALLS.getStr(), buf = SYSCALLS.get();
	      return SYSCALLS.doStat(FS.lstat, path, buf);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall197(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // SYS_fstat64
	      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get();
	      return SYSCALLS.doStat(FS.stat, stream.path, buf);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  
	  var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};function ___syscall20(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // getpid
	      return PROCINFO.pid;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  
	  function ___syscall202(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // getgid32
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }function ___syscall201(
	  ) {
	  return ___syscall202.apply(null, arguments)
	  }

	  function ___syscall207(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // fchown32
	      var fd = SYSCALLS.get(), owner = SYSCALLS.get(), group = SYSCALLS.get();
	      FS.fchown(fd, owner, group);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall212(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // chown32
	      var path = SYSCALLS.getStr(), owner = SYSCALLS.get(), group = SYSCALLS.get();
	      FS.chown(path, owner, group);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // fcntl64
	      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
	      switch (cmd) {
	        case 0: {
	          var arg = SYSCALLS.get();
	          if (arg < 0) {
	            return -ERRNO_CODES.EINVAL;
	          }
	          var newStream;
	          newStream = FS.open(stream.path, stream.flags, 0, arg);
	          return newStream.fd;
	        }
	        case 1:
	        case 2:
	          return 0;  // FD_CLOEXEC makes no sense for a single process.
	        case 3:
	          return stream.flags;
	        case 4: {
	          var arg = SYSCALLS.get();
	          stream.flags |= arg;
	          return 0;
	        }
	        case 12:
	        case 12: {
	          var arg = SYSCALLS.get();
	          var offset = 0;
	          // We're always unlocked.
	          HEAP16[(((arg)+(offset))>>1)]=2;
	          return 0;
	        }
	        case 13:
	        case 14:
	        case 13:
	        case 14:
	          return 0; // Pretend that the locking is successful.
	        case 16:
	        case 8:
	          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
	        case 9:
	          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
	          ___setErrNo(ERRNO_CODES.EINVAL);
	          return -1;
	        default: {
	          return -ERRNO_CODES.EINVAL;
	        }
	      }
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall3(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // read
	      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();
	      return FS.read(stream, HEAP8,buf, count);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall33(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // access
	      var path = SYSCALLS.getStr(), amode = SYSCALLS.get();
	      return SYSCALLS.doAccess(path, amode);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall39(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // mkdir
	      var path = SYSCALLS.getStr(), mode = SYSCALLS.get();
	      return SYSCALLS.doMkdir(path, mode);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall4(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // write
	      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();
	      return FS.write(stream, HEAP8,buf, count);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall40(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // rmdir
	      var path = SYSCALLS.getStr();
	      FS.rmdir(path);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // open
	      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get(); // optional TODO
	      var stream = FS.open(pathname, flags, mode);
	      return stream.fd;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // ioctl
	      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
	      switch (op) {
	        case 21509:
	        case 21505: {
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          return 0;
	        }
	        case 21510:
	        case 21511:
	        case 21512:
	        case 21506:
	        case 21507:
	        case 21508: {
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          return 0; // no-op, not actually adjusting terminal settings
	        }
	        case 21519: {
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          var argp = SYSCALLS.get();
	          HEAP32[((argp)>>2)]=0;
	          return 0;
	        }
	        case 21520: {
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          return -ERRNO_CODES.EINVAL; // not supported
	        }
	        case 21531: {
	          var argp = SYSCALLS.get();
	          return FS.ioctl(stream, op, argp);
	        }
	        case 21523: {
	          // TODO: in theory we should write to the winsize struct that gets
	          // passed in, but for now musl doesn't read anything on it
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          return 0;
	        }
	        case 21524: {
	          // TODO: technically, this ioctl call should change the window size.
	          // but, since emscripten doesn't have any concept of a terminal window
	          // yet, we'll just silently throw it away as we do TIOCGWINSZ
	          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
	          return 0;
	        }
	        default: abort('bad ioctl syscall ' + op);
	      }
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // close
	      var stream = SYSCALLS.getStreamFromFD();
	      FS.close(stream);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall85(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // readlink
	      var path = SYSCALLS.getStr(), buf = SYSCALLS.get(), bufsize = SYSCALLS.get();
	      return SYSCALLS.doReadlink(path, buf, bufsize);
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // munmap
	      var addr = SYSCALLS.get(), len = SYSCALLS.get();
	      // TODO: support unmmap'ing parts of allocations
	      var info = SYSCALLS.mappings[addr];
	      if (!info) return 0;
	      if (len === info.len) {
	        var stream = FS.getStream(info.fd);
	        SYSCALLS.doMsync(addr, stream, len, info.flags);
	        FS.munmap(stream);
	        SYSCALLS.mappings[addr] = null;
	        if (info.allocated) {
	          _free(info.malloc);
	        }
	      }
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___syscall94(which, varargs) {SYSCALLS.varargs = varargs;
	  try {
	   // fchmod
	      var fd = SYSCALLS.get(), mode = SYSCALLS.get();
	      FS.fchmod(fd, mode);
	      return 0;
	    } catch (e) {
	    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
	    return -e.errno;
	  }
	  }

	  function ___unlock() {}

	  function _abort() {
	      Module['abort']();
	    }

	  function _emscripten_get_now() { abort(); }

	  
	  
	  
	  
	  var _environ=STATICTOP; STATICTOP += 16;function ___buildEnvironment(env) {
	      // WARNING: Arbitrary limit!
	      var MAX_ENV_VALUES = 64;
	      var TOTAL_ENV_SIZE = 1024;
	  
	      // Statically allocate memory for the environment.
	      var poolPtr;
	      var envPtr;
	      if (!___buildEnvironment.called) {
	        ___buildEnvironment.called = true;
	        // Set default values. Use string keys for Closure Compiler compatibility.
	        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
	        ENV['PATH'] = '/';
	        ENV['PWD'] = '/';
	        ENV['HOME'] = '/home/web_user';
	        ENV['LANG'] = 'C.UTF-8';
	        ENV['_'] = Module['thisProgram'];
	        // Allocate memory.
	        poolPtr = staticAlloc(TOTAL_ENV_SIZE);
	        envPtr = staticAlloc(MAX_ENV_VALUES * 4);
	        HEAP32[((envPtr)>>2)]=poolPtr;
	        HEAP32[((_environ)>>2)]=envPtr;
	      } else {
	        envPtr = HEAP32[((_environ)>>2)];
	        poolPtr = HEAP32[((envPtr)>>2)];
	      }
	  
	      // Collect key=value lines.
	      var strings = [];
	      var totalSize = 0;
	      for (var key in env) {
	        if (typeof env[key] === 'string') {
	          var line = key + '=' + env[key];
	          strings.push(line);
	          totalSize += line.length;
	        }
	      }
	      if (totalSize > TOTAL_ENV_SIZE) {
	        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
	      }
	  
	      // Make new.
	      var ptrSize = 4;
	      for (var i = 0; i < strings.length; i++) {
	        var line = strings[i];
	        writeAsciiToMemory(line, poolPtr);
	        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
	        poolPtr += line.length + 1;
	      }
	      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
	    }var ENV={};function _getenv(name) {
	      // char *getenv(const char *name);
	      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
	      if (name === 0) return 0;
	      name = Pointer_stringify(name);
	      if (!ENV.hasOwnProperty(name)) return 0;
	  
	      if (_getenv.ret) _free(_getenv.ret);
	      _getenv.ret = allocateUTF8(ENV[name]);
	      return _getenv.ret;
	    }

	  function _gettimeofday(ptr) {
	      var now = Date.now();
	      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
	      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
	      return 0;
	    }

	  function _llvm_trap() {
	      abort('trap!');
	    }

	  
	  var ___tm_current=STATICTOP; STATICTOP += 48;  
	  
	  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);
	  
	  
	  var _tzname=STATICTOP; STATICTOP += 16;  
	  var _daylight=STATICTOP; STATICTOP += 16;  
	  var _timezone=STATICTOP; STATICTOP += 16;function _tzset() {
	      // TODO: Use (malleable) environment variables instead of system settings.
	      if (_tzset.called) return;
	      _tzset.called = true;
	  
	      // timezone is specified as seconds west of UTC ("The external variable
	      // `timezone` shall be set to the difference, in seconds, between
	      // Coordinated Universal Time (UTC) and local standard time."), the same
	      // as returned by getTimezoneOffset().
	      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
	      HEAP32[((_timezone)>>2)]=(new Date()).getTimezoneOffset() * 60;
	  
	      var winter = new Date(2000, 0, 1);
	      var summer = new Date(2000, 6, 1);
	      HEAP32[((_daylight)>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
	  
	      function extractZone(date) {
	        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
	        return match ? match[1] : "GMT";
	      }      var winterName = extractZone(winter);
	      var summerName = extractZone(summer);
	      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
	      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
	      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
	        // Northern hemisphere
	        HEAP32[((_tzname)>>2)]=winterNamePtr;
	        HEAP32[(((_tzname)+(4))>>2)]=summerNamePtr;
	      } else {
	        HEAP32[((_tzname)>>2)]=summerNamePtr;
	        HEAP32[(((_tzname)+(4))>>2)]=winterNamePtr;
	      }
	    }function _localtime_r(time, tmPtr) {
	      _tzset();
	      var date = new Date(HEAP32[((time)>>2)]*1000);
	      HEAP32[((tmPtr)>>2)]=date.getSeconds();
	      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
	      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
	      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
	      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
	      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
	      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
	  
	      var start = new Date(date.getFullYear(), 0, 1);
	      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
	      HEAP32[(((tmPtr)+(28))>>2)]=yday;
	      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
	  
	      // Attention: DST is in December in South, and some regions don't have DST at all.
	      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
	      var winterOffset = start.getTimezoneOffset();
	      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
	      HEAP32[(((tmPtr)+(32))>>2)]=dst;
	  
	      var zonePtr = HEAP32[(((_tzname)+(dst ? 4 : 0))>>2)];
	      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
	  
	      return tmPtr;
	    }function _localtime(time) {
	      return _localtime_r(time, ___tm_current);
	    }

	  
	  function _emscripten_memcpy_big(dest, src, num) {
	      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
	      return dest;
	    } 

	   

	   

	   

	  function _pthread_cond_wait() { return 0; }

	  
	  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
	      return PTHREAD_SPECIFIC[key] || 0;
	    }

	  
	  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
	      if (key == 0) {
	        return ERRNO_CODES.EINVAL;
	      }
	      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
	      // values start at 0
	      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
	      PTHREAD_SPECIFIC_NEXT_KEY++;
	      return 0;
	    }

	   

	   

	  function _pthread_once(ptr, func) {
	      if (!_pthread_once.seen) _pthread_once.seen = {};
	      if (ptr in _pthread_once.seen) return;
	      Module['dynCall_v'](func);
	      _pthread_once.seen[ptr] = 1;
	    }

	  function _pthread_setspecific(key, value) {
	      if (!(key in PTHREAD_SPECIFIC)) {
	        return ERRNO_CODES.EINVAL;
	      }
	      PTHREAD_SPECIFIC[key] = value;
	      return 0;
	    }

	   

	  
	  
	  function __isLeapYear(year) {
	        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
	    }
	  
	  function __arraySum(array, index) {
	      var sum = 0;
	      for (var i = 0; i <= index; sum += array[i++]);
	      return sum;
	    }
	  
	  
	  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
	  
	  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
	      var newDate = new Date(date.getTime());
	      while(days > 0) {
	        var leap = __isLeapYear(newDate.getFullYear());
	        var currentMonth = newDate.getMonth();
	        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
	  
	        if (days > daysInCurrentMonth-newDate.getDate()) {
	          // we spill over to next month
	          days -= (daysInCurrentMonth-newDate.getDate()+1);
	          newDate.setDate(1);
	          if (currentMonth < 11) {
	            newDate.setMonth(currentMonth+1);
	          } else {
	            newDate.setMonth(0);
	            newDate.setFullYear(newDate.getFullYear()+1);
	          }
	        } else {
	          // we stay in current month 
	          newDate.setDate(newDate.getDate()+days);
	          return newDate;
	        }
	      }
	  
	      return newDate;
	    }function _strftime(s, maxsize, format, tm) {
	      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
	      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
	  
	      var tm_zone = HEAP32[(((tm)+(40))>>2)];
	  
	      var date = {
	        tm_sec: HEAP32[((tm)>>2)],
	        tm_min: HEAP32[(((tm)+(4))>>2)],
	        tm_hour: HEAP32[(((tm)+(8))>>2)],
	        tm_mday: HEAP32[(((tm)+(12))>>2)],
	        tm_mon: HEAP32[(((tm)+(16))>>2)],
	        tm_year: HEAP32[(((tm)+(20))>>2)],
	        tm_wday: HEAP32[(((tm)+(24))>>2)],
	        tm_yday: HEAP32[(((tm)+(28))>>2)],
	        tm_isdst: HEAP32[(((tm)+(32))>>2)],
	        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
	        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
	      };
	  
	      var pattern = Pointer_stringify(format);
	  
	      // expand format
	      var EXPANSION_RULES_1 = {
	        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
	        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
	        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
	        '%h': '%b',                       // Equivalent to %b
	        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
	        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
	        '%T': '%H:%M:%S',                 // Replaced by the time
	        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
	        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
	      };
	      for (var rule in EXPANSION_RULES_1) {
	        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
	      }
	  
	      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
	      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
	  
	      function leadingSomething(value, digits, character) {
	        var str = typeof value === 'number' ? value.toString() : (value || '');
	        while (str.length < digits) {
	          str = character[0]+str;
	        }
	        return str;
	      }  
	      function leadingNulls(value, digits) {
	        return leadingSomething(value, digits, '0');
	      }  
	      function compareByDay(date1, date2) {
	        function sgn(value) {
	          return value < 0 ? -1 : (value > 0 ? 1 : 0);
	        }  
	        var compare;
	        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
	          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
	            compare = sgn(date1.getDate()-date2.getDate());
	          }
	        }
	        return compare;
	      }  
	      function getFirstWeekStartDate(janFourth) {
	          switch (janFourth.getDay()) {
	            case 0: // Sunday
	              return new Date(janFourth.getFullYear()-1, 11, 29);
	            case 1: // Monday
	              return janFourth;
	            case 2: // Tuesday
	              return new Date(janFourth.getFullYear(), 0, 3);
	            case 3: // Wednesday
	              return new Date(janFourth.getFullYear(), 0, 2);
	            case 4: // Thursday
	              return new Date(janFourth.getFullYear(), 0, 1);
	            case 5: // Friday
	              return new Date(janFourth.getFullYear()-1, 11, 31);
	            case 6: // Saturday
	              return new Date(janFourth.getFullYear()-1, 11, 30);
	          }
	      }  
	      function getWeekBasedYear(date) {
	          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
	  
	          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
	          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
	  
	          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
	          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
	  
	          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
	            // this date is after the start of the first week of this year
	            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
	              return thisDate.getFullYear()+1;
	            } else {
	              return thisDate.getFullYear();
	            }
	          } else { 
	            return thisDate.getFullYear()-1;
	          }
	      }  
	      var EXPANSION_RULES_2 = {
	        '%a': function(date) {
	          return WEEKDAYS[date.tm_wday].substring(0,3);
	        },
	        '%A': function(date) {
	          return WEEKDAYS[date.tm_wday];
	        },
	        '%b': function(date) {
	          return MONTHS[date.tm_mon].substring(0,3);
	        },
	        '%B': function(date) {
	          return MONTHS[date.tm_mon];
	        },
	        '%C': function(date) {
	          var year = date.tm_year+1900;
	          return leadingNulls((year/100)|0,2);
	        },
	        '%d': function(date) {
	          return leadingNulls(date.tm_mday, 2);
	        },
	        '%e': function(date) {
	          return leadingSomething(date.tm_mday, 2, ' ');
	        },
	        '%g': function(date) {
	          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
	          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
	          // January 4th, which is also the week that includes the first Thursday of the year, and 
	          // is also the first week that contains at least four days in the year. 
	          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
	          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
	          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
	          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
	          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
	          
	          return getWeekBasedYear(date).toString().substring(2);
	        },
	        '%G': function(date) {
	          return getWeekBasedYear(date);
	        },
	        '%H': function(date) {
	          return leadingNulls(date.tm_hour, 2);
	        },
	        '%I': function(date) {
	          var twelveHour = date.tm_hour;
	          if (twelveHour == 0) twelveHour = 12;
	          else if (twelveHour > 12) twelveHour -= 12;
	          return leadingNulls(twelveHour, 2);
	        },
	        '%j': function(date) {
	          // Day of the year (001-366)
	          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
	        },
	        '%m': function(date) {
	          return leadingNulls(date.tm_mon+1, 2);
	        },
	        '%M': function(date) {
	          return leadingNulls(date.tm_min, 2);
	        },
	        '%n': function() {
	          return '\n';
	        },
	        '%p': function(date) {
	          if (date.tm_hour >= 0 && date.tm_hour < 12) {
	            return 'AM';
	          } else {
	            return 'PM';
	          }
	        },
	        '%S': function(date) {
	          return leadingNulls(date.tm_sec, 2);
	        },
	        '%t': function() {
	          return '\t';
	        },
	        '%u': function(date) {
	          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
	          return day.getDay() || 7;
	        },
	        '%U': function(date) {
	          // Replaced by the week number of the year as a decimal number [00,53]. 
	          // The first Sunday of January is the first day of week 1; 
	          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
	          var janFirst = new Date(date.tm_year+1900, 0, 1);
	          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
	          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
	          
	          // is target date after the first Sunday?
	          if (compareByDay(firstSunday, endDate) < 0) {
	            // calculate difference in days between first Sunday and endDate
	            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
	            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
	            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
	            return leadingNulls(Math.ceil(days/7), 2);
	          }
	  
	          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
	        },
	        '%V': function(date) {
	          // Replaced by the week number of the year (Monday as the first day of the week) 
	          // as a decimal number [01,53]. If the week containing 1 January has four 
	          // or more days in the new year, then it is considered week 1. 
	          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
	          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
	          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
	          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
	  
	          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
	          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
	  
	          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
	  
	          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
	            // if given date is before this years first week, then it belongs to the 53rd week of last year
	            return '53';
	          } 
	  
	          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
	            // if given date is after next years first week, then it belongs to the 01th week of next year
	            return '01';
	          }
	  
	          // given date is in between CW 01..53 of this calendar year
	          var daysDifference;
	          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
	            // first CW of this year starts last year
	            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate();
	          } else {
	            // first CW of this year starts this year
	            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
	          }
	          return leadingNulls(Math.ceil(daysDifference/7), 2);
	        },
	        '%w': function(date) {
	          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
	          return day.getDay();
	        },
	        '%W': function(date) {
	          // Replaced by the week number of the year as a decimal number [00,53]. 
	          // The first Monday of January is the first day of week 1; 
	          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
	          var janFirst = new Date(date.tm_year, 0, 1);
	          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
	          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
	  
	          // is target date after the first Monday?
	          if (compareByDay(firstMonday, endDate) < 0) {
	            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
	            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
	            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
	            return leadingNulls(Math.ceil(days/7), 2);
	          }
	          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
	        },
	        '%y': function(date) {
	          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
	          return (date.tm_year+1900).toString().substring(2);
	        },
	        '%Y': function(date) {
	          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
	          return date.tm_year+1900;
	        },
	        '%z': function(date) {
	          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
	          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
	          var off = date.tm_gmtoff;
	          var ahead = off >= 0;
	          off = Math.abs(off) / 60;
	          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
	          off = (off / 60)*100 + (off % 60);
	          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
	        },
	        '%Z': function(date) {
	          return date.tm_zone;
	        },
	        '%%': function() {
	          return '%';
	        }
	      };
	      for (var rule in EXPANSION_RULES_2) {
	        if (pattern.indexOf(rule) >= 0) {
	          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
	        }
	      }
	  
	      var bytes = intArrayFromString(pattern, false);
	      if (bytes.length > maxsize) {
	        return 0;
	      } 
	  
	      writeArrayToMemory(bytes, s);
	      return bytes.length-1;
	    }function _strftime_l(s, maxsize, format, tm) {
	      return _strftime(s, maxsize, format, tm); // no locale support yet
	    }

	  function _sysconf(name) {
	      // long sysconf(int name);
	      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
	      switch(name) {
	        case 30: return PAGE_SIZE;
	        case 85:
	          var maxHeapSize = 2*1024*1024*1024 - 65536;
	          return maxHeapSize / PAGE_SIZE;
	        case 132:
	        case 133:
	        case 12:
	        case 137:
	        case 138:
	        case 15:
	        case 235:
	        case 16:
	        case 17:
	        case 18:
	        case 19:
	        case 20:
	        case 149:
	        case 13:
	        case 10:
	        case 236:
	        case 153:
	        case 9:
	        case 21:
	        case 22:
	        case 159:
	        case 154:
	        case 14:
	        case 77:
	        case 78:
	        case 139:
	        case 80:
	        case 81:
	        case 82:
	        case 68:
	        case 67:
	        case 164:
	        case 11:
	        case 29:
	        case 47:
	        case 48:
	        case 95:
	        case 52:
	        case 51:
	        case 46:
	          return 200809;
	        case 79:
	          return 0;
	        case 27:
	        case 246:
	        case 127:
	        case 128:
	        case 23:
	        case 24:
	        case 160:
	        case 161:
	        case 181:
	        case 182:
	        case 242:
	        case 183:
	        case 184:
	        case 243:
	        case 244:
	        case 245:
	        case 165:
	        case 178:
	        case 179:
	        case 49:
	        case 50:
	        case 168:
	        case 169:
	        case 175:
	        case 170:
	        case 171:
	        case 172:
	        case 97:
	        case 76:
	        case 32:
	        case 173:
	        case 35:
	          return -1;
	        case 176:
	        case 177:
	        case 7:
	        case 155:
	        case 8:
	        case 157:
	        case 125:
	        case 126:
	        case 92:
	        case 93:
	        case 129:
	        case 130:
	        case 131:
	        case 94:
	        case 91:
	          return 1;
	        case 74:
	        case 60:
	        case 69:
	        case 70:
	        case 4:
	          return 1024;
	        case 31:
	        case 42:
	        case 72:
	          return 32;
	        case 87:
	        case 26:
	        case 33:
	          return 2147483647;
	        case 34:
	        case 1:
	          return 47839;
	        case 38:
	        case 36:
	          return 99;
	        case 43:
	        case 37:
	          return 2048;
	        case 0: return 2097152;
	        case 3: return 65536;
	        case 28: return 32768;
	        case 44: return 32767;
	        case 75: return 16384;
	        case 39: return 1000;
	        case 89: return 700;
	        case 71: return 256;
	        case 40: return 255;
	        case 2: return 100;
	        case 180: return 64;
	        case 25: return 20;
	        case 5: return 16;
	        case 6: return 6;
	        case 73: return 4;
	        case 84: {
	          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
	          return 1;
	        }
	      }
	      ___setErrNo(ERRNO_CODES.EINVAL);
	      return -1;
	    }

	  function _usleep(useconds) {
	      // int usleep(useconds_t useconds);
	      // http://pubs.opengroup.org/onlinepubs/000095399/functions/usleep.html
	      // We're single-threaded, so use a busy loop. Super-ugly.
	      var msec = useconds / 1000;
	      if ((ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && self['performance'] && self['performance']['now']) {
	        var start = self['performance']['now']();
	        while (self['performance']['now']() - start < msec) {
	          // Do nothing.
	        }
	      } else {
	        var start = Date.now();
	      }
	      return 0;
	    }

	  function _utime(path, times) {
	      // int utime(const char *path, const struct utimbuf *times);
	      // http://pubs.opengroup.org/onlinepubs/009695399/basedefs/utime.h.html
	      var time;
	      if (times) {
	        // NOTE: We don't keep track of access timestamps.
	        var offset = 4;
	        time = HEAP32[(((times)+(offset))>>2)];
	        time *= 1000;
	      } else {
	        time = Date.now();
	      }
	      path = Pointer_stringify(path);
	      try {
	        FS.utime(path, time, time);
	        return 0;
	      } catch (e) {
	        FS.handleFSError(e);
	        return -1;
	      }
	    }
	FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init(); });__ATMAIN__.push(function() { FS.ignorePermissions = false; });__ATEXIT__.push(function() { FS.quit(); });__ATINIT__.unshift(function() { TTY.init(); });__ATEXIT__.push(function() { TTY.shutdown(); });if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }if (ENVIRONMENT_IS_NODE) {
	    _emscripten_get_now = function _emscripten_get_now_actual() {
	      var t = process['hrtime']();
	      return t[0] * 1e3 + t[1] / 1e6;
	    };
	  } else if (typeof dateNow !== 'undefined') {
	    _emscripten_get_now = dateNow;
	  } else if (typeof self === 'object' && self['performance'] && typeof self['performance']['now'] === 'function') {
	    _emscripten_get_now = function() { return self['performance']['now'](); };
	  } else if (typeof performance === 'object' && typeof performance['now'] === 'function') {
	    _emscripten_get_now = function() { return performance['now'](); };
	  } else {
	    _emscripten_get_now = Date.now;
	  }___buildEnvironment(ENV);DYNAMICTOP_PTR = staticAlloc(4);

	STACK_BASE = STACKTOP = alignMemory(STATICTOP);

	STACK_MAX = STACK_BASE + TOTAL_STACK;

	DYNAMIC_BASE = alignMemory(STACK_MAX);

	HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

	staticSealed = true; // seal the static portion of memory

	assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

	/** @type {function(string, boolean=, number=)} */
	function intArrayFromString(stringy, dontAddNull, length) {
	  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
	  var u8array = new Array(len);
	  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
	  if (dontAddNull) u8array.length = numBytesWritten;
	  return u8array;
	}



	function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiiij(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiiij(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iij(x) { Module["printErr"]("Invalid function pointer called with signature 'iij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iiji(x) { Module["printErr"]("Invalid function pointer called with signature 'iiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iijii(x) { Module["printErr"]("Invalid function pointer called with signature 'iijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_iijijii(x) { Module["printErr"]("Invalid function pointer called with signature 'iijijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiiij(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiiijii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiij(x) { Module["printErr"]("Invalid function pointer called with signature 'viiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viij(x) { Module["printErr"]("Invalid function pointer called with signature 'viij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijdi(x) { Module["printErr"]("Invalid function pointer called with signature 'viijdi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijdii(x) { Module["printErr"]("Invalid function pointer called with signature 'viijdii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viiji(x) { Module["printErr"]("Invalid function pointer called with signature 'viiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijii(x) { Module["printErr"]("Invalid function pointer called with signature 'viijii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viijiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijiiiji(x) { Module["printErr"]("Invalid function pointer called with signature 'viijiiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viijiiijiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viijiiijiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	function nullFunc_viji(x) { Module["printErr"]("Invalid function pointer called with signature 'viji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x); }

	Module['wasmTableSize'] = 52416;

	Module['wasmMaxTableSize'] = 52416;

	function invoke_i(index) {
	  try {
	    return Module["dynCall_i"](index);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_i(index) {
	    return functionPointers[index]();
	}

	function invoke_ii(index,a1) {
	  try {
	    return Module["dynCall_ii"](index,a1);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_ii(index,a1) {
	    return functionPointers[index](a1);
	}

	function invoke_iii(index,a1,a2) {
	  try {
	    return Module["dynCall_iii"](index,a1,a2);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iii(index,a1,a2) {
	    return functionPointers[index](a1,a2);
	}

	function invoke_iiii(index,a1,a2,a3) {
	  try {
	    return Module["dynCall_iiii"](index,a1,a2,a3);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiii(index,a1,a2,a3) {
	    return functionPointers[index](a1,a2,a3);
	}

	function invoke_iiiii(index,a1,a2,a3,a4) {
	  try {
	    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiii(index,a1,a2,a3,a4) {
	    return functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
	  try {
	    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiid(index,a1,a2,a3,a4,a5) {
	    return functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
	  try {
	    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiii(index,a1,a2,a3,a4,a5) {
	    return functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
	    return functionPointers[index](a1,a2,a3,a4,a5,a6);
	}

	function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
	    return functionPointers[index](a1,a2,a3,a4,a5,a6);
	}

	function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
	  try {
	    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
	    return functionPointers[index](a1,a2,a3,a4,a5,a6,a7);
	}

	function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	  try {
	    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	    return functionPointers[index](a1,a2,a3,a4,a5,a6,a7,a8);
	}

	function invoke_iiiiij(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    return Module["dynCall_iiiiij"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiiij(index,a1,a2,a3,a4,a5) {
	    return functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_iiiij(index,a1,a2,a3,a4,a5) {
	  try {
	    return Module["dynCall_iiiij"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiiij(index,a1,a2,a3,a4) {
	    return functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_iij(index,a1,a2,a3) {
	  try {
	    return Module["dynCall_iij"](index,a1,a2,a3);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iij(index,a1,a2) {
	    return functionPointers[index](a1,a2);
	}

	function invoke_iiji(index,a1,a2,a3,a4) {
	  try {
	    return Module["dynCall_iiji"](index,a1,a2,a3,a4);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iiji(index,a1,a2,a3) {
	    return functionPointers[index](a1,a2,a3);
	}

	function invoke_iijii(index,a1,a2,a3,a4,a5) {
	  try {
	    return Module["dynCall_iijii"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iijii(index,a1,a2,a3,a4) {
	    return functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_iijijii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	  try {
	    return Module["dynCall_iijijii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_iijijii(index,a1,a2,a3,a4,a5,a6) {
	    return functionPointers[index](a1,a2,a3,a4,a5,a6);
	}

	function invoke_v(index) {
	  try {
	    Module["dynCall_v"](index);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_v(index) {
	    functionPointers[index]();
	}

	function invoke_vi(index,a1) {
	  try {
	    Module["dynCall_vi"](index,a1);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_vi(index,a1) {
	    functionPointers[index](a1);
	}

	function invoke_vii(index,a1,a2) {
	  try {
	    Module["dynCall_vii"](index,a1,a2);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_vii(index,a1,a2) {
	    functionPointers[index](a1,a2);
	}

	function invoke_viii(index,a1,a2,a3) {
	  try {
	    Module["dynCall_viii"](index,a1,a2,a3);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viii(index,a1,a2,a3) {
	    functionPointers[index](a1,a2,a3);
	}

	function invoke_viiii(index,a1,a2,a3,a4) {
	  try {
	    Module["dynCall_viiii"](index,a1,a2,a3,a4);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiii(index,a1,a2,a3,a4) {
	    functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_viiiii(index,a1,a2,a3,a4,a5) {
	  try {
	    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiiii(index,a1,a2,a3,a4,a5) {
	    functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6);
	}

	function invoke_viiiij(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    Module["dynCall_viiiij"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiiij(index,a1,a2,a3,a4,a5) {
	    functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_viiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	  try {
	    Module["dynCall_viiiijii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiiijii(index,a1,a2,a3,a4,a5,a6,a7) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6,a7);
	}

	function invoke_viiij(index,a1,a2,a3,a4,a5) {
	  try {
	    Module["dynCall_viiij"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiij(index,a1,a2,a3,a4) {
	    functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_viij(index,a1,a2,a3,a4) {
	  try {
	    Module["dynCall_viij"](index,a1,a2,a3,a4);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viij(index,a1,a2,a3) {
	    functionPointers[index](a1,a2,a3);
	}

	function invoke_viijdi(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    Module["dynCall_viijdi"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijdi(index,a1,a2,a3,a4,a5) {
	    functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_viijdii(index,a1,a2,a3,a4,a5,a6,a7) {
	  try {
	    Module["dynCall_viijdii"](index,a1,a2,a3,a4,a5,a6,a7);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijdii(index,a1,a2,a3,a4,a5,a6) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6);
	}

	function invoke_viiji(index,a1,a2,a3,a4,a5) {
	  try {
	    Module["dynCall_viiji"](index,a1,a2,a3,a4,a5);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viiji(index,a1,a2,a3,a4) {
	    functionPointers[index](a1,a2,a3,a4);
	}

	function invoke_viijii(index,a1,a2,a3,a4,a5,a6) {
	  try {
	    Module["dynCall_viijii"](index,a1,a2,a3,a4,a5,a6);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijii(index,a1,a2,a3,a4,a5) {
	    functionPointers[index](a1,a2,a3,a4,a5);
	}

	function invoke_viijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	  try {
	    Module["dynCall_viijiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijiiii(index,a1,a2,a3,a4,a5,a6,a7) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6,a7);
	}

	function invoke_viijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
	  try {
	    Module["dynCall_viijiiiji"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6,a7,a8);
	}

	function invoke_viijiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
	  try {
	    Module["dynCall_viijiiijiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viijiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
	    functionPointers[index](a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
	}

	function invoke_viji(index,a1,a2,a3,a4) {
	  try {
	    Module["dynCall_viji"](index,a1,a2,a3,a4);
	  } catch(e) {
	    if (typeof e !== 'number' && e !== 'longjmp') throw e;
	    Module["setThrew"](1, 0);
	  }
	}

	function jsCall_viji(index,a1,a2,a3) {
	    functionPointers[index](a1,a2,a3);
	}

	Module.asmGlobalArg = {};

	Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_i": nullFunc_i, "nullFunc_ii": nullFunc_ii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiid": nullFunc_iiiiid, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_iiiiiid": nullFunc_iiiiiid, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_iiiiij": nullFunc_iiiiij, "nullFunc_iiiij": nullFunc_iiiij, "nullFunc_iij": nullFunc_iij, "nullFunc_iiji": nullFunc_iiji, "nullFunc_iijii": nullFunc_iijii, "nullFunc_iijijii": nullFunc_iijijii, "nullFunc_v": nullFunc_v, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_viii": nullFunc_viii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiij": nullFunc_viiiij, "nullFunc_viiiijii": nullFunc_viiiijii, "nullFunc_viiij": nullFunc_viiij, "nullFunc_viij": nullFunc_viij, "nullFunc_viijdi": nullFunc_viijdi, "nullFunc_viijdii": nullFunc_viijdii, "nullFunc_viiji": nullFunc_viiji, "nullFunc_viijii": nullFunc_viijii, "nullFunc_viijiiii": nullFunc_viijiiii, "nullFunc_viijiiiji": nullFunc_viijiiiji, "nullFunc_viijiiijiii": nullFunc_viijiiijiii, "nullFunc_viji": nullFunc_viji, "invoke_i": invoke_i, "jsCall_i": jsCall_i, "invoke_ii": invoke_ii, "jsCall_ii": jsCall_ii, "invoke_iii": invoke_iii, "jsCall_iii": jsCall_iii, "invoke_iiii": invoke_iiii, "jsCall_iiii": jsCall_iiii, "invoke_iiiii": invoke_iiiii, "jsCall_iiiii": jsCall_iiiii, "invoke_iiiiid": invoke_iiiiid, "jsCall_iiiiid": jsCall_iiiiid, "invoke_iiiiii": invoke_iiiiii, "jsCall_iiiiii": jsCall_iiiiii, "invoke_iiiiiid": invoke_iiiiiid, "jsCall_iiiiiid": jsCall_iiiiiid, "invoke_iiiiiii": invoke_iiiiiii, "jsCall_iiiiiii": jsCall_iiiiiii, "invoke_iiiiiiii": invoke_iiiiiiii, "jsCall_iiiiiiii": jsCall_iiiiiiii, "invoke_iiiiiiiii": invoke_iiiiiiiii, "jsCall_iiiiiiiii": jsCall_iiiiiiiii, "invoke_iiiiij": invoke_iiiiij, "jsCall_iiiiij": jsCall_iiiiij, "invoke_iiiij": invoke_iiiij, "jsCall_iiiij": jsCall_iiiij, "invoke_iij": invoke_iij, "jsCall_iij": jsCall_iij, "invoke_iiji": invoke_iiji, "jsCall_iiji": jsCall_iiji, "invoke_iijii": invoke_iijii, "jsCall_iijii": jsCall_iijii, "invoke_iijijii": invoke_iijijii, "jsCall_iijijii": jsCall_iijijii, "invoke_v": invoke_v, "jsCall_v": jsCall_v, "invoke_vi": invoke_vi, "jsCall_vi": jsCall_vi, "invoke_vii": invoke_vii, "jsCall_vii": jsCall_vii, "invoke_viii": invoke_viii, "jsCall_viii": jsCall_viii, "invoke_viiii": invoke_viiii, "jsCall_viiii": jsCall_viiii, "invoke_viiiii": invoke_viiiii, "jsCall_viiiii": jsCall_viiiii, "invoke_viiiiii": invoke_viiiiii, "jsCall_viiiiii": jsCall_viiiiii, "invoke_viiiij": invoke_viiiij, "jsCall_viiiij": jsCall_viiiij, "invoke_viiiijii": invoke_viiiijii, "jsCall_viiiijii": jsCall_viiiijii, "invoke_viiij": invoke_viiij, "jsCall_viiij": jsCall_viiij, "invoke_viij": invoke_viij, "jsCall_viij": jsCall_viij, "invoke_viijdi": invoke_viijdi, "jsCall_viijdi": jsCall_viijdi, "invoke_viijdii": invoke_viijdii, "jsCall_viijdii": jsCall_viijdii, "invoke_viiji": invoke_viiji, "jsCall_viiji": jsCall_viiji, "invoke_viijii": invoke_viijii, "jsCall_viijii": jsCall_viijii, "invoke_viijiiii": invoke_viijiiii, "jsCall_viijiiii": jsCall_viijiiii, "invoke_viijiiiji": invoke_viijiiiji, "jsCall_viijiiiji": jsCall_viijiiiji, "invoke_viijiiijiii": invoke_viijiiijiii, "jsCall_viijiiijiii": jsCall_viijiiijiii, "invoke_viji": invoke_viji, "jsCall_viji": jsCall_viji, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___assert_fail": ___assert_fail, "___buildEnvironment": ___buildEnvironment, "___cxa_begin_catch": ___cxa_begin_catch, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___gxx_personality_v0": ___gxx_personality_v0, "___lock": ___lock, "___map_file": ___map_file, "___resumeException": ___resumeException, "___setErrNo": ___setErrNo, "___syscall10": ___syscall10, "___syscall118": ___syscall118, "___syscall125": ___syscall125, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "___syscall15": ___syscall15, "___syscall183": ___syscall183, "___syscall192": ___syscall192, "___syscall194": ___syscall194, "___syscall195": ___syscall195, "___syscall196": ___syscall196, "___syscall197": ___syscall197, "___syscall20": ___syscall20, "___syscall201": ___syscall201, "___syscall202": ___syscall202, "___syscall207": ___syscall207, "___syscall212": ___syscall212, "___syscall221": ___syscall221, "___syscall3": ___syscall3, "___syscall33": ___syscall33, "___syscall39": ___syscall39, "___syscall4": ___syscall4, "___syscall40": ___syscall40, "___syscall5": ___syscall5, "___syscall54": ___syscall54, "___syscall6": ___syscall6, "___syscall85": ___syscall85, "___syscall91": ___syscall91, "___syscall94": ___syscall94, "___unlock": ___unlock, "__addDays": __addDays, "__arraySum": __arraySum, "__isLeapYear": __isLeapYear, "_abort": _abort, "_emscripten_get_now": _emscripten_get_now, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_getenv": _getenv, "_gettimeofday": _gettimeofday, "_llvm_trap": _llvm_trap, "_localtime": _localtime, "_localtime_r": _localtime_r, "_pthread_cond_wait": _pthread_cond_wait, "_pthread_getspecific": _pthread_getspecific, "_pthread_key_create": _pthread_key_create, "_pthread_once": _pthread_once, "_pthread_setspecific": _pthread_setspecific, "_strftime": _strftime, "_strftime_l": _strftime_l, "_sysconf": _sysconf, "_tzset": _tzset, "_usleep": _usleep, "_utime": _utime, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX };
	// EMSCRIPTEN_START_ASM
	var asm =Module["asm"]// EMSCRIPTEN_END_ASM
	(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

	var real__Initialize = asm["_Initialize"]; asm["_Initialize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__Initialize.apply(null, arguments);
	};

	var real___GLOBAL__I_000101 = asm["__GLOBAL__I_000101"]; asm["__GLOBAL__I_000101"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___GLOBAL__I_000101.apply(null, arguments);
	};

	var real___GLOBAL__sub_I_iostream_cpp = asm["__GLOBAL__sub_I_iostream_cpp"]; asm["__GLOBAL__sub_I_iostream_cpp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___GLOBAL__sub_I_iostream_cpp.apply(null, arguments);
	};

	var real___GLOBAL__sub_I_json_value_cpp = asm["__GLOBAL__sub_I_json_value_cpp"]; asm["__GLOBAL__sub_I_json_value_cpp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___GLOBAL__sub_I_json_value_cpp.apply(null, arguments);
	};

	var real___ZL25default_terminate_handlerv = asm["__ZL25default_terminate_handlerv"]; asm["__ZL25default_terminate_handlerv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZL25default_terminate_handlerv.apply(null, arguments);
	};

	var real___ZN10__cxxabiv112_GLOBAL__N_110construct_Ev = asm["__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev"]; asm["__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv112_GLOBAL__N_110construct_Ev.apply(null, arguments);
	};

	var real___ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv = asm["__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv"]; asm["__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv.apply(null, arguments);
	};

	var real___ZN10__cxxabiv116__shim_type_infoD2Ev = asm["__ZN10__cxxabiv116__shim_type_infoD2Ev"]; asm["__ZN10__cxxabiv116__shim_type_infoD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv116__shim_type_infoD2Ev.apply(null, arguments);
	};

	var real___ZN10__cxxabiv117__class_type_infoD0Ev = asm["__ZN10__cxxabiv117__class_type_infoD0Ev"]; asm["__ZN10__cxxabiv117__class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv117__class_type_infoD0Ev.apply(null, arguments);
	};

	var real___ZN10__cxxabiv120__si_class_type_infoD0Ev = asm["__ZN10__cxxabiv120__si_class_type_infoD0Ev"]; asm["__ZN10__cxxabiv120__si_class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv120__si_class_type_infoD0Ev.apply(null, arguments);
	};

	var real___ZN10__cxxabiv121__vmi_class_type_infoD0Ev = asm["__ZN10__cxxabiv121__vmi_class_type_infoD0Ev"]; asm["__ZN10__cxxabiv121__vmi_class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN10__cxxabiv121__vmi_class_type_infoD0Ev.apply(null, arguments);
	};

	var real___ZN4Json10CharReader7FactoryD0Ev = asm["__ZN4Json10CharReader7FactoryD0Ev"]; asm["__ZN4Json10CharReader7FactoryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json10CharReader7FactoryD0Ev.apply(null, arguments);
	};

	var real___ZN4Json10CharReader7FactoryD2Ev = asm["__ZN4Json10CharReader7FactoryD2Ev"]; asm["__ZN4Json10CharReader7FactoryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json10CharReader7FactoryD2Ev.apply(null, arguments);
	};

	var real___ZN4Json10CharReaderD0Ev = asm["__ZN4Json10CharReaderD0Ev"]; asm["__ZN4Json10CharReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json10CharReaderD0Ev.apply(null, arguments);
	};

	var real___ZN4Json10CharReaderD2Ev = asm["__ZN4Json10CharReaderD2Ev"]; asm["__ZN4Json10CharReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json10CharReaderD2Ev.apply(null, arguments);
	};

	var real___ZN4Json12StreamWriter7FactoryD0Ev = asm["__ZN4Json12StreamWriter7FactoryD0Ev"]; asm["__ZN4Json12StreamWriter7FactoryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json12StreamWriter7FactoryD0Ev.apply(null, arguments);
	};

	var real___ZN4Json12StreamWriter7FactoryD2Ev = asm["__ZN4Json12StreamWriter7FactoryD2Ev"]; asm["__ZN4Json12StreamWriter7FactoryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json12StreamWriter7FactoryD2Ev.apply(null, arguments);
	};

	var real___ZN4Json12StreamWriterD0Ev = asm["__ZN4Json12StreamWriterD0Ev"]; asm["__ZN4Json12StreamWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json12StreamWriterD0Ev.apply(null, arguments);
	};

	var real___ZN4Json12StreamWriterD2Ev = asm["__ZN4Json12StreamWriterD2Ev"]; asm["__ZN4Json12StreamWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json12StreamWriterD2Ev.apply(null, arguments);
	};

	var real___ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = asm["__ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"]; asm["__ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZN4Json13OurCharReaderD0Ev = asm["__ZN4Json13OurCharReaderD0Ev"]; asm["__ZN4Json13OurCharReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json13OurCharReaderD0Ev.apply(null, arguments);
	};

	var real___ZN4Json13OurCharReaderD2Ev = asm["__ZN4Json13OurCharReaderD2Ev"]; asm["__ZN4Json13OurCharReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json13OurCharReaderD2Ev.apply(null, arguments);
	};

	var real___ZN4Json17CharReaderBuilderD0Ev = asm["__ZN4Json17CharReaderBuilderD0Ev"]; asm["__ZN4Json17CharReaderBuilderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json17CharReaderBuilderD0Ev.apply(null, arguments);
	};

	var real___ZN4Json17CharReaderBuilderD2Ev = asm["__ZN4Json17CharReaderBuilderD2Ev"]; asm["__ZN4Json17CharReaderBuilderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json17CharReaderBuilderD2Ev.apply(null, arguments);
	};

	var real___ZN4Json19StreamWriterBuilderD0Ev = asm["__ZN4Json19StreamWriterBuilderD0Ev"]; asm["__ZN4Json19StreamWriterBuilderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json19StreamWriterBuilderD0Ev.apply(null, arguments);
	};

	var real___ZN4Json19StreamWriterBuilderD2Ev = asm["__ZN4Json19StreamWriterBuilderD2Ev"]; asm["__ZN4Json19StreamWriterBuilderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json19StreamWriterBuilderD2Ev.apply(null, arguments);
	};

	var real___ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE = asm["__ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE"]; asm["__ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE.apply(null, arguments);
	};

	var real___ZN4Json23BuiltStyledStreamWriterD0Ev = asm["__ZN4Json23BuiltStyledStreamWriterD0Ev"]; asm["__ZN4Json23BuiltStyledStreamWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json23BuiltStyledStreamWriterD0Ev.apply(null, arguments);
	};

	var real___ZN4Json23BuiltStyledStreamWriterD2Ev = asm["__ZN4Json23BuiltStyledStreamWriterD2Ev"]; asm["__ZN4Json23BuiltStyledStreamWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN4Json23BuiltStyledStreamWriterD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable12CreateCursorEv = asm["__ZN8perfetto15trace_processor10StatsTable12CreateCursorEv"]; asm["__ZN8perfetto15trace_processor10StatsTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable12CreateCursorEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = asm["__ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"]; asm["__ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv = asm["__ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv"]; asm["__ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv = asm["__ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv"]; asm["__ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti = asm["__ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti"]; asm["__ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = asm["__ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"]; asm["__ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor10StatsTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor10StatsTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor10StatsTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor10StatsTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = asm["__ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"]; asm["__ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTableD0Ev = asm["__ZN8perfetto15trace_processor10StatsTableD0Ev"]; asm["__ZN8perfetto15trace_processor10StatsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor10StatsTableD2Ev = asm["__ZN8perfetto15trace_processor10StatsTableD2Ev"]; asm["__ZN8perfetto15trace_processor10StatsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor10StatsTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE = asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE"]; asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev = asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev"]; asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev = asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev"]; asm["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTracker5FlushEv = asm["__ZN8perfetto15trace_processor11ArgsTracker5FlushEv"]; asm["__ZN8perfetto15trace_processor11ArgsTracker5FlushEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTracker5FlushEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTrackerD0Ev = asm["__ZN8perfetto15trace_processor11ArgsTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor11ArgsTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11ArgsTrackerD2Ev = asm["__ZN8perfetto15trace_processor11ArgsTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor11ArgsTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11ArgsTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb = asm["__ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb"]; asm["__ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy = asm["__ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy"]; asm["__ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy = asm["__ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy"]; asm["__ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11FlowTrackerD0Ev = asm["__ZN8perfetto15trace_processor11FlowTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor11FlowTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11FlowTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11FlowTrackerD2Ev = asm["__ZN8perfetto15trace_processor11FlowTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor11FlowTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11FlowTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11JsonTrackerD0Ev = asm["__ZN8perfetto15trace_processor11JsonTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor11JsonTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11JsonTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11JsonTrackerD2Ev = asm["__ZN8perfetto15trace_processor11JsonTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor11JsonTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11JsonTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv = asm["__ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"]; asm["__ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx = asm["__ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx"]; asm["__ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx = asm["__ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx"]; asm["__ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTableD0Ev = asm["__ZN8perfetto15trace_processor11SqliteTableD0Ev"]; asm["__ZN8perfetto15trace_processor11SqliteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11SqliteTableD2Ev = asm["__ZN8perfetto15trace_processor11SqliteTableD2Ev"]; asm["__ZN8perfetto15trace_processor11SqliteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11SqliteTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11TraceParserD0Ev = asm["__ZN8perfetto15trace_processor11TraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor11TraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11TraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor11TraceParserD2Ev = asm["__ZN8perfetto15trace_processor11TraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor11TraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor11TraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12ClockTrackerD0Ev = asm["__ZN8perfetto15trace_processor12ClockTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor12ClockTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12ClockTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12ClockTrackerD2Ev = asm["__ZN8perfetto15trace_processor12ClockTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor12ClockTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12ClockTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12DestructibleD0Ev = asm["__ZN8perfetto15trace_processor12DestructibleD0Ev"]; asm["__ZN8perfetto15trace_processor12DestructibleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12DestructibleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12DestructibleD2Ev = asm["__ZN8perfetto15trace_processor12DestructibleD2Ev"]; asm["__ZN8perfetto15trace_processor12DestructibleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12DestructibleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE = asm["__ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE"]; asm["__ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb = asm["__ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb"]; asm["__ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj = asm["__ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj"]; asm["__ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12EventTrackerD0Ev = asm["__ZN8perfetto15trace_processor12EventTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor12EventTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12EventTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12EventTrackerD2Ev = asm["__ZN8perfetto15trace_processor12EventTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor12EventTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12EventTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12FtraceModuleD0Ev = asm["__ZN8perfetto15trace_processor12FtraceModuleD0Ev"]; asm["__ZN8perfetto15trace_processor12FtraceModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12FtraceModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12FtraceModuleD2Ev = asm["__ZN8perfetto15trace_processor12FtraceModuleD2Ev"]; asm["__ZN8perfetto15trace_processor12FtraceModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12FtraceModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = asm["__ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"]; asm["__ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = asm["__ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"]; asm["__ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = asm["__ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"]; asm["__ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12SliceTrackerD0Ev = asm["__ZN8perfetto15trace_processor12SliceTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor12SliceTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12SliceTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12SliceTrackerD2Ev = asm["__ZN8perfetto15trace_processor12SliceTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor12SliceTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12SliceTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE = asm["__ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE"]; asm["__ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12TraceStorageD0Ev = asm["__ZN8perfetto15trace_processor12TraceStorageD0Ev"]; asm["__ZN8perfetto15trace_processor12TraceStorageD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12TraceStorageD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12TraceStorageD2Ev = asm["__ZN8perfetto15trace_processor12TraceStorageD2Ev"]; asm["__ZN8perfetto15trace_processor12TraceStorageD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12TraceStorageD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13BinderTrackerD0Ev = asm["__ZN8perfetto15trace_processor13BinderTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor13BinderTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13BinderTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13BinderTrackerD2Ev = asm["__ZN8perfetto15trace_processor13BinderTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor13BinderTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13BinderTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv = asm["__ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = asm["__ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv = asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv = asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti = asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = asm["__ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"]; asm["__ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTableD0Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTableD0Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13DbSqliteTableD2Ev = asm["__ZN8perfetto15trace_processor13DbSqliteTableD2Ev"]; asm["__ZN8perfetto15trace_processor13DbSqliteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13DbSqliteTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13ProfileModuleD0Ev = asm["__ZN8perfetto15trace_processor13ProfileModuleD0Ev"]; asm["__ZN8perfetto15trace_processor13ProfileModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13ProfileModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13ProfileModuleD2Ev = asm["__ZN8perfetto15trace_processor13ProfileModuleD2Ev"]; asm["__ZN8perfetto15trace_processor13ProfileModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13ProfileModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv = asm["__ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = asm["__ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv = asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv = asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti = asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = asm["__ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"]; asm["__ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTableD0Ev = asm["__ZN8perfetto15trace_processor13SqlStatsTableD0Ev"]; asm["__ZN8perfetto15trace_processor13SqlStatsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor13SqlStatsTableD2Ev = asm["__ZN8perfetto15trace_processor13SqlStatsTableD2Ev"]; asm["__ZN8perfetto15trace_processor13SqlStatsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor13SqlStatsTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NinjaLogParserD0Ev = asm["__ZN8perfetto15trace_processor14NinjaLogParserD0Ev"]; asm["__ZN8perfetto15trace_processor14NinjaLogParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NinjaLogParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NinjaLogParserD2Ev = asm["__ZN8perfetto15trace_processor14NinjaLogParserD2Ev"]; asm["__ZN8perfetto15trace_processor14NinjaLogParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NinjaLogParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev = asm["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev = asm["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIdED0Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIdED0Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIdED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIdED0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIdED2Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIdED2Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIdED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIdED2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIiED0Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIiED0Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIiED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIiED0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIiED2Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIiED2Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIiED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIiED2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIjED0Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIjED0Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIjED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIjED0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIjED2Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIjED2Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIjED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIjED2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIxED0Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIxED0Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIxED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIxED0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14NullableVectorIxED2Ev = asm["__ZN8perfetto15trace_processor14NullableVectorIxED2Ev"]; asm["__ZN8perfetto15trace_processor14NullableVectorIxED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14NullableVectorIxED2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj = asm["__ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj"]; asm["__ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE = asm["__ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"]; asm["__ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj = asm["__ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj"]; asm["__ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_ = asm["__ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_"]; asm["__ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE = asm["__ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE"]; asm["__ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE = asm["__ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"]; asm["__ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTrackerD0Ev = asm["__ZN8perfetto15trace_processor14ProcessTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor14ProcessTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14ProcessTrackerD2Ev = asm["__ZN8perfetto15trace_processor14ProcessTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor14ProcessTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14ProcessTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SqliteRawTableD0Ev = asm["__ZN8perfetto15trace_processor14SqliteRawTableD0Ev"]; asm["__ZN8perfetto15trace_processor14SqliteRawTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SqliteRawTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SqliteRawTableD2Ev = asm["__ZN8perfetto15trace_processor14SqliteRawTableD2Ev"]; asm["__ZN8perfetto15trace_processor14SqliteRawTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SqliteRawTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SyscallTrackerD0Ev = asm["__ZN8perfetto15trace_processor14SyscallTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor14SyscallTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SyscallTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SyscallTrackerD2Ev = asm["__ZN8perfetto15trace_processor14SyscallTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor14SyscallTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SyscallTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SystraceParserD0Ev = asm["__ZN8perfetto15trace_processor14SystraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor14SystraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SystraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14SystraceParserD2Ev = asm["__ZN8perfetto15trace_processor14SystraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor14SystraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14SystraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14TraceProcessorD0Ev = asm["__ZN8perfetto15trace_processor14TraceProcessorD0Ev"]; asm["__ZN8perfetto15trace_processor14TraceProcessorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14TraceProcessorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor14TraceProcessorD2Ev = asm["__ZN8perfetto15trace_processor14TraceProcessorD2Ev"]; asm["__ZN8perfetto15trace_processor14TraceProcessorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor14TraceProcessorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15GzipTraceParserD0Ev = asm["__ZN8perfetto15trace_processor15GzipTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor15GzipTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15GzipTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15GzipTraceParserD2Ev = asm["__ZN8perfetto15trace_processor15GzipTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor15GzipTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15GzipTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15HeapGraphModuleD0Ev = asm["__ZN8perfetto15trace_processor15HeapGraphModuleD0Ev"]; asm["__ZN8perfetto15trace_processor15HeapGraphModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15HeapGraphModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15HeapGraphModuleD2Ev = asm["__ZN8perfetto15trace_processor15HeapGraphModuleD2Ev"]; asm["__ZN8perfetto15trace_processor15HeapGraphModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15HeapGraphModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15JsonTraceParserD0Ev = asm["__ZN8perfetto15trace_processor15JsonTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor15JsonTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15JsonTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15JsonTraceParserD2Ev = asm["__ZN8perfetto15trace_processor15JsonTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor15JsonTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15JsonTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev = asm["__ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev"]; asm["__ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev = asm["__ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev"]; asm["__ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16FtraceModuleImplD0Ev = asm["__ZN8perfetto15trace_processor16FtraceModuleImplD0Ev"]; asm["__ZN8perfetto15trace_processor16FtraceModuleImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16FtraceModuleImplD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16FtraceModuleImplD2Ev = asm["__ZN8perfetto15trace_processor16FtraceModuleImplD2Ev"]; asm["__ZN8perfetto15trace_processor16FtraceModuleImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16FtraceModuleImplD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev = asm["__ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev = asm["__ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceParserD0Ev = asm["__ZN8perfetto15trace_processor16ProtoTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor16ProtoTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceParserD2Ev = asm["__ZN8perfetto15trace_processor16ProtoTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor16ProtoTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev = asm["__ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev"]; asm["__ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev = asm["__ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev"]; asm["__ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16TrackEventModuleD0Ev = asm["__ZN8perfetto15trace_processor16TrackEventModuleD0Ev"]; asm["__ZN8perfetto15trace_processor16TrackEventModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16TrackEventModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor16TrackEventModuleD2Ev = asm["__ZN8perfetto15trace_processor16TrackEventModuleD2Ev"]; asm["__ZN8perfetto15trace_processor16TrackEventModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor16TrackEventModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i = asm["__ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i"]; asm["__ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor17SchedEventTrackerD0Ev = asm["__ZN8perfetto15trace_processor17SchedEventTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor17SchedEventTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor17SchedEventTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor17SchedEventTrackerD2Ev = asm["__ZN8perfetto15trace_processor17SchedEventTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor17SchedEventTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor17SchedEventTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev = asm["__ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev = asm["__ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev = asm["__ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev"]; asm["__ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev = asm["__ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev"]; asm["__ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = asm["__ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"]; asm["__ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev = asm["__ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev = asm["__ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev = asm["__ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev"]; asm["__ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev = asm["__ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev"]; asm["__ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18NullableVectorBaseD0Ev = asm["__ZN8perfetto15trace_processor18NullableVectorBaseD0Ev"]; asm["__ZN8perfetto15trace_processor18NullableVectorBaseD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18NullableVectorBaseD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18NullableVectorBaseD2Ev = asm["__ZN8perfetto15trace_processor18NullableVectorBaseD2Ev"]; asm["__ZN8perfetto15trace_processor18NullableVectorBaseD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18NullableVectorBaseD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18SystemProbesModuleD0Ev = asm["__ZN8perfetto15trace_processor18SystemProbesModuleD0Ev"]; asm["__ZN8perfetto15trace_processor18SystemProbesModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18SystemProbesModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18SystemProbesModuleD2Ev = asm["__ZN8perfetto15trace_processor18SystemProbesModuleD2Ev"]; asm["__ZN8perfetto15trace_processor18SystemProbesModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18SystemProbesModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_ = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImplD0Ev = asm["__ZN8perfetto15trace_processor18TraceProcessorImplD0Ev"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImplD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor18TraceProcessorImplD2Ev = asm["__ZN8perfetto15trace_processor18TraceProcessorImplD2Ev"]; asm["__ZN8perfetto15trace_processor18TraceProcessorImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor18TraceProcessorImplD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE = asm["__ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"]; asm["__ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev = asm["__ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev"]; asm["__ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev = asm["__ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev"]; asm["__ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev = asm["__ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev"]; asm["__ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev = asm["__ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev"]; asm["__ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = asm["__ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = asm["__ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE = asm["__ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev = asm["__ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev = asm["__ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev"]; asm["__ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19SystraceTraceParserD0Ev = asm["__ZN8perfetto15trace_processor19SystraceTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor19SystraceTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19SystraceTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19SystraceTraceParserD2Ev = asm["__ZN8perfetto15trace_processor19SystraceTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor19SystraceTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19SystraceTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv = asm["__ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = asm["__ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx = asm["__ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = asm["__ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTableD0Ev = asm["__ZN8perfetto15trace_processor19WindowOperatorTableD0Ev"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor19WindowOperatorTableD2Ev = asm["__ZN8perfetto15trace_processor19WindowOperatorTableD2Ev"]; asm["__ZN8perfetto15trace_processor19WindowOperatorTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor19WindowOperatorTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev = asm["__ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev"]; asm["__ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev = asm["__ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev"]; asm["__ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev = asm["__ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev = asm["__ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev = asm["__ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev"]; asm["__ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev = asm["__ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev"]; asm["__ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev = asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev"]; asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev = asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev"]; asm["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev = asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev"]; asm["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x = asm["__ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x"]; asm["__ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev = asm["__ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev"]; asm["__ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev = asm["__ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev"]; asm["__ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev = asm["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev = asm["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev = asm["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev = asm["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev = asm["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev = asm["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev = asm["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev = asm["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev = asm["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev"]; asm["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev = asm["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev"]; asm["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv = asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv"]; asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev = asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev"]; asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev = asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev"]; asm["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev = asm["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev"]; asm["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev = asm["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev"]; asm["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev = asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev = asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev = asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev = asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev"]; asm["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor4json12OutputWriterD0Ev = asm["__ZN8perfetto15trace_processor4json12OutputWriterD0Ev"]; asm["__ZN8perfetto15trace_processor4json12OutputWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor4json12OutputWriterD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor4json12OutputWriterD2Ev = asm["__ZN8perfetto15trace_processor4json12OutputWriterD2Ev"]; asm["__ZN8perfetto15trace_processor4json12OutputWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor4json12OutputWriterD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"]; asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev = asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev"]; asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev = asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev"]; asm["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor5TableD0Ev = asm["__ZN8perfetto15trace_processor5TableD0Ev"]; asm["__ZN8perfetto15trace_processor5TableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor5TableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor5TableD2Ev = asm["__ZN8perfetto15trace_processor5TableD2Ev"]; asm["__ZN8perfetto15trace_processor5TableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor5TableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables10SliceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables10SliceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables10SliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables10SliceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables10SliceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables10SliceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables10SliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables10SliceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables10TrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables10TrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables10TrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables10TrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables10TrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables10TrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables10TrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables10TrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables11SymbolTableD0Ev = asm["__ZN8perfetto15trace_processor6tables11SymbolTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables11SymbolTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables11SymbolTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables11SymbolTableD2Ev = asm["__ZN8perfetto15trace_processor6tables11SymbolTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables11SymbolTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables11SymbolTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables11ThreadTableD0Ev = asm["__ZN8perfetto15trace_processor6tables11ThreadTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables11ThreadTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables11ThreadTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables11ThreadTableD2Ev = asm["__ZN8perfetto15trace_processor6tables11ThreadTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables11ThreadTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables11ThreadTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12CounterTableD0Ev = asm["__ZN8perfetto15trace_processor6tables12CounterTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables12CounterTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12CounterTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12CounterTableD2Ev = asm["__ZN8perfetto15trace_processor6tables12CounterTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables12CounterTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12CounterTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev = asm["__ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev = asm["__ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12InstantTableD0Ev = asm["__ZN8perfetto15trace_processor6tables12InstantTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables12InstantTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12InstantTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12InstantTableD2Ev = asm["__ZN8perfetto15trace_processor6tables12InstantTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables12InstantTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12InstantTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12ProcessTableD0Ev = asm["__ZN8perfetto15trace_processor6tables12ProcessTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables12ProcessTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12ProcessTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables12ProcessTableD2Ev = asm["__ZN8perfetto15trace_processor6tables12ProcessTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables12ProcessTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables12ProcessTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13MetadataTableD0Ev = asm["__ZN8perfetto15trace_processor6tables13MetadataTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables13MetadataTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13MetadataTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables13MetadataTableD2Ev = asm["__ZN8perfetto15trace_processor6tables13MetadataTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables13MetadataTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables13MetadataTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev = asm["__ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev = asm["__ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev = asm["__ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev = asm["__ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16PackageListTableD0Ev = asm["__ZN8perfetto15trace_processor6tables16PackageListTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables16PackageListTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16PackageListTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16PackageListTableD2Ev = asm["__ZN8perfetto15trace_processor6tables16PackageListTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables16PackageListTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16PackageListTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev = asm["__ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev = asm["__ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev = asm["__ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev = asm["__ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev = asm["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev = asm["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev = asm["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev = asm["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev = asm["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev = asm["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev = asm["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev = asm["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev = asm["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev = asm["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev = asm["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev = asm["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev = asm["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev = asm["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev = asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev = asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev = asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev = asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev = asm["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev = asm["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev = asm["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev = asm["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev = asm["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev = asm["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev = asm["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev = asm["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev = asm["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev = asm["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev = asm["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev = asm["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev = asm["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev = asm["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev = asm["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev = asm["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8ArgTableD0Ev = asm["__ZN8perfetto15trace_processor6tables8ArgTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables8ArgTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8ArgTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8ArgTableD2Ev = asm["__ZN8perfetto15trace_processor6tables8ArgTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables8ArgTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8ArgTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8CpuTableD0Ev = asm["__ZN8perfetto15trace_processor6tables8CpuTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables8CpuTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8CpuTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8CpuTableD2Ev = asm["__ZN8perfetto15trace_processor6tables8CpuTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables8CpuTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8CpuTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8RawTableD0Ev = asm["__ZN8perfetto15trace_processor6tables8RawTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables8RawTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8RawTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables8RawTableD2Ev = asm["__ZN8perfetto15trace_processor6tables8RawTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables8RawTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables8RawTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables9FlowTableD0Ev = asm["__ZN8perfetto15trace_processor6tables9FlowTableD0Ev"]; asm["__ZN8perfetto15trace_processor6tables9FlowTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables9FlowTableD0Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor6tables9FlowTableD2Ev = asm["__ZN8perfetto15trace_processor6tables9FlowTableD2Ev"]; asm["__ZN8perfetto15trace_processor6tables9FlowTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor6tables9FlowTableD2Ev.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_ = asm["__ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_"]; asm["__ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context = asm["__ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context"]; asm["__ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context.apply(null, arguments);
	};

	var real___ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value = asm["__ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv = asm["__ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv"]; asm["__ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv.apply(null, arguments);
	};

	var real___ZN9protozero19ScatteredHeapBufferD0Ev = asm["__ZN9protozero19ScatteredHeapBufferD0Ev"]; asm["__ZN9protozero19ScatteredHeapBufferD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN9protozero19ScatteredHeapBufferD0Ev.apply(null, arguments);
	};

	var real___ZN9protozero19ScatteredHeapBufferD2Ev = asm["__ZN9protozero19ScatteredHeapBufferD2Ev"]; asm["__ZN9protozero19ScatteredHeapBufferD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN9protozero19ScatteredHeapBufferD2Ev.apply(null, arguments);
	};

	var real___ZN9protozero21ScatteredStreamWriter8DelegateD0Ev = asm["__ZN9protozero21ScatteredStreamWriter8DelegateD0Ev"]; asm["__ZN9protozero21ScatteredStreamWriter8DelegateD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN9protozero21ScatteredStreamWriter8DelegateD0Ev.apply(null, arguments);
	};

	var real___ZN9protozero21ScatteredStreamWriter8DelegateD2Ev = asm["__ZN9protozero21ScatteredStreamWriter8DelegateD2Ev"]; asm["__ZN9protozero21ScatteredStreamWriter8DelegateD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZN9protozero21ScatteredStreamWriter8DelegateD2Ev.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv116__shim_type_info5noop1Ev = asm["__ZNK10__cxxabiv116__shim_type_info5noop1Ev"]; asm["__ZNK10__cxxabiv116__shim_type_info5noop1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv116__shim_type_info5noop1Ev.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv116__shim_type_info5noop2Ev = asm["__ZNK10__cxxabiv116__shim_type_info5noop2Ev"]; asm["__ZNK10__cxxabiv116__shim_type_info5noop2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv116__shim_type_info5noop2Ev.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = asm["__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"]; asm["__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = asm["__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"]; asm["__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = asm["__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"]; asm["__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv = asm["__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv"]; asm["__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = asm["__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"]; asm["__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = asm["__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"]; asm["__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = asm["__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"]; asm["__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = asm["__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"]; asm["__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = asm["__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"]; asm["__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib.apply(null, arguments);
	};

	var real___ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = asm["__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"]; asm["__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi.apply(null, arguments);
	};

	var real___ZNK4Json17CharReaderBuilder13newCharReaderEv = asm["__ZNK4Json17CharReaderBuilder13newCharReaderEv"]; asm["__ZNK4Json17CharReaderBuilder13newCharReaderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK4Json17CharReaderBuilder13newCharReaderEv.apply(null, arguments);
	};

	var real___ZNK4Json19StreamWriterBuilder15newStreamWriterEv = asm["__ZNK4Json19StreamWriterBuilder15newStreamWriterEv"]; asm["__ZNK4Json19StreamWriterBuilder15newStreamWriterEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK4Json19StreamWriterBuilder15newStreamWriterEv.apply(null, arguments);
	};

	var real___ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE = asm["__ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE"]; asm["__ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE.apply(null, arguments);
	};

	var real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy = asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy"]; asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy.apply(null, arguments);
	};

	var real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy = asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy"]; asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy.apply(null, arguments);
	};

	var real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy = asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy"]; asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy.apply(null, arguments);
	};

	var real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE = asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE"]; asm["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE.apply(null, arguments);
	};

	var real___ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE.apply(null, arguments);
	};

	var real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv = asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv"]; asm["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv.apply(null, arguments);
	};

	var real___ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE11do_groupingEv = asm["__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv = asm["__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv = asm["__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv = asm["__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv = asm["__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv = asm["__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv = asm["__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv = asm["__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv = asm["__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv"]; asm["__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE11do_groupingEv = asm["__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv = asm["__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv = asm["__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv = asm["__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv = asm["__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv = asm["__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv = asm["__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv = asm["__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv = asm["__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv"]; asm["__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE11do_groupingEv = asm["__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv = asm["__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv = asm["__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv = asm["__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv = asm["__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv = asm["__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv = asm["__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv = asm["__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv = asm["__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv"]; asm["__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE11do_groupingEv = asm["__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv = asm["__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv = asm["__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv = asm["__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv = asm["__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv = asm["__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv = asm["__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv = asm["__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv.apply(null, arguments);
	};

	var real___ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv = asm["__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv"]; asm["__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE = asm["__ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE"]; asm["__ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info = asm["__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info"]; asm["__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info.apply(null, arguments);
	};

	var real___ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = asm["__ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE3__XEv = asm["__ZNKSt3__220__time_get_c_storageIcE3__XEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE3__XEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE3__XEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE3__cEv = asm["__ZNKSt3__220__time_get_c_storageIcE3__cEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE3__cEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE3__cEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE3__rEv = asm["__ZNKSt3__220__time_get_c_storageIcE3__rEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE3__rEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE3__rEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE3__xEv = asm["__ZNKSt3__220__time_get_c_storageIcE3__xEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE3__xEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE3__xEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE7__am_pmEv = asm["__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE7__am_pmEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE7__weeksEv = asm["__ZNKSt3__220__time_get_c_storageIcE7__weeksEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE7__weeksEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE7__weeksEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIcE8__monthsEv = asm["__ZNKSt3__220__time_get_c_storageIcE8__monthsEv"]; asm["__ZNKSt3__220__time_get_c_storageIcE8__monthsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIcE8__monthsEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE3__XEv = asm["__ZNKSt3__220__time_get_c_storageIwE3__XEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE3__XEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE3__XEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE3__cEv = asm["__ZNKSt3__220__time_get_c_storageIwE3__cEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE3__cEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE3__cEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE3__rEv = asm["__ZNKSt3__220__time_get_c_storageIwE3__rEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE3__rEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE3__rEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE3__xEv = asm["__ZNKSt3__220__time_get_c_storageIwE3__xEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE3__xEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE3__xEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE7__am_pmEv = asm["__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE7__am_pmEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE7__weeksEv = asm["__ZNKSt3__220__time_get_c_storageIwE7__weeksEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE7__weeksEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE7__weeksEv.apply(null, arguments);
	};

	var real___ZNKSt3__220__time_get_c_storageIwE8__monthsEv = asm["__ZNKSt3__220__time_get_c_storageIwE8__monthsEv"]; asm["__ZNKSt3__220__time_get_c_storageIwE8__monthsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__220__time_get_c_storageIwE8__monthsEv.apply(null, arguments);
	};

	var real___ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE10do_tolowerEPcPKc = asm["__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc"]; asm["__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE10do_tolowerEPcPKc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE10do_tolowerEc = asm["__ZNKSt3__25ctypeIcE10do_tolowerEc"]; asm["__ZNKSt3__25ctypeIcE10do_tolowerEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE10do_tolowerEc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE10do_toupperEPcPKc = asm["__ZNKSt3__25ctypeIcE10do_toupperEPcPKc"]; asm["__ZNKSt3__25ctypeIcE10do_toupperEPcPKc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE10do_toupperEPcPKc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE10do_toupperEc = asm["__ZNKSt3__25ctypeIcE10do_toupperEc"]; asm["__ZNKSt3__25ctypeIcE10do_toupperEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE10do_toupperEc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc = asm["__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc"]; asm["__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE8do_widenEc = asm["__ZNKSt3__25ctypeIcE8do_widenEc"]; asm["__ZNKSt3__25ctypeIcE8do_widenEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE8do_widenEc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc = asm["__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc"]; asm["__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIcE9do_narrowEcc = asm["__ZNKSt3__25ctypeIcE9do_narrowEcc"]; asm["__ZNKSt3__25ctypeIcE9do_narrowEcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIcE9do_narrowEcc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ = asm["__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_"]; asm["__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE10do_tolowerEPwPKw = asm["__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw"]; asm["__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE10do_tolowerEPwPKw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE10do_tolowerEw = asm["__ZNKSt3__25ctypeIwE10do_tolowerEw"]; asm["__ZNKSt3__25ctypeIwE10do_tolowerEw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE10do_tolowerEw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE10do_toupperEPwPKw = asm["__ZNKSt3__25ctypeIwE10do_toupperEPwPKw"]; asm["__ZNKSt3__25ctypeIwE10do_toupperEPwPKw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE10do_toupperEPwPKw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE10do_toupperEw = asm["__ZNKSt3__25ctypeIwE10do_toupperEw"]; asm["__ZNKSt3__25ctypeIwE10do_toupperEw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE10do_toupperEw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ = asm["__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_"]; asm["__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt = asm["__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt"]; asm["__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE5do_isEtw = asm["__ZNKSt3__25ctypeIwE5do_isEtw"]; asm["__ZNKSt3__25ctypeIwE5do_isEtw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE5do_isEtw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw = asm["__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw"]; asm["__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE8do_widenEc = asm["__ZNKSt3__25ctypeIwE8do_widenEc"]; asm["__ZNKSt3__25ctypeIwE8do_widenEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE8do_widenEc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc = asm["__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc"]; asm["__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc.apply(null, arguments);
	};

	var real___ZNKSt3__25ctypeIwE9do_narrowEwc = asm["__ZNKSt3__25ctypeIwE9do_narrowEwc"]; asm["__ZNKSt3__25ctypeIwE9do_narrowEwc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__25ctypeIwE9do_narrowEwc.apply(null, arguments);
	};

	var real___ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE = asm["__ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE"]; asm["__ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE = asm["__ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE"]; asm["__ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE = asm["__ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE"]; asm["__ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j = asm["__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j"]; asm["__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_ = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j = asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j"]; asm["__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_ = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j = asm["__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j"]; asm["__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_.apply(null, arguments);
	};

	var real___ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j = asm["__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j"]; asm["__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ = asm["__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_"]; asm["__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIcE12do_transformEPKcS3_ = asm["__ZNKSt3__27collateIcE12do_transformEPKcS3_"]; asm["__ZNKSt3__27collateIcE12do_transformEPKcS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIcE12do_transformEPKcS3_.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIcE7do_hashEPKcS3_ = asm["__ZNKSt3__27collateIcE7do_hashEPKcS3_"]; asm["__ZNKSt3__27collateIcE7do_hashEPKcS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIcE7do_hashEPKcS3_.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_ = asm["__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_"]; asm["__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIwE12do_transformEPKwS3_ = asm["__ZNKSt3__27collateIwE12do_transformEPKwS3_"]; asm["__ZNKSt3__27collateIwE12do_transformEPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIwE12do_transformEPKwS3_.apply(null, arguments);
	};

	var real___ZNKSt3__27collateIwE7do_hashEPKwS3_ = asm["__ZNKSt3__27collateIwE7do_hashEPKwS3_"]; asm["__ZNKSt3__27collateIwE7do_hashEPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27collateIwE7do_hashEPKwS3_.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ = asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"]; asm["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy.apply(null, arguments);
	};

	var real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ = asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"]; asm["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy = asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy"]; asm["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx.apply(null, arguments);
	};

	var real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy = asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy"]; asm["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE = asm["__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE"]; asm["__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE = asm["__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"]; asm["__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIcE8do_closeEi = asm["__ZNKSt3__28messagesIcE8do_closeEi"]; asm["__ZNKSt3__28messagesIcE8do_closeEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIcE8do_closeEi.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE = asm["__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE"]; asm["__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE = asm["__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"]; asm["__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNKSt3__28messagesIwE8do_closeEi = asm["__ZNKSt3__28messagesIwE8do_closeEi"]; asm["__ZNKSt3__28messagesIwE8do_closeEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28messagesIwE8do_closeEi.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIcE11do_groupingEv = asm["__ZNKSt3__28numpunctIcE11do_groupingEv"]; asm["__ZNKSt3__28numpunctIcE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIcE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIcE11do_truenameEv = asm["__ZNKSt3__28numpunctIcE11do_truenameEv"]; asm["__ZNKSt3__28numpunctIcE11do_truenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIcE11do_truenameEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIcE12do_falsenameEv = asm["__ZNKSt3__28numpunctIcE12do_falsenameEv"]; asm["__ZNKSt3__28numpunctIcE12do_falsenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIcE12do_falsenameEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIcE16do_decimal_pointEv = asm["__ZNKSt3__28numpunctIcE16do_decimal_pointEv"]; asm["__ZNKSt3__28numpunctIcE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIcE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIcE16do_thousands_sepEv = asm["__ZNKSt3__28numpunctIcE16do_thousands_sepEv"]; asm["__ZNKSt3__28numpunctIcE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIcE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIwE11do_groupingEv = asm["__ZNKSt3__28numpunctIwE11do_groupingEv"]; asm["__ZNKSt3__28numpunctIwE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIwE11do_groupingEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIwE11do_truenameEv = asm["__ZNKSt3__28numpunctIwE11do_truenameEv"]; asm["__ZNKSt3__28numpunctIwE11do_truenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIwE11do_truenameEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIwE12do_falsenameEv = asm["__ZNKSt3__28numpunctIwE12do_falsenameEv"]; asm["__ZNKSt3__28numpunctIwE12do_falsenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIwE12do_falsenameEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIwE16do_decimal_pointEv = asm["__ZNKSt3__28numpunctIwE16do_decimal_pointEv"]; asm["__ZNKSt3__28numpunctIwE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIwE16do_decimal_pointEv.apply(null, arguments);
	};

	var real___ZNKSt3__28numpunctIwE16do_thousands_sepEv = asm["__ZNKSt3__28numpunctIwE16do_thousands_sepEv"]; asm["__ZNKSt3__28numpunctIwE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28numpunctIwE16do_thousands_sepEv.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc = asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"]; asm["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm.apply(null, arguments);
	};

	var real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc = asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"]; asm["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc.apply(null, arguments);
	};

	var real___ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc = asm["__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc"]; asm["__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc.apply(null, arguments);
	};

	var real___ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc = asm["__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc"]; asm["__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc.apply(null, arguments);
	};

	var real___ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE = asm["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE"]; asm["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe = asm["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"]; asm["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe.apply(null, arguments);
	};

	var real___ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE = asm["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE"]; asm["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe = asm["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"]; asm["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe.apply(null, arguments);
	};

	var real___ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE = asm["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE"]; asm["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce = asm["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce"]; asm["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce.apply(null, arguments);
	};

	var real___ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE = asm["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE"]; asm["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE.apply(null, arguments);
	};

	var real___ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe = asm["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe"]; asm["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe.apply(null, arguments);
	};

	var real___ZNSt3__210__back_refIcED0Ev = asm["__ZNSt3__210__back_refIcED0Ev"]; asm["__ZNSt3__210__back_refIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__back_refIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__back_refIcED2Ev = asm["__ZNSt3__210__back_refIcED2Ev"]; asm["__ZNSt3__210__back_refIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__back_refIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev = asm["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev = asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev = asm["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev = asm["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev = asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev = asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPvEED0Ev = asm["__ZNSt3__210__function6__baseIFvPvEED0Ev"]; asm["__ZNSt3__210__function6__baseIFvPvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvPvEED2Ev = asm["__ZNSt3__210__function6__baseIFvPvEED2Ev"]; asm["__ZNSt3__210__function6__baseIFvPvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvPvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev = asm["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev = asm["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_ = asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_"]; asm["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_.apply(null, arguments);
	};

	var real___ZNSt3__210__l_anchorIcED0Ev = asm["__ZNSt3__210__l_anchorIcED0Ev"]; asm["__ZNSt3__210__l_anchorIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__l_anchorIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__l_anchorIcED2Ev = asm["__ZNSt3__210__l_anchorIcED2Ev"]; asm["__ZNSt3__210__l_anchorIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__l_anchorIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__r_anchorIcED0Ev = asm["__ZNSt3__210__r_anchorIcED0Ev"]; asm["__ZNSt3__210__r_anchorIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__r_anchorIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__r_anchorIcED2Ev = asm["__ZNSt3__210__r_anchorIcED2Ev"]; asm["__ZNSt3__210__r_anchorIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__r_anchorIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE = asm["__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE"]; asm["__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcE5uflowEv = asm["__ZNSt3__210__stdinbufIcE5uflowEv"]; asm["__ZNSt3__210__stdinbufIcE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcE5uflowEv.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcE9pbackfailEi = asm["__ZNSt3__210__stdinbufIcE9pbackfailEi"]; asm["__ZNSt3__210__stdinbufIcE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcE9pbackfailEi.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcE9underflowEv = asm["__ZNSt3__210__stdinbufIcE9underflowEv"]; asm["__ZNSt3__210__stdinbufIcE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcE9underflowEv.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcED0Ev = asm["__ZNSt3__210__stdinbufIcED0Ev"]; asm["__ZNSt3__210__stdinbufIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIcED2Ev = asm["__ZNSt3__210__stdinbufIcED2Ev"]; asm["__ZNSt3__210__stdinbufIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE = asm["__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE"]; asm["__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwE5uflowEv = asm["__ZNSt3__210__stdinbufIwE5uflowEv"]; asm["__ZNSt3__210__stdinbufIwE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwE5uflowEv.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwE9pbackfailEj = asm["__ZNSt3__210__stdinbufIwE9pbackfailEj"]; asm["__ZNSt3__210__stdinbufIwE9pbackfailEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwE9pbackfailEj.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwE9underflowEv = asm["__ZNSt3__210__stdinbufIwE9underflowEv"]; asm["__ZNSt3__210__stdinbufIwE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwE9underflowEv.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwED0Ev = asm["__ZNSt3__210__stdinbufIwED0Ev"]; asm["__ZNSt3__210__stdinbufIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210__stdinbufIwED2Ev = asm["__ZNSt3__210__stdinbufIwED2Ev"]; asm["__ZNSt3__210__stdinbufIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210__stdinbufIwED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIcLb0EED0Ev = asm["__ZNSt3__210moneypunctIcLb0EED0Ev"]; asm["__ZNSt3__210moneypunctIcLb0EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIcLb0EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIcLb0EED2Ev = asm["__ZNSt3__210moneypunctIcLb0EED2Ev"]; asm["__ZNSt3__210moneypunctIcLb0EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIcLb0EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIcLb1EED0Ev = asm["__ZNSt3__210moneypunctIcLb1EED0Ev"]; asm["__ZNSt3__210moneypunctIcLb1EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIcLb1EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIcLb1EED2Ev = asm["__ZNSt3__210moneypunctIcLb1EED2Ev"]; asm["__ZNSt3__210moneypunctIcLb1EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIcLb1EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIwLb0EED0Ev = asm["__ZNSt3__210moneypunctIwLb0EED0Ev"]; asm["__ZNSt3__210moneypunctIwLb0EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIwLb0EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIwLb0EED2Ev = asm["__ZNSt3__210moneypunctIwLb0EED2Ev"]; asm["__ZNSt3__210moneypunctIwLb0EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIwLb0EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIwLb1EED0Ev = asm["__ZNSt3__210moneypunctIwLb1EED0Ev"]; asm["__ZNSt3__210moneypunctIwLb1EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIwLb1EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__210moneypunctIwLb1EED2Ev = asm["__ZNSt3__210moneypunctIwLb1EED2Ev"]; asm["__ZNSt3__210moneypunctIwLb1EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__210moneypunctIwLb1EED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__alternateIcED0Ev = asm["__ZNSt3__211__alternateIcED0Ev"]; asm["__ZNSt3__211__alternateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__alternateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__alternateIcED2Ev = asm["__ZNSt3__211__alternateIcED2Ev"]; asm["__ZNSt3__211__alternateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__alternateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__end_stateIcED0Ev = asm["__ZNSt3__211__end_stateIcED0Ev"]; asm["__ZNSt3__211__end_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__end_stateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__end_stateIcED2Ev = asm["__ZNSt3__211__end_stateIcED2Ev"]; asm["__ZNSt3__211__end_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__end_stateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__match_anyIcED0Ev = asm["__ZNSt3__211__match_anyIcED0Ev"]; asm["__ZNSt3__211__match_anyIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__match_anyIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__match_anyIcED2Ev = asm["__ZNSt3__211__match_anyIcED2Ev"]; asm["__ZNSt3__211__match_anyIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__match_anyIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcE4syncEv = asm["__ZNSt3__211__stdoutbufIcE4syncEv"]; asm["__ZNSt3__211__stdoutbufIcE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcE4syncEv.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE = asm["__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE"]; asm["__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcE6xsputnEPKci = asm["__ZNSt3__211__stdoutbufIcE6xsputnEPKci"]; asm["__ZNSt3__211__stdoutbufIcE6xsputnEPKci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcE6xsputnEPKci.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcE8overflowEi = asm["__ZNSt3__211__stdoutbufIcE8overflowEi"]; asm["__ZNSt3__211__stdoutbufIcE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcE8overflowEi.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcED0Ev = asm["__ZNSt3__211__stdoutbufIcED0Ev"]; asm["__ZNSt3__211__stdoutbufIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIcED2Ev = asm["__ZNSt3__211__stdoutbufIcED2Ev"]; asm["__ZNSt3__211__stdoutbufIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwE4syncEv = asm["__ZNSt3__211__stdoutbufIwE4syncEv"]; asm["__ZNSt3__211__stdoutbufIwE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwE4syncEv.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE = asm["__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE"]; asm["__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwE6xsputnEPKwi = asm["__ZNSt3__211__stdoutbufIwE6xsputnEPKwi"]; asm["__ZNSt3__211__stdoutbufIwE6xsputnEPKwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwE6xsputnEPKwi.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwE8overflowEj = asm["__ZNSt3__211__stdoutbufIwE8overflowEj"]; asm["__ZNSt3__211__stdoutbufIwE8overflowEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwE8overflowEj.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwED0Ev = asm["__ZNSt3__211__stdoutbufIwED0Ev"]; asm["__ZNSt3__211__stdoutbufIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__211__stdoutbufIwED2Ev = asm["__ZNSt3__211__stdoutbufIwED2Ev"]; asm["__ZNSt3__211__stdoutbufIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211__stdoutbufIwED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__211char_traitsIcE2eqEcc = asm["__ZNSt3__211char_traitsIcE2eqEcc"]; asm["__ZNSt3__211char_traitsIcE2eqEcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__211char_traitsIcE2eqEcc.apply(null, arguments);
	};

	var real___ZNSt3__212__do_nothingEPv = asm["__ZNSt3__212__do_nothingEPv"]; asm["__ZNSt3__212__do_nothingEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__212__do_nothingEPv.apply(null, arguments);
	};

	var real___ZNSt3__212__match_charIcED0Ev = asm["__ZNSt3__212__match_charIcED0Ev"]; asm["__ZNSt3__212__match_charIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__212__match_charIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__212__match_charIcED2Ev = asm["__ZNSt3__212__match_charIcED2Ev"]; asm["__ZNSt3__212__match_charIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__212__match_charIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__213__empty_stateIcED0Ev = asm["__ZNSt3__213__empty_stateIcED0Ev"]; asm["__ZNSt3__213__empty_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213__empty_stateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__213__empty_stateIcED2Ev = asm["__ZNSt3__213__empty_stateIcED2Ev"]; asm["__ZNSt3__213__empty_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213__empty_stateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev = asm["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"]; asm["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev = asm["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"]; asm["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev = asm["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"]; asm["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev = asm["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"]; asm["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev = asm["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"]; asm["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev = asm["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"]; asm["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev = asm["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"]; asm["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev = asm["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"]; asm["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__214__shared_countD0Ev = asm["__ZNSt3__214__shared_countD0Ev"]; asm["__ZNSt3__214__shared_countD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__214__shared_countD0Ev.apply(null, arguments);
	};

	var real___ZNSt3__214__shared_countD2Ev = asm["__ZNSt3__214__shared_countD2Ev"]; asm["__ZNSt3__214__shared_countD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__214__shared_countD2Ev.apply(null, arguments);
	};

	var real___ZNSt3__215__has_one_stateIcED0Ev = asm["__ZNSt3__215__has_one_stateIcED0Ev"]; asm["__ZNSt3__215__has_one_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215__has_one_stateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__215__has_one_stateIcED2Ev = asm["__ZNSt3__215__has_one_stateIcED2Ev"]; asm["__ZNSt3__215__has_one_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215__has_one_stateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev = asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev"]; asm["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev = asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev"]; asm["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev = asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev"]; asm["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__216__narrow_to_utf8ILj32EED0Ev = asm["__ZNSt3__216__narrow_to_utf8ILj32EED0Ev"]; asm["__ZNSt3__216__narrow_to_utf8ILj32EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__216__narrow_to_utf8ILj32EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__216__owns_one_stateIcED0Ev = asm["__ZNSt3__216__owns_one_stateIcED0Ev"]; asm["__ZNSt3__216__owns_one_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__216__owns_one_stateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__216__owns_one_stateIcED2Ev = asm["__ZNSt3__216__owns_one_stateIcED2Ev"]; asm["__ZNSt3__216__owns_one_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__216__owns_one_stateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv = asm["__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv"]; asm["__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv.apply(null, arguments);
	};

	var real___ZNSt3__217__owns_two_statesIcED0Ev = asm["__ZNSt3__217__owns_two_statesIcED0Ev"]; asm["__ZNSt3__217__owns_two_statesIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__owns_two_statesIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__217__owns_two_statesIcED2Ev = asm["__ZNSt3__217__owns_two_statesIcED2Ev"]; asm["__ZNSt3__217__owns_two_statesIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__owns_two_statesIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__217__repeat_one_loopIcED0Ev = asm["__ZNSt3__217__repeat_one_loopIcED0Ev"]; asm["__ZNSt3__217__repeat_one_loopIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__repeat_one_loopIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__217__repeat_one_loopIcED2Ev = asm["__ZNSt3__217__repeat_one_loopIcED2Ev"]; asm["__ZNSt3__217__repeat_one_loopIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__repeat_one_loopIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__217__widen_from_utf8ILj32EED0Ev = asm["__ZNSt3__217__widen_from_utf8ILj32EED0Ev"]; asm["__ZNSt3__217__widen_from_utf8ILj32EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__217__widen_from_utf8ILj32EED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__219__shared_weak_countD0Ev = asm["__ZNSt3__219__shared_weak_countD0Ev"]; asm["__ZNSt3__219__shared_weak_countD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__219__shared_weak_countD0Ev.apply(null, arguments);
	};

	var real___ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = asm["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"]; asm["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = asm["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"]; asm["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = asm["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"]; asm["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = asm["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"]; asm["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev = asm["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev"]; asm["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev = asm["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev"]; asm["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev = asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv = asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv"]; asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev = asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev = asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev"]; asm["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__221__empty_non_own_stateIcED0Ev = asm["__ZNSt3__221__empty_non_own_stateIcED0Ev"]; asm["__ZNSt3__221__empty_non_own_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__221__empty_non_own_stateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__221__empty_non_own_stateIcED2Ev = asm["__ZNSt3__221__empty_non_own_stateIcED2Ev"]; asm["__ZNSt3__221__empty_non_own_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__221__empty_non_own_stateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__223__match_any_but_newlineIcED0Ev = asm["__ZNSt3__223__match_any_but_newlineIcED0Ev"]; asm["__ZNSt3__223__match_any_but_newlineIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__223__match_any_but_newlineIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__223__match_any_but_newlineIcED2Ev = asm["__ZNSt3__223__match_any_but_newlineIcED2Ev"]; asm["__ZNSt3__223__match_any_but_newlineIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__223__match_any_but_newlineIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__226__end_marked_subexpressionIcED0Ev = asm["__ZNSt3__226__end_marked_subexpressionIcED0Ev"]; asm["__ZNSt3__226__end_marked_subexpressionIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__226__end_marked_subexpressionIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__226__end_marked_subexpressionIcED2Ev = asm["__ZNSt3__226__end_marked_subexpressionIcED2Ev"]; asm["__ZNSt3__226__end_marked_subexpressionIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__226__end_marked_subexpressionIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__228__begin_marked_subexpressionIcED0Ev = asm["__ZNSt3__228__begin_marked_subexpressionIcED0Ev"]; asm["__ZNSt3__228__begin_marked_subexpressionIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__228__begin_marked_subexpressionIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__228__begin_marked_subexpressionIcED2Ev = asm["__ZNSt3__228__begin_marked_subexpressionIcED2Ev"]; asm["__ZNSt3__228__begin_marked_subexpressionIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__228__begin_marked_subexpressionIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ = asm["__ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_"]; asm["__ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_.apply(null, arguments);
	};

	var real___ZNSt3__25ctypeIcED0Ev = asm["__ZNSt3__25ctypeIcED0Ev"]; asm["__ZNSt3__25ctypeIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__25ctypeIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__25ctypeIcED2Ev = asm["__ZNSt3__25ctypeIcED2Ev"]; asm["__ZNSt3__25ctypeIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__25ctypeIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__25ctypeIwED0Ev = asm["__ZNSt3__25ctypeIwED0Ev"]; asm["__ZNSt3__25ctypeIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__25ctypeIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__26__loopIcED0Ev = asm["__ZNSt3__26__loopIcED0Ev"]; asm["__ZNSt3__26__loopIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26__loopIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__26__loopIcED2Ev = asm["__ZNSt3__26__loopIcED2Ev"]; asm["__ZNSt3__26__loopIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26__loopIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__26__nodeIcED0Ev = asm["__ZNSt3__26__nodeIcED0Ev"]; asm["__ZNSt3__26__nodeIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26__nodeIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__26__nodeIcED2Ev = asm["__ZNSt3__26__nodeIcED2Ev"]; asm["__ZNSt3__26__nodeIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26__nodeIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__26locale2id6__initEv = asm["__ZNSt3__26locale2id6__initEv"]; asm["__ZNSt3__26locale2id6__initEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale2id6__initEv.apply(null, arguments);
	};

	var real___ZNSt3__26locale5__impD0Ev = asm["__ZNSt3__26locale5__impD0Ev"]; asm["__ZNSt3__26locale5__impD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale5__impD0Ev.apply(null, arguments);
	};

	var real___ZNSt3__26locale5__impD2Ev = asm["__ZNSt3__26locale5__impD2Ev"]; asm["__ZNSt3__26locale5__impD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale5__impD2Ev.apply(null, arguments);
	};

	var real___ZNSt3__26locale5facet16__on_zero_sharedEv = asm["__ZNSt3__26locale5facet16__on_zero_sharedEv"]; asm["__ZNSt3__26locale5facet16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale5facet16__on_zero_sharedEv.apply(null, arguments);
	};

	var real___ZNSt3__26locale5facetD0Ev = asm["__ZNSt3__26locale5facetD0Ev"]; asm["__ZNSt3__26locale5facetD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale5facetD0Ev.apply(null, arguments);
	};

	var real___ZNSt3__26locale5facetD2Ev = asm["__ZNSt3__26locale5facetD2Ev"]; asm["__ZNSt3__26locale5facetD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__26locale5facetD2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27codecvtIDic11__mbstate_tED0Ev = asm["__ZNSt3__27codecvtIDic11__mbstate_tED0Ev"]; asm["__ZNSt3__27codecvtIDic11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27codecvtIDic11__mbstate_tED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27codecvtIDsc11__mbstate_tED0Ev = asm["__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev"]; asm["__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27codecvtIDsc11__mbstate_tED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27codecvtIcc11__mbstate_tED0Ev = asm["__ZNSt3__27codecvtIcc11__mbstate_tED0Ev"]; asm["__ZNSt3__27codecvtIcc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27codecvtIcc11__mbstate_tED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27codecvtIwc11__mbstate_tED0Ev = asm["__ZNSt3__27codecvtIwc11__mbstate_tED0Ev"]; asm["__ZNSt3__27codecvtIwc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27codecvtIwc11__mbstate_tED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27codecvtIwc11__mbstate_tED2Ev = asm["__ZNSt3__27codecvtIwc11__mbstate_tED2Ev"]; asm["__ZNSt3__27codecvtIwc11__mbstate_tED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27codecvtIwc11__mbstate_tED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27collateIcED0Ev = asm["__ZNSt3__27collateIcED0Ev"]; asm["__ZNSt3__27collateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27collateIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27collateIcED2Ev = asm["__ZNSt3__27collateIcED2Ev"]; asm["__ZNSt3__27collateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27collateIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27collateIwED0Ev = asm["__ZNSt3__27collateIwED0Ev"]; asm["__ZNSt3__27collateIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27collateIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27collateIwED2Ev = asm["__ZNSt3__27collateIwED2Ev"]; asm["__ZNSt3__27collateIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27collateIwED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28ios_baseD0Ev = asm["__ZNSt3__28ios_baseD0Ev"]; asm["__ZNSt3__28ios_baseD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28ios_baseD0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28ios_baseD2Ev = asm["__ZNSt3__28ios_baseD2Ev"]; asm["__ZNSt3__28ios_baseD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28ios_baseD2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28messagesIcED0Ev = asm["__ZNSt3__28messagesIcED0Ev"]; asm["__ZNSt3__28messagesIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28messagesIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28messagesIcED2Ev = asm["__ZNSt3__28messagesIcED2Ev"]; asm["__ZNSt3__28messagesIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28messagesIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28messagesIwED0Ev = asm["__ZNSt3__28messagesIwED0Ev"]; asm["__ZNSt3__28messagesIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28messagesIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28messagesIwED2Ev = asm["__ZNSt3__28messagesIwED2Ev"]; asm["__ZNSt3__28messagesIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28messagesIwED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28numpunctIcED0Ev = asm["__ZNSt3__28numpunctIcED0Ev"]; asm["__ZNSt3__28numpunctIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28numpunctIcED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28numpunctIcED2Ev = asm["__ZNSt3__28numpunctIcED2Ev"]; asm["__ZNSt3__28numpunctIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28numpunctIcED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28numpunctIwED0Ev = asm["__ZNSt3__28numpunctIwED0Ev"]; asm["__ZNSt3__28numpunctIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28numpunctIwED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28numpunctIwED2Ev = asm["__ZNSt3__28numpunctIwED2Ev"]; asm["__ZNSt3__28numpunctIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28numpunctIwED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev = asm["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev"]; asm["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev = asm["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev"]; asm["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = asm["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"]; asm["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = asm["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"]; asm["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = asm["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"]; asm["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev.apply(null, arguments);
	};

	var real___ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = asm["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"]; asm["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev.apply(null, arguments);
	};

	var real___ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv = asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"]; asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv.apply(null, arguments);
	};

	var real___ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"]; asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj.apply(null, arguments);
	};

	var real___ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev = asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev"]; asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev.apply(null, arguments);
	};

	var real___ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev = asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev"]; asm["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev = asm["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"]; asm["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev = asm["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"]; asm["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev = asm["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"]; asm["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev = asm["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"]; asm["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev = asm["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"]; asm["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev = asm["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"]; asm["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev = asm["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"]; asm["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev = asm["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"]; asm["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = asm["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"]; asm["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = asm["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"]; asm["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = asm["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"]; asm["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev.apply(null, arguments);
	};

	var real___ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = asm["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"]; asm["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"]; asm["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv = asm["__ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv"]; asm["__ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value = asm["__ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value = asm["__ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value"]; asm["__ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"]; asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"]; asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"]; asm["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv = asm["__ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv"]; asm["__ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_ = asm["__ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_"]; asm["__ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_.apply(null, arguments);
	};

	var real___ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_ = asm["__ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_"]; asm["__ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real___ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_.apply(null, arguments);
	};

	var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____errno_location.apply(null, arguments);
	};

	var real____mmap = asm["___mmap"]; asm["___mmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____mmap.apply(null, arguments);
	};

	var real____munmap = asm["___munmap"]; asm["___munmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____munmap.apply(null, arguments);
	};

	var real____stdio_close = asm["___stdio_close"]; asm["___stdio_close"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____stdio_close.apply(null, arguments);
	};

	var real____stdio_read = asm["___stdio_read"]; asm["___stdio_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____stdio_read.apply(null, arguments);
	};

	var real____stdio_seek = asm["___stdio_seek"]; asm["___stdio_seek"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____stdio_seek.apply(null, arguments);
	};

	var real____stdio_write = asm["___stdio_write"]; asm["___stdio_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____stdio_write.apply(null, arguments);
	};

	var real____stdout_write = asm["___stdout_write"]; asm["___stdout_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real____stdout_write.apply(null, arguments);
	};

	var real__absFunc = asm["_absFunc"]; asm["_absFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__absFunc.apply(null, arguments);
	};

	var real__access = asm["_access"]; asm["_access"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__access.apply(null, arguments);
	};

	var real__agginfoPersistExprCb = asm["_agginfoPersistExprCb"]; asm["_agginfoPersistExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__agginfoPersistExprCb.apply(null, arguments);
	};

	var real__analysisLoader = asm["_analysisLoader"]; asm["_analysisLoader"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__analysisLoader.apply(null, arguments);
	};

	var real__analyzeAggregate = asm["_analyzeAggregate"]; asm["_analyzeAggregate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__analyzeAggregate.apply(null, arguments);
	};

	var real__attachFunc = asm["_attachFunc"]; asm["_attachFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__attachFunc.apply(null, arguments);
	};

	var real__avgFinalize = asm["_avgFinalize"]; asm["_avgFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__avgFinalize.apply(null, arguments);
	};

	var real__binCollFunc = asm["_binCollFunc"]; asm["_binCollFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__binCollFunc.apply(null, arguments);
	};

	var real__btreeInvokeBusyHandler = asm["_btreeInvokeBusyHandler"]; asm["_btreeInvokeBusyHandler"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__btreeInvokeBusyHandler.apply(null, arguments);
	};

	var real__btreeParseCellPtr = asm["_btreeParseCellPtr"]; asm["_btreeParseCellPtr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__btreeParseCellPtr.apply(null, arguments);
	};

	var real__btreeParseCellPtrIndex = asm["_btreeParseCellPtrIndex"]; asm["_btreeParseCellPtrIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__btreeParseCellPtrIndex.apply(null, arguments);
	};

	var real__btreeParseCellPtrNoPayload = asm["_btreeParseCellPtrNoPayload"]; asm["_btreeParseCellPtrNoPayload"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__btreeParseCellPtrNoPayload.apply(null, arguments);
	};

	var real__cdateFunc = asm["_cdateFunc"]; asm["_cdateFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cdateFunc.apply(null, arguments);
	};

	var real__cellSizePtr = asm["_cellSizePtr"]; asm["_cellSizePtr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cellSizePtr.apply(null, arguments);
	};

	var real__cellSizePtrNoPayload = asm["_cellSizePtrNoPayload"]; asm["_cellSizePtrNoPayload"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cellSizePtrNoPayload.apply(null, arguments);
	};

	var real__changes = asm["_changes"]; asm["_changes"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__changes.apply(null, arguments);
	};

	var real__charFunc = asm["_charFunc"]; asm["_charFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__charFunc.apply(null, arguments);
	};

	var real__checkConstraintExprNode = asm["_checkConstraintExprNode"]; asm["_checkConstraintExprNode"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__checkConstraintExprNode.apply(null, arguments);
	};

	var real__close = asm["_close"]; asm["_close"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__close.apply(null, arguments);
	};

	var real__compileoptiongetFunc = asm["_compileoptiongetFunc"]; asm["_compileoptiongetFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__compileoptiongetFunc.apply(null, arguments);
	};

	var real__compileoptionusedFunc = asm["_compileoptionusedFunc"]; asm["_compileoptionusedFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__compileoptionusedFunc.apply(null, arguments);
	};

	var real__convertCompoundSelectToSubquery = asm["_convertCompoundSelectToSubquery"]; asm["_convertCompoundSelectToSubquery"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__convertCompoundSelectToSubquery.apply(null, arguments);
	};

	var real__countFinalize = asm["_countFinalize"]; asm["_countFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__countFinalize.apply(null, arguments);
	};

	var real__countInverse = asm["_countInverse"]; asm["_countInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__countInverse.apply(null, arguments);
	};

	var real__countStep = asm["_countStep"]; asm["_countStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__countStep.apply(null, arguments);
	};

	var real__ctimeFunc = asm["_ctimeFunc"]; asm["_ctimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ctimeFunc.apply(null, arguments);
	};

	var real__ctimestampFunc = asm["_ctimestampFunc"]; asm["_ctimestampFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ctimestampFunc.apply(null, arguments);
	};

	var real__cume_distInvFunc = asm["_cume_distInvFunc"]; asm["_cume_distInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cume_distInvFunc.apply(null, arguments);
	};

	var real__cume_distStepFunc = asm["_cume_distStepFunc"]; asm["_cume_distStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cume_distStepFunc.apply(null, arguments);
	};

	var real__cume_distValueFunc = asm["_cume_distValueFunc"]; asm["_cume_distValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__cume_distValueFunc.apply(null, arguments);
	};

	var real__dateFunc = asm["_dateFunc"]; asm["_dateFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dateFunc.apply(null, arguments);
	};

	var real__datetimeFunc = asm["_datetimeFunc"]; asm["_datetimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__datetimeFunc.apply(null, arguments);
	};

	var real__dense_rankStepFunc = asm["_dense_rankStepFunc"]; asm["_dense_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dense_rankStepFunc.apply(null, arguments);
	};

	var real__dense_rankValueFunc = asm["_dense_rankValueFunc"]; asm["_dense_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dense_rankValueFunc.apply(null, arguments);
	};

	var real__detachFunc = asm["_detachFunc"]; asm["_detachFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__detachFunc.apply(null, arguments);
	};

	var real__do_read = asm["_do_read"]; asm["_do_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__do_read.apply(null, arguments);
	};

	var real__dotlockCheckReservedLock = asm["_dotlockCheckReservedLock"]; asm["_dotlockCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dotlockCheckReservedLock.apply(null, arguments);
	};

	var real__dotlockClose = asm["_dotlockClose"]; asm["_dotlockClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dotlockClose.apply(null, arguments);
	};

	var real__dotlockIoFinderImpl = asm["_dotlockIoFinderImpl"]; asm["_dotlockIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dotlockIoFinderImpl.apply(null, arguments);
	};

	var real__dotlockLock = asm["_dotlockLock"]; asm["_dotlockLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dotlockLock.apply(null, arguments);
	};

	var real__dotlockUnlock = asm["_dotlockUnlock"]; asm["_dotlockUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__dotlockUnlock.apply(null, arguments);
	};

	var real__doubleCmp = asm["_doubleCmp"]; asm["_doubleCmp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__doubleCmp.apply(null, arguments);
	};

	var real__errlogFunc = asm["_errlogFunc"]; asm["_errlogFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__errlogFunc.apply(null, arguments);
	};

	var real__exprColumnFlagUnion = asm["_exprColumnFlagUnion"]; asm["_exprColumnFlagUnion"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprColumnFlagUnion.apply(null, arguments);
	};

	var real__exprIdxCover = asm["_exprIdxCover"]; asm["_exprIdxCover"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprIdxCover.apply(null, arguments);
	};

	var real__exprNodeIsConstant = asm["_exprNodeIsConstant"]; asm["_exprNodeIsConstant"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprNodeIsConstant.apply(null, arguments);
	};

	var real__exprNodeIsConstantOrGroupBy = asm["_exprNodeIsConstantOrGroupBy"]; asm["_exprNodeIsConstantOrGroupBy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprNodeIsConstantOrGroupBy.apply(null, arguments);
	};

	var real__exprNodeIsDeterministic = asm["_exprNodeIsDeterministic"]; asm["_exprNodeIsDeterministic"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprNodeIsDeterministic.apply(null, arguments);
	};

	var real__exprSrcCount = asm["_exprSrcCount"]; asm["_exprSrcCount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__exprSrcCount.apply(null, arguments);
	};

	var real__fchmod = asm["_fchmod"]; asm["_fchmod"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__fchmod.apply(null, arguments);
	};

	var real__fchown = asm["_fchown"]; asm["_fchown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__fchown.apply(null, arguments);
	};

	var real__fcntl = asm["_fcntl"]; asm["_fcntl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__fcntl.apply(null, arguments);
	};

	var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__fflush.apply(null, arguments);
	};

	var real__first_valueFinalizeFunc = asm["_first_valueFinalizeFunc"]; asm["_first_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__first_valueFinalizeFunc.apply(null, arguments);
	};

	var real__first_valueStepFunc = asm["_first_valueStepFunc"]; asm["_first_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__first_valueStepFunc.apply(null, arguments);
	};

	var real__free = asm["_free"]; asm["_free"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__free.apply(null, arguments);
	};

	var real__fstat = asm["_fstat"]; asm["_fstat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__fstat.apply(null, arguments);
	};

	var real__ftruncate = asm["_ftruncate"]; asm["_ftruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ftruncate.apply(null, arguments);
	};

	var real__gatherSelectWindowsCallback = asm["_gatherSelectWindowsCallback"]; asm["_gatherSelectWindowsCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__gatherSelectWindowsCallback.apply(null, arguments);
	};

	var real__gatherSelectWindowsSelectCallback = asm["_gatherSelectWindowsSelectCallback"]; asm["_gatherSelectWindowsSelectCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__gatherSelectWindowsSelectCallback.apply(null, arguments);
	};

	var real__getPageError = asm["_getPageError"]; asm["_getPageError"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__getPageError.apply(null, arguments);
	};

	var real__getPageNormal = asm["_getPageNormal"]; asm["_getPageNormal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__getPageNormal.apply(null, arguments);
	};

	var real__getcwd = asm["_getcwd"]; asm["_getcwd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__getcwd.apply(null, arguments);
	};

	var real__geteuid = asm["_geteuid"]; asm["_geteuid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__geteuid.apply(null, arguments);
	};

	var real__groupConcatFinalize = asm["_groupConcatFinalize"]; asm["_groupConcatFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__groupConcatFinalize.apply(null, arguments);
	};

	var real__groupConcatInverse = asm["_groupConcatInverse"]; asm["_groupConcatInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__groupConcatInverse.apply(null, arguments);
	};

	var real__groupConcatStep = asm["_groupConcatStep"]; asm["_groupConcatStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__groupConcatStep.apply(null, arguments);
	};

	var real__groupConcatValue = asm["_groupConcatValue"]; asm["_groupConcatValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__groupConcatValue.apply(null, arguments);
	};

	var real__havingToWhereExprCb = asm["_havingToWhereExprCb"]; asm["_havingToWhereExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__havingToWhereExprCb.apply(null, arguments);
	};

	var real__hexFunc = asm["_hexFunc"]; asm["_hexFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__hexFunc.apply(null, arguments);
	};

	var real__impliesNotNullRow = asm["_impliesNotNullRow"]; asm["_impliesNotNullRow"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__impliesNotNullRow.apply(null, arguments);
	};

	var real__incrAggDepth = asm["_incrAggDepth"]; asm["_incrAggDepth"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__incrAggDepth.apply(null, arguments);
	};

	var real__instrFunc = asm["_instrFunc"]; asm["_instrFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__instrFunc.apply(null, arguments);
	};

	var real__jsonArrayFinal = asm["_jsonArrayFinal"]; asm["_jsonArrayFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonArrayFinal.apply(null, arguments);
	};

	var real__jsonArrayFunc = asm["_jsonArrayFunc"]; asm["_jsonArrayFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonArrayFunc.apply(null, arguments);
	};

	var real__jsonArrayLengthFunc = asm["_jsonArrayLengthFunc"]; asm["_jsonArrayLengthFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonArrayLengthFunc.apply(null, arguments);
	};

	var real__jsonArrayStep = asm["_jsonArrayStep"]; asm["_jsonArrayStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonArrayStep.apply(null, arguments);
	};

	var real__jsonArrayValue = asm["_jsonArrayValue"]; asm["_jsonArrayValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonArrayValue.apply(null, arguments);
	};

	var real__jsonEachBestIndex = asm["_jsonEachBestIndex"]; asm["_jsonEachBestIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachBestIndex.apply(null, arguments);
	};

	var real__jsonEachClose = asm["_jsonEachClose"]; asm["_jsonEachClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachClose.apply(null, arguments);
	};

	var real__jsonEachColumn = asm["_jsonEachColumn"]; asm["_jsonEachColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachColumn.apply(null, arguments);
	};

	var real__jsonEachConnect = asm["_jsonEachConnect"]; asm["_jsonEachConnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachConnect.apply(null, arguments);
	};

	var real__jsonEachDisconnect = asm["_jsonEachDisconnect"]; asm["_jsonEachDisconnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachDisconnect.apply(null, arguments);
	};

	var real__jsonEachEof = asm["_jsonEachEof"]; asm["_jsonEachEof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachEof.apply(null, arguments);
	};

	var real__jsonEachFilter = asm["_jsonEachFilter"]; asm["_jsonEachFilter"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachFilter.apply(null, arguments);
	};

	var real__jsonEachNext = asm["_jsonEachNext"]; asm["_jsonEachNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachNext.apply(null, arguments);
	};

	var real__jsonEachOpenEach = asm["_jsonEachOpenEach"]; asm["_jsonEachOpenEach"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachOpenEach.apply(null, arguments);
	};

	var real__jsonEachOpenTree = asm["_jsonEachOpenTree"]; asm["_jsonEachOpenTree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachOpenTree.apply(null, arguments);
	};

	var real__jsonEachRowid = asm["_jsonEachRowid"]; asm["_jsonEachRowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonEachRowid.apply(null, arguments);
	};

	var real__jsonExtractFunc = asm["_jsonExtractFunc"]; asm["_jsonExtractFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonExtractFunc.apply(null, arguments);
	};

	var real__jsonGroupInverse = asm["_jsonGroupInverse"]; asm["_jsonGroupInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonGroupInverse.apply(null, arguments);
	};

	var real__jsonObjectFinal = asm["_jsonObjectFinal"]; asm["_jsonObjectFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonObjectFinal.apply(null, arguments);
	};

	var real__jsonObjectFunc = asm["_jsonObjectFunc"]; asm["_jsonObjectFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonObjectFunc.apply(null, arguments);
	};

	var real__jsonObjectStep = asm["_jsonObjectStep"]; asm["_jsonObjectStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonObjectStep.apply(null, arguments);
	};

	var real__jsonObjectValue = asm["_jsonObjectValue"]; asm["_jsonObjectValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonObjectValue.apply(null, arguments);
	};

	var real__jsonParseFree = asm["_jsonParseFree"]; asm["_jsonParseFree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonParseFree.apply(null, arguments);
	};

	var real__jsonPatchFunc = asm["_jsonPatchFunc"]; asm["_jsonPatchFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonPatchFunc.apply(null, arguments);
	};

	var real__jsonQuoteFunc = asm["_jsonQuoteFunc"]; asm["_jsonQuoteFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonQuoteFunc.apply(null, arguments);
	};

	var real__jsonRemoveFunc = asm["_jsonRemoveFunc"]; asm["_jsonRemoveFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonRemoveFunc.apply(null, arguments);
	};

	var real__jsonReplaceFunc = asm["_jsonReplaceFunc"]; asm["_jsonReplaceFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonReplaceFunc.apply(null, arguments);
	};

	var real__jsonSetFunc = asm["_jsonSetFunc"]; asm["_jsonSetFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonSetFunc.apply(null, arguments);
	};

	var real__jsonTypeFunc = asm["_jsonTypeFunc"]; asm["_jsonTypeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonTypeFunc.apply(null, arguments);
	};

	var real__jsonValidFunc = asm["_jsonValidFunc"]; asm["_jsonValidFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__jsonValidFunc.apply(null, arguments);
	};

	var real__juliandayFunc = asm["_juliandayFunc"]; asm["_juliandayFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__juliandayFunc.apply(null, arguments);
	};

	var real__last_insert_rowid = asm["_last_insert_rowid"]; asm["_last_insert_rowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__last_insert_rowid.apply(null, arguments);
	};

	var real__last_valueFinalizeFunc = asm["_last_valueFinalizeFunc"]; asm["_last_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__last_valueFinalizeFunc.apply(null, arguments);
	};

	var real__last_valueInvFunc = asm["_last_valueInvFunc"]; asm["_last_valueInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__last_valueInvFunc.apply(null, arguments);
	};

	var real__last_valueStepFunc = asm["_last_valueStepFunc"]; asm["_last_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__last_valueStepFunc.apply(null, arguments);
	};

	var real__last_valueValueFunc = asm["_last_valueValueFunc"]; asm["_last_valueValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__last_valueValueFunc.apply(null, arguments);
	};

	var real__lengthFunc = asm["_lengthFunc"]; asm["_lengthFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__lengthFunc.apply(null, arguments);
	};

	var real__likeFunc = asm["_likeFunc"]; asm["_likeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__likeFunc.apply(null, arguments);
	};

	var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__llvm_bswap_i32.apply(null, arguments);
	};

	var real__llvm_ctpop_i64 = asm["_llvm_ctpop_i64"]; asm["_llvm_ctpop_i64"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__llvm_ctpop_i64.apply(null, arguments);
	};

	var real__lowerFunc = asm["_lowerFunc"]; asm["_lowerFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__lowerFunc.apply(null, arguments);
	};

	var real__lstat = asm["_lstat"]; asm["_lstat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__lstat.apply(null, arguments);
	};

	var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__malloc.apply(null, arguments);
	};

	var real__memalign = asm["_memalign"]; asm["_memalign"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memalign.apply(null, arguments);
	};

	var real__memjrnlClose = asm["_memjrnlClose"]; asm["_memjrnlClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlClose.apply(null, arguments);
	};

	var real__memjrnlFileSize = asm["_memjrnlFileSize"]; asm["_memjrnlFileSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlFileSize.apply(null, arguments);
	};

	var real__memjrnlRead = asm["_memjrnlRead"]; asm["_memjrnlRead"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlRead.apply(null, arguments);
	};

	var real__memjrnlSync = asm["_memjrnlSync"]; asm["_memjrnlSync"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlSync.apply(null, arguments);
	};

	var real__memjrnlTruncate = asm["_memjrnlTruncate"]; asm["_memjrnlTruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlTruncate.apply(null, arguments);
	};

	var real__memjrnlWrite = asm["_memjrnlWrite"]; asm["_memjrnlWrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memjrnlWrite.apply(null, arguments);
	};

	var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__memmove.apply(null, arguments);
	};

	var real__minMaxFinalize = asm["_minMaxFinalize"]; asm["_minMaxFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__minMaxFinalize.apply(null, arguments);
	};

	var real__minMaxValue = asm["_minMaxValue"]; asm["_minMaxValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__minMaxValue.apply(null, arguments);
	};

	var real__minmaxFunc = asm["_minmaxFunc"]; asm["_minmaxFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__minmaxFunc.apply(null, arguments);
	};

	var real__minmaxStep = asm["_minmaxStep"]; asm["_minmaxStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__minmaxStep.apply(null, arguments);
	};

	var real__mkdir = asm["_mkdir"]; asm["_mkdir"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__mkdir.apply(null, arguments);
	};

	var real__nocaseCollatingFunc = asm["_nocaseCollatingFunc"]; asm["_nocaseCollatingFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nocaseCollatingFunc.apply(null, arguments);
	};

	var real__nolockCheckReservedLock = asm["_nolockCheckReservedLock"]; asm["_nolockCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nolockCheckReservedLock.apply(null, arguments);
	};

	var real__nolockClose = asm["_nolockClose"]; asm["_nolockClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nolockClose.apply(null, arguments);
	};

	var real__nolockIoFinderImpl = asm["_nolockIoFinderImpl"]; asm["_nolockIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nolockIoFinderImpl.apply(null, arguments);
	};

	var real__nolockLock = asm["_nolockLock"]; asm["_nolockLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nolockLock.apply(null, arguments);
	};

	var real__nolockUnlock = asm["_nolockUnlock"]; asm["_nolockUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nolockUnlock.apply(null, arguments);
	};

	var real__noopStepFunc = asm["_noopStepFunc"]; asm["_noopStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__noopStepFunc.apply(null, arguments);
	};

	var real__noopValueFunc = asm["_noopValueFunc"]; asm["_noopValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__noopValueFunc.apply(null, arguments);
	};

	var real__nth_valueFinalizeFunc = asm["_nth_valueFinalizeFunc"]; asm["_nth_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nth_valueFinalizeFunc.apply(null, arguments);
	};

	var real__nth_valueStepFunc = asm["_nth_valueStepFunc"]; asm["_nth_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nth_valueStepFunc.apply(null, arguments);
	};

	var real__ntileInvFunc = asm["_ntileInvFunc"]; asm["_ntileInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ntileInvFunc.apply(null, arguments);
	};

	var real__ntileStepFunc = asm["_ntileStepFunc"]; asm["_ntileStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ntileStepFunc.apply(null, arguments);
	};

	var real__ntileValueFunc = asm["_ntileValueFunc"]; asm["_ntileValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__ntileValueFunc.apply(null, arguments);
	};

	var real__nullifFunc = asm["_nullifFunc"]; asm["_nullifFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__nullifFunc.apply(null, arguments);
	};

	var real__openDirectory = asm["_openDirectory"]; asm["_openDirectory"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__openDirectory.apply(null, arguments);
	};

	var real__pageReinit = asm["_pageReinit"]; asm["_pageReinit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pageReinit.apply(null, arguments);
	};

	var real__pagerStress = asm["_pagerStress"]; asm["_pagerStress"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pagerStress.apply(null, arguments);
	};

	var real__pagerUndoCallback = asm["_pagerUndoCallback"]; asm["_pagerUndoCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pagerUndoCallback.apply(null, arguments);
	};

	var real__pcache1Cachesize = asm["_pcache1Cachesize"]; asm["_pcache1Cachesize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Cachesize.apply(null, arguments);
	};

	var real__pcache1Create = asm["_pcache1Create"]; asm["_pcache1Create"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Create.apply(null, arguments);
	};

	var real__pcache1Destroy = asm["_pcache1Destroy"]; asm["_pcache1Destroy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Destroy.apply(null, arguments);
	};

	var real__pcache1Fetch = asm["_pcache1Fetch"]; asm["_pcache1Fetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Fetch.apply(null, arguments);
	};

	var real__pcache1Init = asm["_pcache1Init"]; asm["_pcache1Init"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Init.apply(null, arguments);
	};

	var real__pcache1Pagecount = asm["_pcache1Pagecount"]; asm["_pcache1Pagecount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Pagecount.apply(null, arguments);
	};

	var real__pcache1Rekey = asm["_pcache1Rekey"]; asm["_pcache1Rekey"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Rekey.apply(null, arguments);
	};

	var real__pcache1Shrink = asm["_pcache1Shrink"]; asm["_pcache1Shrink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Shrink.apply(null, arguments);
	};

	var real__pcache1Shutdown = asm["_pcache1Shutdown"]; asm["_pcache1Shutdown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Shutdown.apply(null, arguments);
	};

	var real__pcache1Truncate = asm["_pcache1Truncate"]; asm["_pcache1Truncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Truncate.apply(null, arguments);
	};

	var real__pcache1Unpin = asm["_pcache1Unpin"]; asm["_pcache1Unpin"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pcache1Unpin.apply(null, arguments);
	};

	var real__percentFinal = asm["_percentFinal"]; asm["_percentFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__percentFinal.apply(null, arguments);
	};

	var real__percentStep = asm["_percentStep"]; asm["_percentStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__percentStep.apply(null, arguments);
	};

	var real__percent_rankInvFunc = asm["_percent_rankInvFunc"]; asm["_percent_rankInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__percent_rankInvFunc.apply(null, arguments);
	};

	var real__percent_rankStepFunc = asm["_percent_rankStepFunc"]; asm["_percent_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__percent_rankStepFunc.apply(null, arguments);
	};

	var real__percent_rankValueFunc = asm["_percent_rankValueFunc"]; asm["_percent_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__percent_rankValueFunc.apply(null, arguments);
	};

	var real__posixIoFinderImpl = asm["_posixIoFinderImpl"]; asm["_posixIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__posixIoFinderImpl.apply(null, arguments);
	};

	var real__posixOpen = asm["_posixOpen"]; asm["_posixOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__posixOpen.apply(null, arguments);
	};

	var real__pragmaVtabBestIndex = asm["_pragmaVtabBestIndex"]; asm["_pragmaVtabBestIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabBestIndex.apply(null, arguments);
	};

	var real__pragmaVtabClose = asm["_pragmaVtabClose"]; asm["_pragmaVtabClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabClose.apply(null, arguments);
	};

	var real__pragmaVtabColumn = asm["_pragmaVtabColumn"]; asm["_pragmaVtabColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabColumn.apply(null, arguments);
	};

	var real__pragmaVtabConnect = asm["_pragmaVtabConnect"]; asm["_pragmaVtabConnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabConnect.apply(null, arguments);
	};

	var real__pragmaVtabDisconnect = asm["_pragmaVtabDisconnect"]; asm["_pragmaVtabDisconnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabDisconnect.apply(null, arguments);
	};

	var real__pragmaVtabEof = asm["_pragmaVtabEof"]; asm["_pragmaVtabEof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabEof.apply(null, arguments);
	};

	var real__pragmaVtabFilter = asm["_pragmaVtabFilter"]; asm["_pragmaVtabFilter"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabFilter.apply(null, arguments);
	};

	var real__pragmaVtabNext = asm["_pragmaVtabNext"]; asm["_pragmaVtabNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabNext.apply(null, arguments);
	};

	var real__pragmaVtabOpen = asm["_pragmaVtabOpen"]; asm["_pragmaVtabOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabOpen.apply(null, arguments);
	};

	var real__pragmaVtabRowid = asm["_pragmaVtabRowid"]; asm["_pragmaVtabRowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pragmaVtabRowid.apply(null, arguments);
	};

	var real__printfFunc = asm["_printfFunc"]; asm["_printfFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__printfFunc.apply(null, arguments);
	};

	var real__propagateConstantExprRewrite = asm["_propagateConstantExprRewrite"]; asm["_propagateConstantExprRewrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__propagateConstantExprRewrite.apply(null, arguments);
	};

	var real__pthread_cond_broadcast = asm["_pthread_cond_broadcast"]; asm["_pthread_cond_broadcast"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pthread_cond_broadcast.apply(null, arguments);
	};

	var real__pthread_mutex_lock = asm["_pthread_mutex_lock"]; asm["_pthread_mutex_lock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pthread_mutex_lock.apply(null, arguments);
	};

	var real__pthread_mutex_unlock = asm["_pthread_mutex_unlock"]; asm["_pthread_mutex_unlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__pthread_mutex_unlock.apply(null, arguments);
	};

	var real__quoteFunc = asm["_quoteFunc"]; asm["_quoteFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__quoteFunc.apply(null, arguments);
	};

	var real__randomBlob = asm["_randomBlob"]; asm["_randomBlob"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__randomBlob.apply(null, arguments);
	};

	var real__randomFunc = asm["_randomFunc"]; asm["_randomFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__randomFunc.apply(null, arguments);
	};

	var real__rankStepFunc = asm["_rankStepFunc"]; asm["_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__rankStepFunc.apply(null, arguments);
	};

	var real__rankValueFunc = asm["_rankValueFunc"]; asm["_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__rankValueFunc.apply(null, arguments);
	};

	var real__read = asm["_read"]; asm["_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__read.apply(null, arguments);
	};

	var real__readlink = asm["_readlink"]; asm["_readlink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__readlink.apply(null, arguments);
	};

	var real__recomputeColumnsUsedExpr = asm["_recomputeColumnsUsedExpr"]; asm["_recomputeColumnsUsedExpr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__recomputeColumnsUsedExpr.apply(null, arguments);
	};

	var real__renameColumnExprCb = asm["_renameColumnExprCb"]; asm["_renameColumnExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameColumnExprCb.apply(null, arguments);
	};

	var real__renameColumnFunc = asm["_renameColumnFunc"]; asm["_renameColumnFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameColumnFunc.apply(null, arguments);
	};

	var real__renameColumnSelectCb = asm["_renameColumnSelectCb"]; asm["_renameColumnSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameColumnSelectCb.apply(null, arguments);
	};

	var real__renameTableExprCb = asm["_renameTableExprCb"]; asm["_renameTableExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameTableExprCb.apply(null, arguments);
	};

	var real__renameTableFunc = asm["_renameTableFunc"]; asm["_renameTableFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameTableFunc.apply(null, arguments);
	};

	var real__renameTableSelectCb = asm["_renameTableSelectCb"]; asm["_renameTableSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameTableSelectCb.apply(null, arguments);
	};

	var real__renameTableTest = asm["_renameTableTest"]; asm["_renameTableTest"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameTableTest.apply(null, arguments);
	};

	var real__renameUnmapExprCb = asm["_renameUnmapExprCb"]; asm["_renameUnmapExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameUnmapExprCb.apply(null, arguments);
	};

	var real__renameUnmapSelectCb = asm["_renameUnmapSelectCb"]; asm["_renameUnmapSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__renameUnmapSelectCb.apply(null, arguments);
	};

	var real__replaceFunc = asm["_replaceFunc"]; asm["_replaceFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__replaceFunc.apply(null, arguments);
	};

	var real__resolveExprStep = asm["_resolveExprStep"]; asm["_resolveExprStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__resolveExprStep.apply(null, arguments);
	};

	var real__resolveRemoveWindowsCb = asm["_resolveRemoveWindowsCb"]; asm["_resolveRemoveWindowsCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__resolveRemoveWindowsCb.apply(null, arguments);
	};

	var real__resolveSelectStep = asm["_resolveSelectStep"]; asm["_resolveSelectStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__resolveSelectStep.apply(null, arguments);
	};

	var real__rmdir = asm["_rmdir"]; asm["_rmdir"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__rmdir.apply(null, arguments);
	};

	var real__roundFunc = asm["_roundFunc"]; asm["_roundFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__roundFunc.apply(null, arguments);
	};

	var real__row_numberStepFunc = asm["_row_numberStepFunc"]; asm["_row_numberStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__row_numberStepFunc.apply(null, arguments);
	};

	var real__row_numberValueFunc = asm["_row_numberValueFunc"]; asm["_row_numberValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__row_numberValueFunc.apply(null, arguments);
	};

	var real__rtrimCollFunc = asm["_rtrimCollFunc"]; asm["_rtrimCollFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__rtrimCollFunc.apply(null, arguments);
	};

	var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sbrk.apply(null, arguments);
	};

	var real__selectAddSubqueryTypeInfo = asm["_selectAddSubqueryTypeInfo"]; asm["_selectAddSubqueryTypeInfo"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectAddSubqueryTypeInfo.apply(null, arguments);
	};

	var real__selectExpander = asm["_selectExpander"]; asm["_selectExpander"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectExpander.apply(null, arguments);
	};

	var real__selectPopWith = asm["_selectPopWith"]; asm["_selectPopWith"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectPopWith.apply(null, arguments);
	};

	var real__selectSrcCount = asm["_selectSrcCount"]; asm["_selectSrcCount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectSrcCount.apply(null, arguments);
	};

	var real__selectWindowRewriteExprCb = asm["_selectWindowRewriteExprCb"]; asm["_selectWindowRewriteExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectWindowRewriteExprCb.apply(null, arguments);
	};

	var real__selectWindowRewriteSelectCb = asm["_selectWindowRewriteSelectCb"]; asm["_selectWindowRewriteSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__selectWindowRewriteSelectCb.apply(null, arguments);
	};

	var real__sn_write = asm["_sn_write"]; asm["_sn_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sn_write.apply(null, arguments);
	};

	var real__sourceidFunc = asm["_sourceidFunc"]; asm["_sourceidFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sourceidFunc.apply(null, arguments);
	};

	var real__sqlite3BtreeNext = asm["_sqlite3BtreeNext"]; asm["_sqlite3BtreeNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3BtreeNext.apply(null, arguments);
	};

	var real__sqlite3BtreePrevious = asm["_sqlite3BtreePrevious"]; asm["_sqlite3BtreePrevious"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3BtreePrevious.apply(null, arguments);
	};

	var real__sqlite3ExprIfFalse = asm["_sqlite3ExprIfFalse"]; asm["_sqlite3ExprIfFalse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3ExprIfFalse.apply(null, arguments);
	};

	var real__sqlite3ExprIfTrue = asm["_sqlite3ExprIfTrue"]; asm["_sqlite3ExprIfTrue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3ExprIfTrue.apply(null, arguments);
	};

	var real__sqlite3ExprWalkNoop = asm["_sqlite3ExprWalkNoop"]; asm["_sqlite3ExprWalkNoop"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3ExprWalkNoop.apply(null, arguments);
	};

	var real__sqlite3InitCallback = asm["_sqlite3InitCallback"]; asm["_sqlite3InitCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3InitCallback.apply(null, arguments);
	};

	var real__sqlite3InvalidFunction = asm["_sqlite3InvalidFunction"]; asm["_sqlite3InvalidFunction"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3InvalidFunction.apply(null, arguments);
	};

	var real__sqlite3Json1Init = asm["_sqlite3Json1Init"]; asm["_sqlite3Json1Init"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3Json1Init.apply(null, arguments);
	};

	var real__sqlite3MallocSize = asm["_sqlite3MallocSize"]; asm["_sqlite3MallocSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MallocSize.apply(null, arguments);
	};

	var real__sqlite3MemFree = asm["_sqlite3MemFree"]; asm["_sqlite3MemFree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemFree.apply(null, arguments);
	};

	var real__sqlite3MemInit = asm["_sqlite3MemInit"]; asm["_sqlite3MemInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemInit.apply(null, arguments);
	};

	var real__sqlite3MemMalloc = asm["_sqlite3MemMalloc"]; asm["_sqlite3MemMalloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemMalloc.apply(null, arguments);
	};

	var real__sqlite3MemRealloc = asm["_sqlite3MemRealloc"]; asm["_sqlite3MemRealloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemRealloc.apply(null, arguments);
	};

	var real__sqlite3MemRoundup = asm["_sqlite3MemRoundup"]; asm["_sqlite3MemRoundup"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemRoundup.apply(null, arguments);
	};

	var real__sqlite3MemShutdown = asm["_sqlite3MemShutdown"]; asm["_sqlite3MemShutdown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemShutdown.apply(null, arguments);
	};

	var real__sqlite3MemSize = asm["_sqlite3MemSize"]; asm["_sqlite3MemSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3MemSize.apply(null, arguments);
	};

	var real__sqlite3RowSetDelete = asm["_sqlite3RowSetDelete"]; asm["_sqlite3RowSetDelete"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3RowSetDelete.apply(null, arguments);
	};

	var real__sqlite3SchemaClear = asm["_sqlite3SchemaClear"]; asm["_sqlite3SchemaClear"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3SchemaClear.apply(null, arguments);
	};

	var real__sqlite3SelectWalkFail = asm["_sqlite3SelectWalkFail"]; asm["_sqlite3SelectWalkFail"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3SelectWalkFail.apply(null, arguments);
	};

	var real__sqlite3SelectWalkNoop = asm["_sqlite3SelectWalkNoop"]; asm["_sqlite3SelectWalkNoop"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3SelectWalkNoop.apply(null, arguments);
	};

	var real__sqlite3TestExtInit = asm["_sqlite3TestExtInit"]; asm["_sqlite3TestExtInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3TestExtInit.apply(null, arguments);
	};

	var real__sqlite3VdbeFrameMemDel = asm["_sqlite3VdbeFrameMemDel"]; asm["_sqlite3VdbeFrameMemDel"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3VdbeFrameMemDel.apply(null, arguments);
	};

	var real__sqlite3VdbeRecordCompare = asm["_sqlite3VdbeRecordCompare"]; asm["_sqlite3VdbeRecordCompare"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3VdbeRecordCompare.apply(null, arguments);
	};

	var real__sqlite3WalDefaultHook = asm["_sqlite3WalDefaultHook"]; asm["_sqlite3WalDefaultHook"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3WalDefaultHook.apply(null, arguments);
	};

	var real__sqlite3WalkerDepthDecrease = asm["_sqlite3WalkerDepthDecrease"]; asm["_sqlite3WalkerDepthDecrease"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3WalkerDepthDecrease.apply(null, arguments);
	};

	var real__sqlite3WalkerDepthIncrease = asm["_sqlite3WalkerDepthIncrease"]; asm["_sqlite3WalkerDepthIncrease"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3WalkerDepthIncrease.apply(null, arguments);
	};

	var real__sqlite3WindowExtraAggFuncDepth = asm["_sqlite3WindowExtraAggFuncDepth"]; asm["_sqlite3WindowExtraAggFuncDepth"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3WindowExtraAggFuncDepth.apply(null, arguments);
	};

	var real__sqlite3_free = asm["_sqlite3_free"]; asm["_sqlite3_free"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqlite3_free.apply(null, arguments);
	};

	var real__sqliteDefaultBusyCallback = asm["_sqliteDefaultBusyCallback"]; asm["_sqliteDefaultBusyCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sqliteDefaultBusyCallback.apply(null, arguments);
	};

	var real__stat = asm["_stat"]; asm["_stat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__stat.apply(null, arguments);
	};

	var real__statAccumDestructor = asm["_statAccumDestructor"]; asm["_statAccumDestructor"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__statAccumDestructor.apply(null, arguments);
	};

	var real__statGet = asm["_statGet"]; asm["_statGet"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__statGet.apply(null, arguments);
	};

	var real__statInit = asm["_statInit"]; asm["_statInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__statInit.apply(null, arguments);
	};

	var real__statPush = asm["_statPush"]; asm["_statPush"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__statPush.apply(null, arguments);
	};

	var real__strftimeFunc = asm["_strftimeFunc"]; asm["_strftimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__strftimeFunc.apply(null, arguments);
	};

	var real__substrFunc = asm["_substrFunc"]; asm["_substrFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__substrFunc.apply(null, arguments);
	};

	var real__sumFinalize = asm["_sumFinalize"]; asm["_sumFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sumFinalize.apply(null, arguments);
	};

	var real__sumInverse = asm["_sumInverse"]; asm["_sumInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sumInverse.apply(null, arguments);
	};

	var real__sumStep = asm["_sumStep"]; asm["_sumStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__sumStep.apply(null, arguments);
	};

	var real__timeFunc = asm["_timeFunc"]; asm["_timeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__timeFunc.apply(null, arguments);
	};

	var real__totalFinalize = asm["_totalFinalize"]; asm["_totalFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__totalFinalize.apply(null, arguments);
	};

	var real__total_changes = asm["_total_changes"]; asm["_total_changes"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__total_changes.apply(null, arguments);
	};

	var real__trace_processor_compute_metric = asm["_trace_processor_compute_metric"]; asm["_trace_processor_compute_metric"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_compute_metric.apply(null, arguments);
	};

	var real__trace_processor_disable_and_read_metatrace = asm["_trace_processor_disable_and_read_metatrace"]; asm["_trace_processor_disable_and_read_metatrace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_disable_and_read_metatrace.apply(null, arguments);
	};

	var real__trace_processor_enable_metatrace = asm["_trace_processor_enable_metatrace"]; asm["_trace_processor_enable_metatrace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_enable_metatrace.apply(null, arguments);
	};

	var real__trace_processor_get_metric_descriptors = asm["_trace_processor_get_metric_descriptors"]; asm["_trace_processor_get_metric_descriptors"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_get_metric_descriptors.apply(null, arguments);
	};

	var real__trace_processor_notify_eof = asm["_trace_processor_notify_eof"]; asm["_trace_processor_notify_eof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_notify_eof.apply(null, arguments);
	};

	var real__trace_processor_parse = asm["_trace_processor_parse"]; asm["_trace_processor_parse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_parse.apply(null, arguments);
	};

	var real__trace_processor_raw_query = asm["_trace_processor_raw_query"]; asm["_trace_processor_raw_query"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trace_processor_raw_query.apply(null, arguments);
	};

	var real__trimFunc = asm["_trimFunc"]; asm["_trimFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__trimFunc.apply(null, arguments);
	};

	var real__typeofFunc = asm["_typeofFunc"]; asm["_typeofFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__typeofFunc.apply(null, arguments);
	};

	var real__unicodeFunc = asm["_unicodeFunc"]; asm["_unicodeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unicodeFunc.apply(null, arguments);
	};

	var real__unixAccess = asm["_unixAccess"]; asm["_unixAccess"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixAccess.apply(null, arguments);
	};

	var real__unixCheckReservedLock = asm["_unixCheckReservedLock"]; asm["_unixCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixCheckReservedLock.apply(null, arguments);
	};

	var real__unixClose = asm["_unixClose"]; asm["_unixClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixClose.apply(null, arguments);
	};

	var real__unixCurrentTimeInt64 = asm["_unixCurrentTimeInt64"]; asm["_unixCurrentTimeInt64"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixCurrentTimeInt64.apply(null, arguments);
	};

	var real__unixDelete = asm["_unixDelete"]; asm["_unixDelete"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixDelete.apply(null, arguments);
	};

	var real__unixDeviceCharacteristics = asm["_unixDeviceCharacteristics"]; asm["_unixDeviceCharacteristics"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixDeviceCharacteristics.apply(null, arguments);
	};

	var real__unixFetch = asm["_unixFetch"]; asm["_unixFetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixFetch.apply(null, arguments);
	};

	var real__unixFileControl = asm["_unixFileControl"]; asm["_unixFileControl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixFileControl.apply(null, arguments);
	};

	var real__unixFileSize = asm["_unixFileSize"]; asm["_unixFileSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixFileSize.apply(null, arguments);
	};

	var real__unixFullPathname = asm["_unixFullPathname"]; asm["_unixFullPathname"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixFullPathname.apply(null, arguments);
	};

	var real__unixGetLastError = asm["_unixGetLastError"]; asm["_unixGetLastError"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixGetLastError.apply(null, arguments);
	};

	var real__unixGetSystemCall = asm["_unixGetSystemCall"]; asm["_unixGetSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixGetSystemCall.apply(null, arguments);
	};

	var real__unixGetpagesize = asm["_unixGetpagesize"]; asm["_unixGetpagesize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixGetpagesize.apply(null, arguments);
	};

	var real__unixLock = asm["_unixLock"]; asm["_unixLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixLock.apply(null, arguments);
	};

	var real__unixNextSystemCall = asm["_unixNextSystemCall"]; asm["_unixNextSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixNextSystemCall.apply(null, arguments);
	};

	var real__unixOpen = asm["_unixOpen"]; asm["_unixOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixOpen.apply(null, arguments);
	};

	var real__unixRandomness = asm["_unixRandomness"]; asm["_unixRandomness"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixRandomness.apply(null, arguments);
	};

	var real__unixRead = asm["_unixRead"]; asm["_unixRead"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixRead.apply(null, arguments);
	};

	var real__unixSectorSize = asm["_unixSectorSize"]; asm["_unixSectorSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixSectorSize.apply(null, arguments);
	};

	var real__unixSetSystemCall = asm["_unixSetSystemCall"]; asm["_unixSetSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixSetSystemCall.apply(null, arguments);
	};

	var real__unixShmBarrier = asm["_unixShmBarrier"]; asm["_unixShmBarrier"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixShmBarrier.apply(null, arguments);
	};

	var real__unixShmLock = asm["_unixShmLock"]; asm["_unixShmLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixShmLock.apply(null, arguments);
	};

	var real__unixShmMap = asm["_unixShmMap"]; asm["_unixShmMap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixShmMap.apply(null, arguments);
	};

	var real__unixShmUnmap = asm["_unixShmUnmap"]; asm["_unixShmUnmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixShmUnmap.apply(null, arguments);
	};

	var real__unixSleep = asm["_unixSleep"]; asm["_unixSleep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixSleep.apply(null, arguments);
	};

	var real__unixSync = asm["_unixSync"]; asm["_unixSync"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixSync.apply(null, arguments);
	};

	var real__unixTruncate = asm["_unixTruncate"]; asm["_unixTruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixTruncate.apply(null, arguments);
	};

	var real__unixUnfetch = asm["_unixUnfetch"]; asm["_unixUnfetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixUnfetch.apply(null, arguments);
	};

	var real__unixUnlock = asm["_unixUnlock"]; asm["_unixUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixUnlock.apply(null, arguments);
	};

	var real__unixWrite = asm["_unixWrite"]; asm["_unixWrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unixWrite.apply(null, arguments);
	};

	var real__unlink = asm["_unlink"]; asm["_unlink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__unlink.apply(null, arguments);
	};

	var real__upperFunc = asm["_upperFunc"]; asm["_upperFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__upperFunc.apply(null, arguments);
	};

	var real__vdbeRecordCompareInt = asm["_vdbeRecordCompareInt"]; asm["_vdbeRecordCompareInt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__vdbeRecordCompareInt.apply(null, arguments);
	};

	var real__vdbeRecordCompareString = asm["_vdbeRecordCompareString"]; asm["_vdbeRecordCompareString"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__vdbeRecordCompareString.apply(null, arguments);
	};

	var real__vdbeSorterCompare = asm["_vdbeSorterCompare"]; asm["_vdbeSorterCompare"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__vdbeSorterCompare.apply(null, arguments);
	};

	var real__vdbeSorterCompareInt = asm["_vdbeSorterCompareInt"]; asm["_vdbeSorterCompareInt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__vdbeSorterCompareInt.apply(null, arguments);
	};

	var real__vdbeSorterCompareText = asm["_vdbeSorterCompareText"]; asm["_vdbeSorterCompareText"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__vdbeSorterCompareText.apply(null, arguments);
	};

	var real__versionFunc = asm["_versionFunc"]; asm["_versionFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__versionFunc.apply(null, arguments);
	};

	var real__whereIndexExprTransColumn = asm["_whereIndexExprTransColumn"]; asm["_whereIndexExprTransColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__whereIndexExprTransColumn.apply(null, arguments);
	};

	var real__whereIndexExprTransNode = asm["_whereIndexExprTransNode"]; asm["_whereIndexExprTransNode"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__whereIndexExprTransNode.apply(null, arguments);
	};

	var real__write = asm["_write"]; asm["_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__write.apply(null, arguments);
	};

	var real__zcalloc = asm["_zcalloc"]; asm["_zcalloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__zcalloc.apply(null, arguments);
	};

	var real__zcfree = asm["_zcfree"]; asm["_zcfree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__zcfree.apply(null, arguments);
	};

	var real__zeroblobFunc = asm["_zeroblobFunc"]; asm["_zeroblobFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real__zeroblobFunc.apply(null, arguments);
	};

	var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_establishStackSpace.apply(null, arguments);
	};

	var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_getTempRet0.apply(null, arguments);
	};

	var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_setTempRet0.apply(null, arguments);
	};

	var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_setThrew.apply(null, arguments);
	};

	var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_stackAlloc.apply(null, arguments);
	};

	var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_stackRestore.apply(null, arguments);
	};

	var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return real_stackSave.apply(null, arguments);
	};
	Module["asm"] = asm;
	var _Initialize = Module["_Initialize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_Initialize"].apply(null, arguments) };
	var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__GLOBAL__I_000101"].apply(null, arguments) };
	var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__GLOBAL__sub_I_iostream_cpp"].apply(null, arguments) };
	var __GLOBAL__sub_I_json_value_cpp = Module["__GLOBAL__sub_I_json_value_cpp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__GLOBAL__sub_I_json_value_cpp"].apply(null, arguments) };
	var __ZL25default_terminate_handlerv = Module["__ZL25default_terminate_handlerv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZL25default_terminate_handlerv"].apply(null, arguments) };
	var __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev = Module["__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev"].apply(null, arguments) };
	var __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv = Module["__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv"].apply(null, arguments) };
	var __ZN10__cxxabiv116__shim_type_infoD2Ev = Module["__ZN10__cxxabiv116__shim_type_infoD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv116__shim_type_infoD2Ev"].apply(null, arguments) };
	var __ZN10__cxxabiv117__class_type_infoD0Ev = Module["__ZN10__cxxabiv117__class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv117__class_type_infoD0Ev"].apply(null, arguments) };
	var __ZN10__cxxabiv120__si_class_type_infoD0Ev = Module["__ZN10__cxxabiv120__si_class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv120__si_class_type_infoD0Ev"].apply(null, arguments) };
	var __ZN10__cxxabiv121__vmi_class_type_infoD0Ev = Module["__ZN10__cxxabiv121__vmi_class_type_infoD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN10__cxxabiv121__vmi_class_type_infoD0Ev"].apply(null, arguments) };
	var __ZN4Json10CharReader7FactoryD0Ev = Module["__ZN4Json10CharReader7FactoryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json10CharReader7FactoryD0Ev"].apply(null, arguments) };
	var __ZN4Json10CharReader7FactoryD2Ev = Module["__ZN4Json10CharReader7FactoryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json10CharReader7FactoryD2Ev"].apply(null, arguments) };
	var __ZN4Json10CharReaderD0Ev = Module["__ZN4Json10CharReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json10CharReaderD0Ev"].apply(null, arguments) };
	var __ZN4Json10CharReaderD2Ev = Module["__ZN4Json10CharReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json10CharReaderD2Ev"].apply(null, arguments) };
	var __ZN4Json12StreamWriter7FactoryD0Ev = Module["__ZN4Json12StreamWriter7FactoryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json12StreamWriter7FactoryD0Ev"].apply(null, arguments) };
	var __ZN4Json12StreamWriter7FactoryD2Ev = Module["__ZN4Json12StreamWriter7FactoryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json12StreamWriter7FactoryD2Ev"].apply(null, arguments) };
	var __ZN4Json12StreamWriterD0Ev = Module["__ZN4Json12StreamWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json12StreamWriterD0Ev"].apply(null, arguments) };
	var __ZN4Json12StreamWriterD2Ev = Module["__ZN4Json12StreamWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json12StreamWriterD2Ev"].apply(null, arguments) };
	var __ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = Module["__ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json13OurCharReader5parseEPKcS2_PNS_5ValueEPNSt3__212basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZN4Json13OurCharReaderD0Ev = Module["__ZN4Json13OurCharReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json13OurCharReaderD0Ev"].apply(null, arguments) };
	var __ZN4Json13OurCharReaderD2Ev = Module["__ZN4Json13OurCharReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json13OurCharReaderD2Ev"].apply(null, arguments) };
	var __ZN4Json17CharReaderBuilderD0Ev = Module["__ZN4Json17CharReaderBuilderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json17CharReaderBuilderD0Ev"].apply(null, arguments) };
	var __ZN4Json17CharReaderBuilderD2Ev = Module["__ZN4Json17CharReaderBuilderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json17CharReaderBuilderD2Ev"].apply(null, arguments) };
	var __ZN4Json19StreamWriterBuilderD0Ev = Module["__ZN4Json19StreamWriterBuilderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json19StreamWriterBuilderD0Ev"].apply(null, arguments) };
	var __ZN4Json19StreamWriterBuilderD2Ev = Module["__ZN4Json19StreamWriterBuilderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json19StreamWriterBuilderD2Ev"].apply(null, arguments) };
	var __ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE = Module["__ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json23BuiltStyledStreamWriter5writeERKNS_5ValueEPNSt3__213basic_ostreamIcNS4_11char_traitsIcEEEE"].apply(null, arguments) };
	var __ZN4Json23BuiltStyledStreamWriterD0Ev = Module["__ZN4Json23BuiltStyledStreamWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json23BuiltStyledStreamWriterD0Ev"].apply(null, arguments) };
	var __ZN4Json23BuiltStyledStreamWriterD2Ev = Module["__ZN4Json23BuiltStyledStreamWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN4Json23BuiltStyledStreamWriterD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable12CreateCursorEv = Module["__ZN8perfetto15trace_processor10StatsTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable12CreateCursorEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = Module["__ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv = Module["__ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6Cursor3EofEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv = Module["__ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6Cursor4NextEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti = Module["__ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6Cursor6ColumnEP15sqlite3_contexti"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = Module["__ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor10StatsTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor10StatsTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = Module["__ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTableD0Ev = Module["__ZN8perfetto15trace_processor10StatsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor10StatsTableD2Ev = Module["__ZN8perfetto15trace_processor10StatsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor10StatsTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE = Module["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserter6AddArgENS0_10StringPool2IdES4_NS0_8VariadicENS0_17GlobalArgsTracker12UpdatePolicyE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev = Module["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev = Module["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTracker13BoundInserterD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTracker5FlushEv = Module["__ZN8perfetto15trace_processor11ArgsTracker5FlushEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTracker5FlushEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTrackerD0Ev = Module["__ZN8perfetto15trace_processor11ArgsTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11ArgsTrackerD2Ev = Module["__ZN8perfetto15trace_processor11ArgsTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11ArgsTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb = Module["__ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11FlowTracker3EndENS0_6tables10TrackTable9DefinedIdEybb"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy = Module["__ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11FlowTracker4StepENS0_6tables10TrackTable9DefinedIdEy"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy = Module["__ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11FlowTracker5BeginENS0_6tables10TrackTable9DefinedIdEy"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11FlowTrackerD0Ev = Module["__ZN8perfetto15trace_processor11FlowTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11FlowTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11FlowTrackerD2Ev = Module["__ZN8perfetto15trace_processor11FlowTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11FlowTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11JsonTrackerD0Ev = Module["__ZN8perfetto15trace_processor11JsonTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11JsonTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11JsonTrackerD2Ev = Module["__ZN8perfetto15trace_processor11JsonTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11JsonTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv = Module["__ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx = Module["__ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable6Cursor5RowIdEPx"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx = Module["__ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTable6UpdateEiPP13sqlite3_valuePx"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTableD0Ev = Module["__ZN8perfetto15trace_processor11SqliteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11SqliteTableD2Ev = Module["__ZN8perfetto15trace_processor11SqliteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11SqliteTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11TraceParserD0Ev = Module["__ZN8perfetto15trace_processor11TraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11TraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor11TraceParserD2Ev = Module["__ZN8perfetto15trace_processor11TraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor11TraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12ClockTrackerD0Ev = Module["__ZN8perfetto15trace_processor12ClockTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12ClockTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12ClockTrackerD2Ev = Module["__ZN8perfetto15trace_processor12ClockTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12ClockTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12DestructibleD0Ev = Module["__ZN8perfetto15trace_processor12DestructibleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12DestructibleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12DestructibleD2Ev = Module["__ZN8perfetto15trace_processor12DestructibleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12DestructibleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE = Module["__ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12EventTracker11PushCounterExdNS0_6tables10TrackTable9DefinedIdE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb = Module["__ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12EventTracker11PushInstantExNS0_10StringPool2IdExNS0_7RefTypeEb"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj = Module["__ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12EventTracker27PushProcessCounterForThreadExdNS0_10StringPool2IdEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12EventTrackerD0Ev = Module["__ZN8perfetto15trace_processor12EventTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12EventTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12EventTrackerD2Ev = Module["__ZN8perfetto15trace_processor12EventTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12EventTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12FtraceModule17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12FtraceModuleD0Ev = Module["__ZN8perfetto15trace_processor12FtraceModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12FtraceModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12FtraceModuleD2Ev = Module["__ZN8perfetto15trace_processor12FtraceModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12FtraceModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = Module["__ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12SliceTracker3EndExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = Module["__ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12SliceTracker5BeginExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_NSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE = Module["__ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12SliceTracker6ScopedExNS0_6tables10TrackTable9DefinedIdENS0_10StringPool2IdES6_xNSt3__28functionIFvPNS0_11ArgsTracker13BoundInserterEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12SliceTrackerD0Ev = Module["__ZN8perfetto15trace_processor12SliceTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12SliceTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12SliceTrackerD2Ev = Module["__ZN8perfetto15trace_processor12SliceTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12SliceTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE = Module["__ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12TraceStorage12InternStringENS_4base10StringViewE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12TraceStorageD0Ev = Module["__ZN8perfetto15trace_processor12TraceStorageD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12TraceStorageD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12TraceStorageD2Ev = Module["__ZN8perfetto15trace_processor12TraceStorageD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12TraceStorageD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExportJsonEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_110ExtractArgEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_115LastNonNullStepEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullFinalEP15sqlite3_context"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_116LastNonNullValueEP15sqlite3_context"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_116ValueAtMaxTsStepEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_116sqlite_str_splitEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_117ValueAtMaxTsFinalEP15sqlite3_context"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_118LastNonNullInverseEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_14HashEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_17isspaceEh"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor12_GLOBAL__N_18DemangleEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13BinderTrackerD0Ev = Module["__ZN8perfetto15trace_processor13BinderTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13BinderTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13BinderTrackerD2Ev = Module["__ZN8perfetto15trace_processor13BinderTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13BinderTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv = Module["__ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable12CreateCursorEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable17ModifyConstraintsEPNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable21DynamicTableGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = Module["__ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv = Module["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor3EofEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv = Module["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor4NextEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti = Module["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6ColumnEP15sqlite3_contexti"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = Module["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = Module["__ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTableD0Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13DbSqliteTableD2Ev = Module["__ZN8perfetto15trace_processor13DbSqliteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13DbSqliteTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13ProfileModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13ProfileModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13ProfileModuleD0Ev = Module["__ZN8perfetto15trace_processor13ProfileModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13ProfileModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13ProfileModuleD2Ev = Module["__ZN8perfetto15trace_processor13ProfileModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13ProfileModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv = Module["__ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable12CreateCursorEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = Module["__ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv = Module["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor3EofEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv = Module["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor4NextEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti = Module["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6ColumnEP15sqlite3_contexti"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = Module["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = Module["__ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTableD0Ev = Module["__ZN8perfetto15trace_processor13SqlStatsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor13SqlStatsTableD2Ev = Module["__ZN8perfetto15trace_processor13SqlStatsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor13SqlStatsTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NinjaLogParser15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NinjaLogParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NinjaLogParserD0Ev = Module["__ZN8perfetto15trace_processor14NinjaLogParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NinjaLogParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NinjaLogParserD2Ev = Module["__ZN8perfetto15trace_processor14NinjaLogParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NinjaLogParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev = Module["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev = Module["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorINS0_10StringPool2IdEED2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIdED0Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIdED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIdED0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIdED2Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIdED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIdED2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIiED0Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIiED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIiED0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIiED2Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIiED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIiED2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIjED0Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIjED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIjED0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIjED2Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIjED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIjED2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIxED0Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIxED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIxED0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14NullableVectorIxED2Ev = Module["__ZN8perfetto15trace_processor14NullableVectorIxED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14NullableVectorIxED2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj = Module["__ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker12UpdateThreadEjj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE = Module["__ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker16UpdateThreadNameEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj = Module["__ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker18GetOrCreateProcessEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_ = Module["__ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker18SetProcessMetadataEjNS_4base8OptionalIjEENS2_10StringViewES5_"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE = Module["__ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker21SetProcessNameIfUnsetEjNS0_10StringPool2IdE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE = Module["__ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTracker22UpdateThreadNameByUtidEjNS0_10StringPool2IdENS0_18ThreadNamePriorityE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTrackerD0Ev = Module["__ZN8perfetto15trace_processor14ProcessTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14ProcessTrackerD2Ev = Module["__ZN8perfetto15trace_processor14ProcessTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14ProcessTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SqliteRawTableD0Ev = Module["__ZN8perfetto15trace_processor14SqliteRawTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SqliteRawTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SqliteRawTableD2Ev = Module["__ZN8perfetto15trace_processor14SqliteRawTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SqliteRawTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SyscallTrackerD0Ev = Module["__ZN8perfetto15trace_processor14SyscallTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SyscallTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SyscallTrackerD2Ev = Module["__ZN8perfetto15trace_processor14SyscallTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SyscallTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SystraceParserD0Ev = Module["__ZN8perfetto15trace_processor14SystraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SystraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14SystraceParserD2Ev = Module["__ZN8perfetto15trace_processor14SystraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14SystraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14TraceProcessorD0Ev = Module["__ZN8perfetto15trace_processor14TraceProcessorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14TraceProcessorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor14TraceProcessorD2Ev = Module["__ZN8perfetto15trace_processor14TraceProcessorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor14TraceProcessorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15GzipTraceParser15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15GzipTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15GzipTraceParserD0Ev = Module["__ZN8perfetto15trace_processor15GzipTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15GzipTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15GzipTraceParserD2Ev = Module["__ZN8perfetto15trace_processor15GzipTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15GzipTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15HeapGraphModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15HeapGraphModule15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15HeapGraphModuleD0Ev = Module["__ZN8perfetto15trace_processor15HeapGraphModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15HeapGraphModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15HeapGraphModuleD2Ev = Module["__ZN8perfetto15trace_processor15HeapGraphModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15HeapGraphModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15JsonTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15JsonTraceParserD0Ev = Module["__ZN8perfetto15trace_processor15JsonTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15JsonTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15JsonTraceParserD2Ev = Module["__ZN8perfetto15trace_processor15JsonTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15JsonTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev = Module["__ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15macros_internal10MacroTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev = Module["__ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor15macros_internal10MacroTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16FtraceModuleImpl11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16FtraceModuleImpl14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16FtraceModuleImpl17ParseFtracePacketEjRKNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16FtraceModuleImplD0Ev = Module["__ZN8perfetto15trace_processor16FtraceModuleImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16FtraceModuleImplD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16FtraceModuleImplD2Ev = Module["__ZN8perfetto15trace_processor16FtraceModuleImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16FtraceModuleImplD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev = Module["__ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16HeapGraphTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev = Module["__ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16HeapGraphTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceParserD0Ev = Module["__ZN8perfetto15trace_processor16ProtoTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceParserD2Ev = Module["__ZN8perfetto15trace_processor16ProtoTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceReader15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceReader5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev = Module["__ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceReaderD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev = Module["__ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16ProtoTraceReaderD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16TrackEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16TrackEventModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16TrackEventModuleD0Ev = Module["__ZN8perfetto15trace_processor16TrackEventModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16TrackEventModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor16TrackEventModuleD2Ev = Module["__ZN8perfetto15trace_processor16TrackEventModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor16TrackEventModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i = Module["__ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor17SchedEventTracker15PushSchedSwitchEjxjNS_4base10StringViewEixjS3_i"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor17SchedEventTrackerD0Ev = Module["__ZN8perfetto15trace_processor17SchedEventTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor17SchedEventTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor17SchedEventTrackerD2Ev = Module["__ZN8perfetto15trace_processor17SchedEventTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor17SchedEventTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev = Module["__ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor17SystemInfoTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev = Module["__ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor17SystemInfoTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev = Module["__ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18ChunkedTraceReaderD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev = Module["__ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18ChunkedTraceReaderD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18FuchsiaTraceParser16ParseTracePacketExNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE = Module["__ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18FuchsiaTraceParser17ParseFtracePacketEjxNS0_21TimestampedTracePieceE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev = Module["__ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18FuchsiaTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev = Module["__ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18FuchsiaTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18JsonTraceTokenizer15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18JsonTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev = Module["__ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18JsonTraceTokenizerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev = Module["__ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18JsonTraceTokenizerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18NullableVectorBaseD0Ev = Module["__ZN8perfetto15trace_processor18NullableVectorBaseD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18NullableVectorBaseD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18NullableVectorBaseD2Ev = Module["__ZN8perfetto15trace_processor18NullableVectorBaseD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18NullableVectorBaseD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18SystemProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18SystemProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18SystemProbesModuleD0Ev = Module["__ZN8perfetto15trace_processor18SystemProbesModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18SystemProbesModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18SystemProbesModuleD2Ev = Module["__ZN8perfetto15trace_processor18SystemProbesModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18SystemProbesModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl12ExecuteQueryERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEx"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl13ComputeMetricERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_IhNS7_IhEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl14InterruptQueryEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl14RegisterMetricERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl15EnableMetatraceEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_ = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl17ComputeMetricTextERKNSt3__26vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEENS0_14TraceProcessor18MetricResultFormatEPS9_"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl19GetCurrentTraceNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl19SetCurrentTraceNameERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl20GetMetricDescriptorsEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl20RestoreInitialTablesEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNSt3__26vectorIhNS2_9allocatorIhEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImplD0Ev = Module["__ZN8perfetto15trace_processor18TraceProcessorImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImplD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor18TraceProcessorImplD2Ev = Module["__ZN8perfetto15trace_processor18TraceProcessorImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor18TraceProcessorImplD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19AndroidProbesModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19AndroidProbesModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE = Module["__ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19AndroidProbesModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev = Module["__ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19AndroidProbesModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev = Module["__ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19AndroidProbesModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19GraphicsEventModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev = Module["__ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19GraphicsEventModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev = Module["__ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19GraphicsEventModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj = Module["__ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModule11ParsePacketERKNS_6protos6pbzero19TracePacket_DecoderERKNS0_21TimestampedTracePieceEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj = Module["__ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModule14TokenizePacketERKNS_6protos6pbzero19TracePacket_DecoderEPNS0_13TraceBlobViewExPNS0_19PacketSequenceStateEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModule15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE = Module["__ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModule16ParseTraceConfigERKNS_6protos6pbzero19TraceConfig_DecoderE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev = Module["__ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModuleD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev = Module["__ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19ProtoImporterModuleD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19SystraceTraceParser15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19SystraceTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19SystraceTraceParserD0Ev = Module["__ZN8perfetto15trace_processor19SystraceTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19SystraceTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19SystraceTraceParserD2Ev = Module["__ZN8perfetto15trace_processor19SystraceTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19SystraceTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv = Module["__ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable12CreateCursorEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable17ModifyConstraintsEPNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = Module["__ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor3EofEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor4NextEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6ColumnEP15sqlite3_contexti"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx = Module["__ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable6UpdateEiPP13sqlite3_valuePx"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = Module["__ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTableD0Ev = Module["__ZN8perfetto15trace_processor19WindowOperatorTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor19WindowOperatorTableD2Ev = Module["__ZN8perfetto15trace_processor19WindowOperatorTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor19WindowOperatorTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev = Module["__ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20AndroidProbesTrackerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev = Module["__ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20AndroidProbesTrackerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev = Module["__ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev = Module["__ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor20ThreadStateGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21ForwardingTraceParser15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21ForwardingTraceParser5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev = Module["__ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21ForwardingTraceParserD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev = Module["__ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21ForwardingTraceParserD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizer5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev = Module["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev = Module["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21FuchsiaTraceTokenizerD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12CreateCursorEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable4InitEiPKPKcPNS0_11SqliteTable6SchemaE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable5QueryD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor3EofEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor4NextEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6ColumnEP15sqlite3_contexti"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6Cursor6FilterERKNS0_16QueryConstraintsEPP13sqlite3_valueNS0_11SqliteTable6Cursor13FilterHistoryE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable6CursorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTable9BestIndexERKNS0_16QueryConstraintsEPNS0_11SqliteTable13BestIndexInfoE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev = Module["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21SpanJoinOperatorTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x = Module["__ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21TimestampedTracePiece7CompareERKS1_x"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev = Module["__ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21TraceProcessorStorageD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev = Module["__ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor21TraceProcessorStorageD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev = Module["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev = Module["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22AncestorSliceGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev = Module["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev = Module["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22ConnectedFlowGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev = Module["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev = Module["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor22DescribeSliceGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev = Module["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev = Module["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor24DescendantSliceGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev = Module["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev = Module["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25ProfilePacketInternLookupD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv = Module["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25TraceProcessorStorageImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev = Module["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev = Module["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor25TraceProcessorStorageImplD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev = Module["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev = Module["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor27SequenceStackProfileTracker12InternLookupD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev = Module["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor30ExperimentalSchedUpidGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev = Module["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalCounterDurGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev = Module["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor31ExperimentalFlamegraphGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12ComputeTableERKNSt3__26vectorINS0_10ConstraintENS2_9allocatorIS4_EEEERKNS3_INS0_5OrderENS5_ISA_EEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator12CreateSchemaEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator16EstimateRowCountEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator19ValidateConstraintsERKNS0_16QueryConstraintsE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGenerator9TableNameEv"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev = Module["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor32ExperimentalSliceLayoutGeneratorD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor4json12OutputWriterD0Ev = Module["__ZN8perfetto15trace_processor4json12OutputWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor4json12OutputWriterD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor4json12OutputWriterD2Ev = Module["__ZN8perfetto15trace_processor4json12OutputWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor4json12OutputWriterD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = Module["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriter12AppendStringERKNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev = Module["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev = Module["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor4json12_GLOBAL__N_110FileWriterD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor5TableD0Ev = Module["__ZN8perfetto15trace_processor5TableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor5TableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor5TableD2Ev = Module["__ZN8perfetto15trace_processor5TableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor5TableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables10SliceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables10SliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables10SliceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables10SliceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables10SliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables10SliceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables10TrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables10TrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables10TrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables10TrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables10TrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables10TrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables11SymbolTableD0Ev = Module["__ZN8perfetto15trace_processor6tables11SymbolTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables11SymbolTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables11SymbolTableD2Ev = Module["__ZN8perfetto15trace_processor6tables11SymbolTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables11SymbolTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables11ThreadTableD0Ev = Module["__ZN8perfetto15trace_processor6tables11ThreadTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables11ThreadTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables11ThreadTableD2Ev = Module["__ZN8perfetto15trace_processor6tables11ThreadTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables11ThreadTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12CounterTableD0Ev = Module["__ZN8perfetto15trace_processor6tables12CounterTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12CounterTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12CounterTableD2Ev = Module["__ZN8perfetto15trace_processor6tables12CounterTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12CounterTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev = Module["__ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12CpuFreqTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev = Module["__ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12CpuFreqTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12InstantTableD0Ev = Module["__ZN8perfetto15trace_processor6tables12InstantTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12InstantTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12InstantTableD2Ev = Module["__ZN8perfetto15trace_processor6tables12InstantTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12InstantTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12ProcessTableD0Ev = Module["__ZN8perfetto15trace_processor6tables12ProcessTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12ProcessTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables12ProcessTableD2Ev = Module["__ZN8perfetto15trace_processor6tables12ProcessTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables12ProcessTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13GpuSliceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13GpuSliceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13GpuTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13GpuTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13MetadataTableD0Ev = Module["__ZN8perfetto15trace_processor6tables13MetadataTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13MetadataTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables13MetadataTableD2Ev = Module["__ZN8perfetto15trace_processor6tables13MetadataTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables13MetadataTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev = Module["__ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15AndroidLogTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev = Module["__ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15AndroidLogTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev = Module["__ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15PerfSampleTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev = Module["__ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15PerfSampleTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15SchedSliceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables15SchedSliceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16PackageListTableD0Ev = Module["__ZN8perfetto15trace_processor6tables16PackageListTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16PackageListTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16PackageListTableD2Ev = Module["__ZN8perfetto15trace_processor6tables16PackageListTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16PackageListTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev = Module["__ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16StackSampleTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev = Module["__ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16StackSampleTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev = Module["__ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16ThreadStateTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev = Module["__ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16ThreadStateTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables16ThreadTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables17CounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables17CounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables17ProcessTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables18DescribeSliceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev = Module["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev = Module["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables18ProfilerSmapsTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev = Module["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev = Module["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables19HeapGraphClassTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev = Module["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev = Module["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables19MemorySnapshotTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20CpuCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev = Module["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev = Module["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20GpuCounterGroupTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20GpuCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev = Module["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev = Module["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20HeapGraphObjectTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables20IrqCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev = Module["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev = Module["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables22StackProfileFrameTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23GraphicsFrameSliceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev = Module["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev = Module["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23HeapGraphReferenceTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev = Module["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev = Module["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23MemorySnapshotEdgeTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev = Module["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev = Module["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23MemorySnapshotNodeTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables23ThreadCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24ProcessCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev = Module["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev = Module["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24SoftirqCounterTrackTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev = Module["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev = Module["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables24StackProfileMappingTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev = Module["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev = Module["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables25StackProfileCallsiteTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev = Module["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev = Module["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26CpuProfileStackSampleTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev = Module["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev = Module["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26HeapProfileAllocationTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev = Module["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev = Module["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables26ProcessMemorySnapshotTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev = Module["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev = Module["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables28VulkanMemoryAllocationsTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev = Module["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev = Module["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables32ExperimentalFlamegraphNodesTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8ArgTableD0Ev = Module["__ZN8perfetto15trace_processor6tables8ArgTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8ArgTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8ArgTableD2Ev = Module["__ZN8perfetto15trace_processor6tables8ArgTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8ArgTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8CpuTableD0Ev = Module["__ZN8perfetto15trace_processor6tables8CpuTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8CpuTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8CpuTableD2Ev = Module["__ZN8perfetto15trace_processor6tables8CpuTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8CpuTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8RawTableD0Ev = Module["__ZN8perfetto15trace_processor6tables8RawTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8RawTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables8RawTableD2Ev = Module["__ZN8perfetto15trace_processor6tables8RawTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables8RawTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables9FlowTableD0Ev = Module["__ZN8perfetto15trace_processor6tables9FlowTableD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables9FlowTableD0Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor6tables9FlowTableD2Ev = Module["__ZN8perfetto15trace_processor6tables9FlowTableD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor6tables9FlowTableD2Ev"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_ = Module["__ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7compare18SqlValueComparatorERKNS0_8SqlValueES4_"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7metrics10BuildProtoEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7metrics11NullIfEmptyEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7metrics17RepeatedFieldStepEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context = Module["__ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7metrics18RepeatedFieldFinalEP15sqlite3_context"].apply(null, arguments) };
	var __ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value = Module["__ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN8perfetto15trace_processor7metrics9RunMetricEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv = Module["__ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN9protozero19ScatteredHeapBuffer12GetNewBufferEv"].apply(null, arguments) };
	var __ZN9protozero19ScatteredHeapBufferD0Ev = Module["__ZN9protozero19ScatteredHeapBufferD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN9protozero19ScatteredHeapBufferD0Ev"].apply(null, arguments) };
	var __ZN9protozero19ScatteredHeapBufferD2Ev = Module["__ZN9protozero19ScatteredHeapBufferD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN9protozero19ScatteredHeapBufferD2Ev"].apply(null, arguments) };
	var __ZN9protozero21ScatteredStreamWriter8DelegateD0Ev = Module["__ZN9protozero21ScatteredStreamWriter8DelegateD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN9protozero21ScatteredStreamWriter8DelegateD0Ev"].apply(null, arguments) };
	var __ZN9protozero21ScatteredStreamWriter8DelegateD2Ev = Module["__ZN9protozero21ScatteredStreamWriter8DelegateD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZN9protozero21ScatteredStreamWriter8DelegateD2Ev"].apply(null, arguments) };
	var __ZNK10__cxxabiv116__shim_type_info5noop1Ev = Module["__ZNK10__cxxabiv116__shim_type_info5noop1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv116__shim_type_info5noop1Ev"].apply(null, arguments) };
	var __ZNK10__cxxabiv116__shim_type_info5noop2Ev = Module["__ZNK10__cxxabiv116__shim_type_info5noop2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv116__shim_type_info5noop2Ev"].apply(null, arguments) };
	var __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = Module["__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"].apply(null, arguments) };
	var __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = Module["__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"].apply(null, arguments) };
	var __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = Module["__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"].apply(null, arguments) };
	var __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv = Module["__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv"].apply(null, arguments) };
	var __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = Module["__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"].apply(null, arguments) };
	var __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = Module["__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"].apply(null, arguments) };
	var __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = Module["__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"].apply(null, arguments) };
	var __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib = Module["__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib"].apply(null, arguments) };
	var __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib = Module["__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib"].apply(null, arguments) };
	var __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi = Module["__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi"].apply(null, arguments) };
	var __ZNK4Json17CharReaderBuilder13newCharReaderEv = Module["__ZNK4Json17CharReaderBuilder13newCharReaderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK4Json17CharReaderBuilder13newCharReaderEv"].apply(null, arguments) };
	var __ZNK4Json19StreamWriterBuilder15newStreamWriterEv = Module["__ZNK4Json19StreamWriterBuilder15newStreamWriterEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK4Json19StreamWriterBuilder15newStreamWriterEv"].apply(null, arguments) };
	var __ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE = Module["__ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK8perfetto15trace_processor12TraceStorage9GetStringENS0_10StringPool2IdE"].apply(null, arguments) };
	var __ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy = Module["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup10GetMappingEy"].apply(null, arguments) };
	var __ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy = Module["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup12GetCallstackEy"].apply(null, arguments) };
	var __ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy = Module["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup8GetFrameEy"].apply(null, arguments) };
	var __ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE = Module["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNK8perfetto15trace_processor25ProfilePacketInternLookup9GetStringEyNS0_27SequenceStackProfileTracker18InternedStringTypeE"].apply(null, arguments) };
	var __ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__back_refIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEPNS0_6__baseISN_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEPNS0_6__baseISQ_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISJ_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEPNS0_6__baseISS_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEPNS0_6__baseISL_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISB_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEPNS0_6__baseISC_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISD_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEPNS0_6__baseISF_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEPNS0_6__baseISF_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEPNS0_6__baseISG_EE"].apply(null, arguments) };
	var __ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv = Module["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7__cloneEv"].apply(null, arguments) };
	var __ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__l_anchorIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210__r_anchorIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv = Module["__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv = Module["__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv = Module["__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv = Module["__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv = Module["__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv = Module["__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv = Module["__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv = Module["__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv = Module["__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv = Module["__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv = Module["__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv = Module["__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv = Module["__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv = Module["__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv = Module["__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv = Module["__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv = Module["__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv = Module["__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv = Module["__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv = Module["__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv = Module["__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv = Module["__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv = Module["__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv = Module["__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv = Module["__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv = Module["__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv = Module["__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv = Module["__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv = Module["__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv = Module["__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv = Module["__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv = Module["__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv = Module["__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv = Module["__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv = Module["__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv"].apply(null, arguments) };
	var __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv = Module["__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE = Module["__ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__211__alternateIcE12__exec_splitEbRNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__211__alternateIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__211__end_stateIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__211__lookaheadIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__211__match_anyIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__212__match_charIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__213__empty_stateIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__215__word_boundaryIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__217__repeat_one_loopIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__218__back_ref_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__218__match_char_icaseIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info = Module["__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info"].apply(null, arguments) };
	var __ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__bracket_expressionIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE = Module["__ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__match_char_collateIcNS_12regex_traitsIcEEE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE3__XEv = Module["__ZNKSt3__220__time_get_c_storageIcE3__XEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE3__XEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE3__cEv = Module["__ZNKSt3__220__time_get_c_storageIcE3__cEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE3__cEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE3__rEv = Module["__ZNKSt3__220__time_get_c_storageIcE3__rEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE3__rEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE3__xEv = Module["__ZNKSt3__220__time_get_c_storageIcE3__xEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE3__xEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv = Module["__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE7__weeksEv = Module["__ZNKSt3__220__time_get_c_storageIcE7__weeksEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE7__weeksEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIcE8__monthsEv = Module["__ZNKSt3__220__time_get_c_storageIcE8__monthsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIcE8__monthsEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE3__XEv = Module["__ZNKSt3__220__time_get_c_storageIwE3__XEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE3__XEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE3__cEv = Module["__ZNKSt3__220__time_get_c_storageIwE3__cEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE3__cEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE3__rEv = Module["__ZNKSt3__220__time_get_c_storageIwE3__rEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE3__rEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE3__xEv = Module["__ZNKSt3__220__time_get_c_storageIwE3__xEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE3__xEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv = Module["__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE7__weeksEv = Module["__ZNKSt3__220__time_get_c_storageIwE7__weeksEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE7__weeksEv"].apply(null, arguments) };
	var __ZNKSt3__220__time_get_c_storageIwE8__monthsEv = Module["__ZNKSt3__220__time_get_c_storageIwE8__monthsEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__220__time_get_c_storageIwE8__monthsEv"].apply(null, arguments) };
	var __ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__221__empty_non_own_stateIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__223__match_any_but_newlineIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__226__end_marked_subexpressionIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__228__begin_marked_subexpressionIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc = Module["__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE10do_tolowerEc = Module["__ZNKSt3__25ctypeIcE10do_tolowerEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE10do_tolowerEc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE10do_toupperEPcPKc = Module["__ZNKSt3__25ctypeIcE10do_toupperEPcPKc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE10do_toupperEPcPKc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE10do_toupperEc = Module["__ZNKSt3__25ctypeIcE10do_toupperEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE10do_toupperEc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc = Module["__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE8do_widenEc = Module["__ZNKSt3__25ctypeIcE8do_widenEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE8do_widenEc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc = Module["__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIcE9do_narrowEcc = Module["__ZNKSt3__25ctypeIcE9do_narrowEcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIcE9do_narrowEcc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_ = Module["__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw = Module["__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE10do_tolowerEw = Module["__ZNKSt3__25ctypeIwE10do_tolowerEw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE10do_tolowerEw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE10do_toupperEPwPKw = Module["__ZNKSt3__25ctypeIwE10do_toupperEPwPKw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE10do_toupperEPwPKw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE10do_toupperEw = Module["__ZNKSt3__25ctypeIwE10do_toupperEw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE10do_toupperEw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_ = Module["__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt = Module["__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE5do_isEtw = Module["__ZNKSt3__25ctypeIwE5do_isEtw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE5do_isEtw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw = Module["__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE8do_widenEc = Module["__ZNKSt3__25ctypeIwE8do_widenEc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE8do_widenEc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc = Module["__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc"].apply(null, arguments) };
	var __ZNKSt3__25ctypeIwE9do_narrowEwc = Module["__ZNKSt3__25ctypeIwE9do_narrowEwc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__25ctypeIwE9do_narrowEwc"].apply(null, arguments) };
	var __ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE = Module["__ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__26__loopIcE12__exec_splitEbRNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__26__loopIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE = Module["__ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__26__nodeIcE12__exec_splitEbRNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE = Module["__ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__26__nodeIcE6__execERNS_7__stateIcEE"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_ = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_ = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j = Module["__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_ = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_ = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j = Module["__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_ = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_ = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j = Module["__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_ = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_ = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_ = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_"].apply(null, arguments) };
	var __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j = Module["__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j"].apply(null, arguments) };
	var __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_ = Module["__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_"].apply(null, arguments) };
	var __ZNKSt3__27collateIcE12do_transformEPKcS3_ = Module["__ZNKSt3__27collateIcE12do_transformEPKcS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIcE12do_transformEPKcS3_"].apply(null, arguments) };
	var __ZNKSt3__27collateIcE7do_hashEPKcS3_ = Module["__ZNKSt3__27collateIcE7do_hashEPKcS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIcE7do_hashEPKcS3_"].apply(null, arguments) };
	var __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_ = Module["__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_"].apply(null, arguments) };
	var __ZNKSt3__27collateIwE12do_transformEPKwS3_ = Module["__ZNKSt3__27collateIwE12do_transformEPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIwE12do_transformEPKwS3_"].apply(null, arguments) };
	var __ZNKSt3__27collateIwE7do_hashEPKwS3_ = Module["__ZNKSt3__27collateIwE7do_hashEPKwS3_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27collateIwE7do_hashEPKwS3_"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"].apply(null, arguments) };
	var __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ = Module["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy"].apply(null, arguments) };
	var __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_ = Module["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx"].apply(null, arguments) };
	var __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy = Module["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx"].apply(null, arguments) };
	var __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy = Module["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy"].apply(null, arguments) };
	var __ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE = Module["__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE = Module["__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"].apply(null, arguments) };
	var __ZNKSt3__28messagesIcE8do_closeEi = Module["__ZNKSt3__28messagesIcE8do_closeEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIcE8do_closeEi"].apply(null, arguments) };
	var __ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE = Module["__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE"].apply(null, arguments) };
	var __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE = Module["__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE"].apply(null, arguments) };
	var __ZNKSt3__28messagesIwE8do_closeEi = Module["__ZNKSt3__28messagesIwE8do_closeEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28messagesIwE8do_closeEi"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIcE11do_groupingEv = Module["__ZNKSt3__28numpunctIcE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIcE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIcE11do_truenameEv = Module["__ZNKSt3__28numpunctIcE11do_truenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIcE11do_truenameEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIcE12do_falsenameEv = Module["__ZNKSt3__28numpunctIcE12do_falsenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIcE12do_falsenameEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIcE16do_decimal_pointEv = Module["__ZNKSt3__28numpunctIcE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIcE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIcE16do_thousands_sepEv = Module["__ZNKSt3__28numpunctIcE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIcE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIwE11do_groupingEv = Module["__ZNKSt3__28numpunctIwE11do_groupingEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIwE11do_groupingEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIwE11do_truenameEv = Module["__ZNKSt3__28numpunctIwE11do_truenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIwE11do_truenameEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIwE12do_falsenameEv = Module["__ZNKSt3__28numpunctIwE12do_falsenameEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIwE12do_falsenameEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIwE16do_decimal_pointEv = Module["__ZNKSt3__28numpunctIwE16do_decimal_pointEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIwE16do_decimal_pointEv"].apply(null, arguments) };
	var __ZNKSt3__28numpunctIwE16do_thousands_sepEv = Module["__ZNKSt3__28numpunctIwE16do_thousands_sepEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28numpunctIwE16do_thousands_sepEv"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc = Module["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm"].apply(null, arguments) };
	var __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc = Module["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc"].apply(null, arguments) };
	var __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc = Module["__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc"].apply(null, arguments) };
	var __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc = Module["__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc"].apply(null, arguments) };
	var __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE = Module["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe = Module["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"].apply(null, arguments) };
	var __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE = Module["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE"].apply(null, arguments) };
	var __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe = Module["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe"].apply(null, arguments) };
	var __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE = Module["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE"].apply(null, arguments) };
	var __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce = Module["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce"].apply(null, arguments) };
	var __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE = Module["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE"].apply(null, arguments) };
	var __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe = Module["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe"].apply(null, arguments) };
	var __ZNSt3__210__back_refIcED0Ev = Module["__ZNSt3__210__back_refIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__back_refIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__back_refIcED2Ev = Module["__ZNSt3__210__back_refIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__back_refIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor5TableEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto15trace_processor6tables10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev = Module["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFN8perfetto4base8OptionalIjEERKNS_6vectorINS2_15trace_processor12SliceTracker9SliceInfoENS_9allocatorIS9_EEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_13DbSqliteTable7ContextEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3NS4_14SqliteRawTable7ContextEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev = Module["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFNS_10unique_ptrIN8perfetto15trace_processor11SqliteTableENS_14default_deleteIS5_EEEEP7sqlite3PKNS4_12TraceStorageEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev = Module["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev = Module["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvN8perfetto15trace_processor6tables10TrackTable9DefinedIdENS4_10SliceTable9DefinedIdEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev = Module["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev = Module["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPN8perfetto15trace_processor9metatrace6RecordEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPvEED0Ev = Module["__ZNSt3__210__function6__baseIFvPvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvPvEED2Ev = Module["__ZNSt3__210__function6__baseIFvPvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvPvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev = Module["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev = Module["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__baseIFvRKN8perfetto15trace_processor8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_10StatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13DbSqliteTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_13SqlStatsTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_14SqliteRawTableENS6_7ContextEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSE_S7_E_NS_9allocatorISI_EEFSC_SE_S7_EEclEOSE_OS7_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_19WindowOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor11SqliteTable10GetFactoryINS3_21SpanJoinOperatorTableEPKNS3_12TraceStorageEEENS_8functionIFNS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEP7sqlite3T0_EEEvEUlSG_S9_E_NS_9allocatorISK_EEFSE_SG_S9_EEclEOSG_OS9_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser16ParseSoftIrqExitEjxN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12FtraceParser19ParseIrqHandlerExitEjxN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker13EndFrameEventExNS3_6tables10TrackTable9DefinedIdENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__9NS_9allocatorISE_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSF_ISL_EEEEEEclESP_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker15BeginFrameEventENS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__3NS_9allocatorISE_EEFNS5_10SliceTable9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker16ScopedFrameEventERKNS3_6tables23GraphicsFrameSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__6NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker21BeginLegacyUnnestableENS3_6tables10SliceTable3RowEE3__1NS_9allocatorIS8_EEFNS6_9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker3EndExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__7NS_9allocatorISG_EEFNS2_4base8OptionalIjEERKNS_6vectorINS4_9SliceInfoENSH_ISN_EEEEEEclESR_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker5BeginExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_NS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__0NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker6ScopedExNS3_6tables10TrackTable9DefinedIdENS3_10StringPool2IdES9_xNS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__4NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12SliceTracker9ScopedGpuERKNS3_6tables13GpuSliceTable3RowENS_8functionIFvPNS3_11ArgsTracker13BoundInserterEEEEE3__5NS_9allocatorISG_EEFNS5_10SliceTable9DefinedIdEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__1NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__2NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__3NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__4NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__5NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__6NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__7NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__8NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE3__9NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__10NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__11NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__12NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__13NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__14NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__15NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__16NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__17NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__18NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__19NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__20NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__21NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__22NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__23NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13SerializeArgsEvE4__24NS_9allocatorIS6_EEFvRKNS3_8VariadicEEEclESB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer13WriteArgAtRowEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer16WriteArgForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor12_GLOBAL__N_114ArgsSerializer18WriteValueForFieldEjEUlRKNS3_8VariadicEE_NS_9allocatorIS9_EEFvS8_EEclES8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker11TransactionExjiiiibjNS3_10StringPool2IdEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionAllocBufExjyyE3__4NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__2NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13BinderTracker19TransactionReceivedExjiE3__3NS_9allocatorIS5_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSA_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor13DbSqliteTable6Cursor25TryCacheCreateSortedTableERKNS3_16QueryConstraintsENS3_11SqliteTable6Cursor13FilterHistoryEE3__4NS_9allocatorISC_EEFNS3_5TableEvEEclEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser11ParseGpuLogExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser19ParseVulkanApiEventExN9protozero10ConstBytesEE3__2NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor14GpuEventParser24ParseGpuRenderStageEventExPNS3_29PacketSequenceStateGenerationEN9protozero10ConstBytesEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor15JsonTraceParser16ParseTracePacketExNS3_21TimestampedTracePieceEE3__0NS_9allocatorIS6_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSB_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser12ParseTriggerExN9protozero10ConstBytesEE3__1NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16ProtoTraceParser19ParseMetatraceEventExN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter18ParseAsyncEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter19ParseThreadEndEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter20ParseAsyncBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter21ParseThreadBeginEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter22ParseAsyncInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter23ParseThreadInstantEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor16TrackEventParser13EventImporter24ParseThreadCompleteEventEvEUlPNS3_11ArgsTracker13BoundInserterEE_NS_9allocatorIS9_EEFvS8_EEclEOS8_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18SystemProbesParser16ParseThreadStatsExjN9protozero10ConstBytesEE3__0NS_9allocatorIS7_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor18TraceProcessorImpl23DisableAndReadMetatraceEPNS_6vectorIhNS_9allocatorIhEEEEE3__2NS6_ISA_EEFvPNS3_9metatrace6RecordEEEclEOSE_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13EventCategoryEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero13HistogramNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14InternedStringEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14LogMessageBodyEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero14SourceLocationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero18TrackEventDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19DebugAnnotationNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero19TracePacketDefaultsEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero35InternedGpuRenderStageSpecificationEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero5FrameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero7MappingEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9CallstackEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor19InternedMessageView18GetOrCreateDecoderINS2_6protos6pbzero9EventNameEEEPNT_7DecoderEvEUlPvE_NS_9allocatorISD_EEFvSC_EEclEOSC_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor24GraphicsFrameEventParser16CreatePhaseEventExRNS2_6protos6pbzero38GraphicsFrameEvent_BufferEvent_DecoderEE3__0NS_9allocatorIS9_EEFvPNS3_11ArgsTracker13BoundInserterEEEclEOSE_"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE18destroy_deallocateEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEE7destroyEv"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_ = Module["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__function6__funcIZN8perfetto15trace_processor25TraceProcessorStorageImplC1ERKNS3_6ConfigEE3__0NS_9allocatorIS8_EEFvNS3_6tables10TrackTable9DefinedIdENSB_10SliceTable9DefinedIdEEEclEOSD_OSF_"].apply(null, arguments) };
	var __ZNSt3__210__l_anchorIcED0Ev = Module["__ZNSt3__210__l_anchorIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__l_anchorIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__l_anchorIcED2Ev = Module["__ZNSt3__210__l_anchorIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__l_anchorIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__r_anchorIcED0Ev = Module["__ZNSt3__210__r_anchorIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__r_anchorIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__r_anchorIcED2Ev = Module["__ZNSt3__210__r_anchorIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__r_anchorIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE = Module["__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcE5uflowEv = Module["__ZNSt3__210__stdinbufIcE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcE5uflowEv"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcE9pbackfailEi = Module["__ZNSt3__210__stdinbufIcE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcE9pbackfailEi"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcE9underflowEv = Module["__ZNSt3__210__stdinbufIcE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcE9underflowEv"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcED0Ev = Module["__ZNSt3__210__stdinbufIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIcED2Ev = Module["__ZNSt3__210__stdinbufIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE = Module["__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwE5uflowEv = Module["__ZNSt3__210__stdinbufIwE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwE5uflowEv"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwE9pbackfailEj = Module["__ZNSt3__210__stdinbufIwE9pbackfailEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwE9pbackfailEj"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwE9underflowEv = Module["__ZNSt3__210__stdinbufIwE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwE9underflowEv"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwED0Ev = Module["__ZNSt3__210__stdinbufIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__210__stdinbufIwED2Ev = Module["__ZNSt3__210__stdinbufIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210__stdinbufIwED2Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIcLb0EED0Ev = Module["__ZNSt3__210moneypunctIcLb0EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIcLb0EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIcLb0EED2Ev = Module["__ZNSt3__210moneypunctIcLb0EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIcLb0EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIcLb1EED0Ev = Module["__ZNSt3__210moneypunctIcLb1EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIcLb1EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIcLb1EED2Ev = Module["__ZNSt3__210moneypunctIcLb1EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIcLb1EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIwLb0EED0Ev = Module["__ZNSt3__210moneypunctIwLb0EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIwLb0EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIwLb0EED2Ev = Module["__ZNSt3__210moneypunctIwLb0EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIwLb0EED2Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIwLb1EED0Ev = Module["__ZNSt3__210moneypunctIwLb1EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIwLb1EED0Ev"].apply(null, arguments) };
	var __ZNSt3__210moneypunctIwLb1EED2Ev = Module["__ZNSt3__210moneypunctIwLb1EED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__210moneypunctIwLb1EED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__alternateIcED0Ev = Module["__ZNSt3__211__alternateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__alternateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__alternateIcED2Ev = Module["__ZNSt3__211__alternateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__alternateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__end_stateIcED0Ev = Module["__ZNSt3__211__end_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__end_stateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__end_stateIcED2Ev = Module["__ZNSt3__211__end_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__end_stateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__lookaheadIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__match_anyIcED0Ev = Module["__ZNSt3__211__match_anyIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__match_anyIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__match_anyIcED2Ev = Module["__ZNSt3__211__match_anyIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__match_anyIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcE4syncEv = Module["__ZNSt3__211__stdoutbufIcE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcE4syncEv"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE = Module["__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcE6xsputnEPKci = Module["__ZNSt3__211__stdoutbufIcE6xsputnEPKci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcE6xsputnEPKci"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcE8overflowEi = Module["__ZNSt3__211__stdoutbufIcE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcE8overflowEi"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcED0Ev = Module["__ZNSt3__211__stdoutbufIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIcED2Ev = Module["__ZNSt3__211__stdoutbufIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwE4syncEv = Module["__ZNSt3__211__stdoutbufIwE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwE4syncEv"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE = Module["__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwE6xsputnEPKwi = Module["__ZNSt3__211__stdoutbufIwE6xsputnEPKwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwE6xsputnEPKwi"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwE8overflowEj = Module["__ZNSt3__211__stdoutbufIwE8overflowEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwE8overflowEj"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwED0Ev = Module["__ZNSt3__211__stdoutbufIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__211__stdoutbufIwED2Ev = Module["__ZNSt3__211__stdoutbufIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211__stdoutbufIwED2Ev"].apply(null, arguments) };
	var __ZNSt3__211char_traitsIcE2eqEcc = Module["__ZNSt3__211char_traitsIcE2eqEcc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__211char_traitsIcE2eqEcc"].apply(null, arguments) };
	var __ZNSt3__212__do_nothingEPv = Module["__ZNSt3__212__do_nothingEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__212__do_nothingEPv"].apply(null, arguments) };
	var __ZNSt3__212__match_charIcED0Ev = Module["__ZNSt3__212__match_charIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__212__match_charIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__212__match_charIcED2Ev = Module["__ZNSt3__212__match_charIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__212__match_charIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__213__empty_stateIcED0Ev = Module["__ZNSt3__213__empty_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213__empty_stateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__213__empty_stateIcED2Ev = Module["__ZNSt3__213__empty_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213__empty_stateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev = Module["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev = Module["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev = Module["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev = Module["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev = Module["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev = Module["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev = Module["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev = Module["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__214__shared_countD0Ev = Module["__ZNSt3__214__shared_countD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__214__shared_countD0Ev"].apply(null, arguments) };
	var __ZNSt3__214__shared_countD2Ev = Module["__ZNSt3__214__shared_countD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__214__shared_countD2Ev"].apply(null, arguments) };
	var __ZNSt3__215__has_one_stateIcED0Ev = Module["__ZNSt3__215__has_one_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215__has_one_stateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__215__has_one_stateIcED2Ev = Module["__ZNSt3__215__has_one_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215__has_one_stateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215__word_boundaryIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev = Module["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev = Module["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev = Module["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__215basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__216__back_ref_icaseIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__216__narrow_to_utf8ILj32EED0Ev = Module["__ZNSt3__216__narrow_to_utf8ILj32EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__216__narrow_to_utf8ILj32EED0Ev"].apply(null, arguments) };
	var __ZNSt3__216__owns_one_stateIcED0Ev = Module["__ZNSt3__216__owns_one_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__216__owns_one_stateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__216__owns_one_stateIcED2Ev = Module["__ZNSt3__216__owns_one_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__216__owns_one_stateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv = Module["__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv"].apply(null, arguments) };
	var __ZNSt3__217__owns_two_statesIcED0Ev = Module["__ZNSt3__217__owns_two_statesIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__owns_two_statesIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__217__owns_two_statesIcED2Ev = Module["__ZNSt3__217__owns_two_statesIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__owns_two_statesIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__217__repeat_one_loopIcED0Ev = Module["__ZNSt3__217__repeat_one_loopIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__repeat_one_loopIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__217__repeat_one_loopIcED2Ev = Module["__ZNSt3__217__repeat_one_loopIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__repeat_one_loopIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__217__widen_from_utf8ILj32EED0Ev = Module["__ZNSt3__217__widen_from_utf8ILj32EED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__217__widen_from_utf8ILj32EED0Ev"].apply(null, arguments) };
	var __ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__218__back_ref_collateIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__218__match_char_icaseIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__219__shared_weak_countD0Ev = Module["__ZNSt3__219__shared_weak_countD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__219__shared_weak_countD0Ev"].apply(null, arguments) };
	var __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = Module["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = Module["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = Module["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = Module["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"].apply(null, arguments) };
	var __ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__bracket_expressionIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev = Module["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev = Module["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__match_char_collateIcNS_12regex_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEE21__on_zero_shared_weakEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorINS2_10StringPool2IdEEENS_14default_deleteIS6_EENS_9allocatorIS6_EEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIjEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEE21__on_zero_shared_weakEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor14NullableVectorIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev = Module["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPN8perfetto15trace_processor5TableENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv = Module["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = Module["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev = Module["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev"].apply(null, arguments) };
	var __ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev = Module["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__220__shared_ptr_pointerIPNS_13__empty_stateIcEENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev"].apply(null, arguments) };
	var __ZNSt3__221__empty_non_own_stateIcED0Ev = Module["__ZNSt3__221__empty_non_own_stateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__221__empty_non_own_stateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__221__empty_non_own_stateIcED2Ev = Module["__ZNSt3__221__empty_non_own_stateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__221__empty_non_own_stateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__223__match_any_but_newlineIcED0Ev = Module["__ZNSt3__223__match_any_but_newlineIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__223__match_any_but_newlineIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__223__match_any_but_newlineIcED2Ev = Module["__ZNSt3__223__match_any_but_newlineIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__223__match_any_but_newlineIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__226__end_marked_subexpressionIcED0Ev = Module["__ZNSt3__226__end_marked_subexpressionIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__226__end_marked_subexpressionIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__226__end_marked_subexpressionIcED2Ev = Module["__ZNSt3__226__end_marked_subexpressionIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__226__end_marked_subexpressionIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__228__begin_marked_subexpressionIcED0Ev = Module["__ZNSt3__228__begin_marked_subexpressionIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__228__begin_marked_subexpressionIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__228__begin_marked_subexpressionIcED2Ev = Module["__ZNSt3__228__begin_marked_subexpressionIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__228__begin_marked_subexpressionIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ = Module["__ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__24endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_"].apply(null, arguments) };
	var __ZNSt3__25ctypeIcED0Ev = Module["__ZNSt3__25ctypeIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__25ctypeIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__25ctypeIcED2Ev = Module["__ZNSt3__25ctypeIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__25ctypeIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__25ctypeIwED0Ev = Module["__ZNSt3__25ctypeIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__25ctypeIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__26__loopIcED0Ev = Module["__ZNSt3__26__loopIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26__loopIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__26__loopIcED2Ev = Module["__ZNSt3__26__loopIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26__loopIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__26__nodeIcED0Ev = Module["__ZNSt3__26__nodeIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26__nodeIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__26__nodeIcED2Ev = Module["__ZNSt3__26__nodeIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26__nodeIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__26locale2id6__initEv = Module["__ZNSt3__26locale2id6__initEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale2id6__initEv"].apply(null, arguments) };
	var __ZNSt3__26locale5__impD0Ev = Module["__ZNSt3__26locale5__impD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale5__impD0Ev"].apply(null, arguments) };
	var __ZNSt3__26locale5__impD2Ev = Module["__ZNSt3__26locale5__impD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale5__impD2Ev"].apply(null, arguments) };
	var __ZNSt3__26locale5facet16__on_zero_sharedEv = Module["__ZNSt3__26locale5facet16__on_zero_sharedEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale5facet16__on_zero_sharedEv"].apply(null, arguments) };
	var __ZNSt3__26locale5facetD0Ev = Module["__ZNSt3__26locale5facetD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale5facetD0Ev"].apply(null, arguments) };
	var __ZNSt3__26locale5facetD2Ev = Module["__ZNSt3__26locale5facetD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__26locale5facetD2Ev"].apply(null, arguments) };
	var __ZNSt3__27codecvtIDic11__mbstate_tED0Ev = Module["__ZNSt3__27codecvtIDic11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27codecvtIDic11__mbstate_tED0Ev"].apply(null, arguments) };
	var __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev = Module["__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev"].apply(null, arguments) };
	var __ZNSt3__27codecvtIcc11__mbstate_tED0Ev = Module["__ZNSt3__27codecvtIcc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27codecvtIcc11__mbstate_tED0Ev"].apply(null, arguments) };
	var __ZNSt3__27codecvtIwc11__mbstate_tED0Ev = Module["__ZNSt3__27codecvtIwc11__mbstate_tED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27codecvtIwc11__mbstate_tED0Ev"].apply(null, arguments) };
	var __ZNSt3__27codecvtIwc11__mbstate_tED2Ev = Module["__ZNSt3__27codecvtIwc11__mbstate_tED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27codecvtIwc11__mbstate_tED2Ev"].apply(null, arguments) };
	var __ZNSt3__27collateIcED0Ev = Module["__ZNSt3__27collateIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27collateIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__27collateIcED2Ev = Module["__ZNSt3__27collateIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27collateIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__27collateIwED0Ev = Module["__ZNSt3__27collateIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27collateIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__27collateIwED2Ev = Module["__ZNSt3__27collateIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27collateIwED2Ev"].apply(null, arguments) };
	var __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__28ios_baseD0Ev = Module["__ZNSt3__28ios_baseD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28ios_baseD0Ev"].apply(null, arguments) };
	var __ZNSt3__28ios_baseD2Ev = Module["__ZNSt3__28ios_baseD2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28ios_baseD2Ev"].apply(null, arguments) };
	var __ZNSt3__28messagesIcED0Ev = Module["__ZNSt3__28messagesIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28messagesIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__28messagesIcED2Ev = Module["__ZNSt3__28messagesIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28messagesIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__28messagesIwED0Ev = Module["__ZNSt3__28messagesIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28messagesIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__28messagesIwED2Ev = Module["__ZNSt3__28messagesIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28messagesIwED2Ev"].apply(null, arguments) };
	var __ZNSt3__28numpunctIcED0Ev = Module["__ZNSt3__28numpunctIcED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28numpunctIcED0Ev"].apply(null, arguments) };
	var __ZNSt3__28numpunctIcED2Ev = Module["__ZNSt3__28numpunctIcED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28numpunctIcED2Ev"].apply(null, arguments) };
	var __ZNSt3__28numpunctIwED0Ev = Module["__ZNSt3__28numpunctIwED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28numpunctIwED0Ev"].apply(null, arguments) };
	var __ZNSt3__28numpunctIwED2Ev = Module["__ZNSt3__28numpunctIwED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28numpunctIwED2Ev"].apply(null, arguments) };
	var __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev = Module["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev = Module["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev = Module["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev = Module["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev"].apply(null, arguments) };
	var __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev = Module["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev"].apply(null, arguments) };
	var __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev = Module["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev"].apply(null, arguments) };
	var __ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv = Module["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl15NotifyEndOfFileEv"].apply(null, arguments) };
	var __ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj = Module["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZThn4_N8perfetto15trace_processor18TraceProcessorImpl5ParseENSt3__210unique_ptrIA_hNS2_14default_deleteIS4_EEEEj"].apply(null, arguments) };
	var __ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev = Module["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD0Ev"].apply(null, arguments) };
	var __ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev = Module["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZThn4_N8perfetto15trace_processor18TraceProcessorImplD1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev = Module["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev = Module["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev = Module["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev = Module["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev = Module["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev = Module["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev = Module["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev = Module["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = Module["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = Module["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__219basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev = Module["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev"].apply(null, arguments) };
	var __ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev = Module["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZTv0_n12_NSt3__219basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_10StatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13DbSqliteTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_13SqlStatsTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESI_SK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESI_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESI_iSK_SS_SU_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESI_iSL_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESI_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESI_SK_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESI_SJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESI_iSK_iSN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlPvE_8__invokeESH_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_14SqliteRawTableENS3_7ContextEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEbbENUlS6_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES6_SH_iSL_SO_SQ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_19WindowOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabP18sqlite3_index_infoE_8__invokeESK_SM_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabPP19sqlite3_vtab_cursorE_8__invokeESK_SN_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvE_8__invokeESK_iSM_SU_SW_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP12sqlite3_vtabiPP13sqlite3_valuePxE_8__invokeESK_iSN_SO_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE0_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE1_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorE_8__invokeESK_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorP15sqlite3_contextiE_8__invokeESK_SM_i"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursorPxE_8__invokeESK_SL_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlP19sqlite3_vtab_cursoriPKciPP13sqlite3_valueE_8__invokeESK_iSM_iSP_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlPvE_8__invokeESJ_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_ = Module["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor11SqliteTable8RegisterINS0_21SpanJoinOperatorTableEPKNS0_12TraceStorageEEEvP7sqlite3T0_RKNSt3__212basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbbENUlS8_PviPKPKcPP12sqlite3_vtabPPcE_8__invokeES8_SJ_iSN_SQ_SS_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv = Module["__ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor12_GLOBAL__N_112SetupMetricsEPNS0_14TraceProcessorEP7sqlite3PNSt3__26vectorINS0_7metrics13SqlMetricFileENS6_9allocatorIS9_EEEEEN3__58__invokeEPv"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value = Module["__ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor12_GLOBAL__N_123CreateSourceGeqFunctionEP7sqlite3EN3__48__invokeEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value = Module["__ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor14SqliteRawTableC1EP7sqlite3NS1_7ContextEEN3__08__invokeEP15sqlite3_contextiPP13sqlite3_value"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = Module["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__08__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = Module["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__18__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE = Module["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor16TrackEventParserC1EPNS0_21TraceProcessorContextEEN3__28__invokeERKNS0_16ProtoToArgsTable20ParsingOverrideStateERKN9protozero5FieldEPNS0_11ArgsTracker13BoundInserterE"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv = Module["__ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor18TraceProcessorImpl18ExtendMetricsProtoEPKhjEN3__18__invokeEPv"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_ = Module["__ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor21SpanJoinOperatorTable12FindFunctionEPKcPPFvP15sqlite3_contextiPP13sqlite3_valueEPPvEN3__08__invokeES5_iS8_"].apply(null, arguments) };
	var __ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_ = Module["__ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["__ZZN8perfetto15trace_processor9metatrace11ScopedEvent6CreateIFvPNS1_6RecordEEEES2_PKcT_Ed_NUlS5_E_8__invokeES5_"].apply(null, arguments) };
	var ___errno_location = Module["___errno_location"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___errno_location"].apply(null, arguments) };
	var ___mmap = Module["___mmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___mmap"].apply(null, arguments) };
	var ___munmap = Module["___munmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___munmap"].apply(null, arguments) };
	var ___stdio_close = Module["___stdio_close"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___stdio_close"].apply(null, arguments) };
	var ___stdio_read = Module["___stdio_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___stdio_read"].apply(null, arguments) };
	var ___stdio_seek = Module["___stdio_seek"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___stdio_seek"].apply(null, arguments) };
	var ___stdio_write = Module["___stdio_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___stdio_write"].apply(null, arguments) };
	var ___stdout_write = Module["___stdout_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["___stdout_write"].apply(null, arguments) };
	var _absFunc = Module["_absFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_absFunc"].apply(null, arguments) };
	var _access = Module["_access"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_access"].apply(null, arguments) };
	var _agginfoPersistExprCb = Module["_agginfoPersistExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_agginfoPersistExprCb"].apply(null, arguments) };
	var _analysisLoader = Module["_analysisLoader"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_analysisLoader"].apply(null, arguments) };
	var _analyzeAggregate = Module["_analyzeAggregate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_analyzeAggregate"].apply(null, arguments) };
	var _attachFunc = Module["_attachFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_attachFunc"].apply(null, arguments) };
	var _avgFinalize = Module["_avgFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_avgFinalize"].apply(null, arguments) };
	var _binCollFunc = Module["_binCollFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_binCollFunc"].apply(null, arguments) };
	var _btreeInvokeBusyHandler = Module["_btreeInvokeBusyHandler"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_btreeInvokeBusyHandler"].apply(null, arguments) };
	var _btreeParseCellPtr = Module["_btreeParseCellPtr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_btreeParseCellPtr"].apply(null, arguments) };
	var _btreeParseCellPtrIndex = Module["_btreeParseCellPtrIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_btreeParseCellPtrIndex"].apply(null, arguments) };
	var _btreeParseCellPtrNoPayload = Module["_btreeParseCellPtrNoPayload"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_btreeParseCellPtrNoPayload"].apply(null, arguments) };
	var _cdateFunc = Module["_cdateFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cdateFunc"].apply(null, arguments) };
	var _cellSizePtr = Module["_cellSizePtr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cellSizePtr"].apply(null, arguments) };
	var _cellSizePtrNoPayload = Module["_cellSizePtrNoPayload"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cellSizePtrNoPayload"].apply(null, arguments) };
	var _changes = Module["_changes"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_changes"].apply(null, arguments) };
	var _charFunc = Module["_charFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_charFunc"].apply(null, arguments) };
	var _checkConstraintExprNode = Module["_checkConstraintExprNode"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_checkConstraintExprNode"].apply(null, arguments) };
	var _close = Module["_close"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_close"].apply(null, arguments) };
	var _compileoptiongetFunc = Module["_compileoptiongetFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_compileoptiongetFunc"].apply(null, arguments) };
	var _compileoptionusedFunc = Module["_compileoptionusedFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_compileoptionusedFunc"].apply(null, arguments) };
	var _convertCompoundSelectToSubquery = Module["_convertCompoundSelectToSubquery"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_convertCompoundSelectToSubquery"].apply(null, arguments) };
	var _countFinalize = Module["_countFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_countFinalize"].apply(null, arguments) };
	var _countInverse = Module["_countInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_countInverse"].apply(null, arguments) };
	var _countStep = Module["_countStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_countStep"].apply(null, arguments) };
	var _ctimeFunc = Module["_ctimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ctimeFunc"].apply(null, arguments) };
	var _ctimestampFunc = Module["_ctimestampFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ctimestampFunc"].apply(null, arguments) };
	var _cume_distInvFunc = Module["_cume_distInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cume_distInvFunc"].apply(null, arguments) };
	var _cume_distStepFunc = Module["_cume_distStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cume_distStepFunc"].apply(null, arguments) };
	var _cume_distValueFunc = Module["_cume_distValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_cume_distValueFunc"].apply(null, arguments) };
	var _dateFunc = Module["_dateFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dateFunc"].apply(null, arguments) };
	var _datetimeFunc = Module["_datetimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_datetimeFunc"].apply(null, arguments) };
	var _dense_rankStepFunc = Module["_dense_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dense_rankStepFunc"].apply(null, arguments) };
	var _dense_rankValueFunc = Module["_dense_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dense_rankValueFunc"].apply(null, arguments) };
	var _detachFunc = Module["_detachFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_detachFunc"].apply(null, arguments) };
	var _do_read = Module["_do_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_do_read"].apply(null, arguments) };
	var _dotlockCheckReservedLock = Module["_dotlockCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dotlockCheckReservedLock"].apply(null, arguments) };
	var _dotlockClose = Module["_dotlockClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dotlockClose"].apply(null, arguments) };
	var _dotlockIoFinderImpl = Module["_dotlockIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dotlockIoFinderImpl"].apply(null, arguments) };
	var _dotlockLock = Module["_dotlockLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dotlockLock"].apply(null, arguments) };
	var _dotlockUnlock = Module["_dotlockUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_dotlockUnlock"].apply(null, arguments) };
	var _doubleCmp = Module["_doubleCmp"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_doubleCmp"].apply(null, arguments) };
	var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_emscripten_replace_memory"].apply(null, arguments) };
	var _errlogFunc = Module["_errlogFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_errlogFunc"].apply(null, arguments) };
	var _exprColumnFlagUnion = Module["_exprColumnFlagUnion"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprColumnFlagUnion"].apply(null, arguments) };
	var _exprIdxCover = Module["_exprIdxCover"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprIdxCover"].apply(null, arguments) };
	var _exprNodeIsConstant = Module["_exprNodeIsConstant"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprNodeIsConstant"].apply(null, arguments) };
	var _exprNodeIsConstantOrGroupBy = Module["_exprNodeIsConstantOrGroupBy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprNodeIsConstantOrGroupBy"].apply(null, arguments) };
	var _exprNodeIsDeterministic = Module["_exprNodeIsDeterministic"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprNodeIsDeterministic"].apply(null, arguments) };
	var _exprSrcCount = Module["_exprSrcCount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_exprSrcCount"].apply(null, arguments) };
	var _fchmod = Module["_fchmod"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_fchmod"].apply(null, arguments) };
	var _fchown = Module["_fchown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_fchown"].apply(null, arguments) };
	var _fcntl = Module["_fcntl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_fcntl"].apply(null, arguments) };
	var _fflush = Module["_fflush"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_fflush"].apply(null, arguments) };
	var _first_valueFinalizeFunc = Module["_first_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_first_valueFinalizeFunc"].apply(null, arguments) };
	var _first_valueStepFunc = Module["_first_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_first_valueStepFunc"].apply(null, arguments) };
	var _free = Module["_free"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_free"].apply(null, arguments) };
	var _fstat = Module["_fstat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_fstat"].apply(null, arguments) };
	var _ftruncate = Module["_ftruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ftruncate"].apply(null, arguments) };
	var _gatherSelectWindowsCallback = Module["_gatherSelectWindowsCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_gatherSelectWindowsCallback"].apply(null, arguments) };
	var _gatherSelectWindowsSelectCallback = Module["_gatherSelectWindowsSelectCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_gatherSelectWindowsSelectCallback"].apply(null, arguments) };
	var _getPageError = Module["_getPageError"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_getPageError"].apply(null, arguments) };
	var _getPageNormal = Module["_getPageNormal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_getPageNormal"].apply(null, arguments) };
	var _getcwd = Module["_getcwd"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_getcwd"].apply(null, arguments) };
	var _geteuid = Module["_geteuid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_geteuid"].apply(null, arguments) };
	var _groupConcatFinalize = Module["_groupConcatFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_groupConcatFinalize"].apply(null, arguments) };
	var _groupConcatInverse = Module["_groupConcatInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_groupConcatInverse"].apply(null, arguments) };
	var _groupConcatStep = Module["_groupConcatStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_groupConcatStep"].apply(null, arguments) };
	var _groupConcatValue = Module["_groupConcatValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_groupConcatValue"].apply(null, arguments) };
	var _havingToWhereExprCb = Module["_havingToWhereExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_havingToWhereExprCb"].apply(null, arguments) };
	var _hexFunc = Module["_hexFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_hexFunc"].apply(null, arguments) };
	var _impliesNotNullRow = Module["_impliesNotNullRow"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_impliesNotNullRow"].apply(null, arguments) };
	var _incrAggDepth = Module["_incrAggDepth"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_incrAggDepth"].apply(null, arguments) };
	var _instrFunc = Module["_instrFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_instrFunc"].apply(null, arguments) };
	var _jsonArrayFinal = Module["_jsonArrayFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonArrayFinal"].apply(null, arguments) };
	var _jsonArrayFunc = Module["_jsonArrayFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonArrayFunc"].apply(null, arguments) };
	var _jsonArrayLengthFunc = Module["_jsonArrayLengthFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonArrayLengthFunc"].apply(null, arguments) };
	var _jsonArrayStep = Module["_jsonArrayStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonArrayStep"].apply(null, arguments) };
	var _jsonArrayValue = Module["_jsonArrayValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonArrayValue"].apply(null, arguments) };
	var _jsonEachBestIndex = Module["_jsonEachBestIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachBestIndex"].apply(null, arguments) };
	var _jsonEachClose = Module["_jsonEachClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachClose"].apply(null, arguments) };
	var _jsonEachColumn = Module["_jsonEachColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachColumn"].apply(null, arguments) };
	var _jsonEachConnect = Module["_jsonEachConnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachConnect"].apply(null, arguments) };
	var _jsonEachDisconnect = Module["_jsonEachDisconnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachDisconnect"].apply(null, arguments) };
	var _jsonEachEof = Module["_jsonEachEof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachEof"].apply(null, arguments) };
	var _jsonEachFilter = Module["_jsonEachFilter"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachFilter"].apply(null, arguments) };
	var _jsonEachNext = Module["_jsonEachNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachNext"].apply(null, arguments) };
	var _jsonEachOpenEach = Module["_jsonEachOpenEach"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachOpenEach"].apply(null, arguments) };
	var _jsonEachOpenTree = Module["_jsonEachOpenTree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachOpenTree"].apply(null, arguments) };
	var _jsonEachRowid = Module["_jsonEachRowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonEachRowid"].apply(null, arguments) };
	var _jsonExtractFunc = Module["_jsonExtractFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonExtractFunc"].apply(null, arguments) };
	var _jsonGroupInverse = Module["_jsonGroupInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonGroupInverse"].apply(null, arguments) };
	var _jsonObjectFinal = Module["_jsonObjectFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonObjectFinal"].apply(null, arguments) };
	var _jsonObjectFunc = Module["_jsonObjectFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonObjectFunc"].apply(null, arguments) };
	var _jsonObjectStep = Module["_jsonObjectStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonObjectStep"].apply(null, arguments) };
	var _jsonObjectValue = Module["_jsonObjectValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonObjectValue"].apply(null, arguments) };
	var _jsonParseFree = Module["_jsonParseFree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonParseFree"].apply(null, arguments) };
	var _jsonPatchFunc = Module["_jsonPatchFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonPatchFunc"].apply(null, arguments) };
	var _jsonQuoteFunc = Module["_jsonQuoteFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonQuoteFunc"].apply(null, arguments) };
	var _jsonRemoveFunc = Module["_jsonRemoveFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonRemoveFunc"].apply(null, arguments) };
	var _jsonReplaceFunc = Module["_jsonReplaceFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonReplaceFunc"].apply(null, arguments) };
	var _jsonSetFunc = Module["_jsonSetFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonSetFunc"].apply(null, arguments) };
	var _jsonTypeFunc = Module["_jsonTypeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonTypeFunc"].apply(null, arguments) };
	var _jsonValidFunc = Module["_jsonValidFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_jsonValidFunc"].apply(null, arguments) };
	var _juliandayFunc = Module["_juliandayFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_juliandayFunc"].apply(null, arguments) };
	var _last_insert_rowid = Module["_last_insert_rowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_last_insert_rowid"].apply(null, arguments) };
	var _last_valueFinalizeFunc = Module["_last_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_last_valueFinalizeFunc"].apply(null, arguments) };
	var _last_valueInvFunc = Module["_last_valueInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_last_valueInvFunc"].apply(null, arguments) };
	var _last_valueStepFunc = Module["_last_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_last_valueStepFunc"].apply(null, arguments) };
	var _last_valueValueFunc = Module["_last_valueValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_last_valueValueFunc"].apply(null, arguments) };
	var _lengthFunc = Module["_lengthFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_lengthFunc"].apply(null, arguments) };
	var _likeFunc = Module["_likeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_likeFunc"].apply(null, arguments) };
	var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_llvm_bswap_i32"].apply(null, arguments) };
	var _llvm_ctpop_i64 = Module["_llvm_ctpop_i64"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_llvm_ctpop_i64"].apply(null, arguments) };
	var _lowerFunc = Module["_lowerFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_lowerFunc"].apply(null, arguments) };
	var _lstat = Module["_lstat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_lstat"].apply(null, arguments) };
	var _malloc = Module["_malloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_malloc"].apply(null, arguments) };
	var _memalign = Module["_memalign"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memalign"].apply(null, arguments) };
	var _memcpy = Module["_memcpy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memcpy"].apply(null, arguments) };
	var _memjrnlClose = Module["_memjrnlClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlClose"].apply(null, arguments) };
	var _memjrnlFileSize = Module["_memjrnlFileSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlFileSize"].apply(null, arguments) };
	var _memjrnlRead = Module["_memjrnlRead"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlRead"].apply(null, arguments) };
	var _memjrnlSync = Module["_memjrnlSync"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlSync"].apply(null, arguments) };
	var _memjrnlTruncate = Module["_memjrnlTruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlTruncate"].apply(null, arguments) };
	var _memjrnlWrite = Module["_memjrnlWrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memjrnlWrite"].apply(null, arguments) };
	var _memmove = Module["_memmove"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memmove"].apply(null, arguments) };
	var _memset = Module["_memset"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_memset"].apply(null, arguments) };
	var _minMaxFinalize = Module["_minMaxFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_minMaxFinalize"].apply(null, arguments) };
	var _minMaxValue = Module["_minMaxValue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_minMaxValue"].apply(null, arguments) };
	var _minmaxFunc = Module["_minmaxFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_minmaxFunc"].apply(null, arguments) };
	var _minmaxStep = Module["_minmaxStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_minmaxStep"].apply(null, arguments) };
	var _mkdir = Module["_mkdir"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_mkdir"].apply(null, arguments) };
	var _nocaseCollatingFunc = Module["_nocaseCollatingFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nocaseCollatingFunc"].apply(null, arguments) };
	var _nolockCheckReservedLock = Module["_nolockCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nolockCheckReservedLock"].apply(null, arguments) };
	var _nolockClose = Module["_nolockClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nolockClose"].apply(null, arguments) };
	var _nolockIoFinderImpl = Module["_nolockIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nolockIoFinderImpl"].apply(null, arguments) };
	var _nolockLock = Module["_nolockLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nolockLock"].apply(null, arguments) };
	var _nolockUnlock = Module["_nolockUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nolockUnlock"].apply(null, arguments) };
	var _noopStepFunc = Module["_noopStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_noopStepFunc"].apply(null, arguments) };
	var _noopValueFunc = Module["_noopValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_noopValueFunc"].apply(null, arguments) };
	var _nth_valueFinalizeFunc = Module["_nth_valueFinalizeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nth_valueFinalizeFunc"].apply(null, arguments) };
	var _nth_valueStepFunc = Module["_nth_valueStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nth_valueStepFunc"].apply(null, arguments) };
	var _ntileInvFunc = Module["_ntileInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ntileInvFunc"].apply(null, arguments) };
	var _ntileStepFunc = Module["_ntileStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ntileStepFunc"].apply(null, arguments) };
	var _ntileValueFunc = Module["_ntileValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_ntileValueFunc"].apply(null, arguments) };
	var _nullifFunc = Module["_nullifFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_nullifFunc"].apply(null, arguments) };
	var _openDirectory = Module["_openDirectory"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_openDirectory"].apply(null, arguments) };
	var _pageReinit = Module["_pageReinit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pageReinit"].apply(null, arguments) };
	var _pagerStress = Module["_pagerStress"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pagerStress"].apply(null, arguments) };
	var _pagerUndoCallback = Module["_pagerUndoCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pagerUndoCallback"].apply(null, arguments) };
	var _pcache1Cachesize = Module["_pcache1Cachesize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Cachesize"].apply(null, arguments) };
	var _pcache1Create = Module["_pcache1Create"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Create"].apply(null, arguments) };
	var _pcache1Destroy = Module["_pcache1Destroy"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Destroy"].apply(null, arguments) };
	var _pcache1Fetch = Module["_pcache1Fetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Fetch"].apply(null, arguments) };
	var _pcache1Init = Module["_pcache1Init"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Init"].apply(null, arguments) };
	var _pcache1Pagecount = Module["_pcache1Pagecount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Pagecount"].apply(null, arguments) };
	var _pcache1Rekey = Module["_pcache1Rekey"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Rekey"].apply(null, arguments) };
	var _pcache1Shrink = Module["_pcache1Shrink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Shrink"].apply(null, arguments) };
	var _pcache1Shutdown = Module["_pcache1Shutdown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Shutdown"].apply(null, arguments) };
	var _pcache1Truncate = Module["_pcache1Truncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Truncate"].apply(null, arguments) };
	var _pcache1Unpin = Module["_pcache1Unpin"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pcache1Unpin"].apply(null, arguments) };
	var _percentFinal = Module["_percentFinal"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_percentFinal"].apply(null, arguments) };
	var _percentStep = Module["_percentStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_percentStep"].apply(null, arguments) };
	var _percent_rankInvFunc = Module["_percent_rankInvFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_percent_rankInvFunc"].apply(null, arguments) };
	var _percent_rankStepFunc = Module["_percent_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_percent_rankStepFunc"].apply(null, arguments) };
	var _percent_rankValueFunc = Module["_percent_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_percent_rankValueFunc"].apply(null, arguments) };
	var _posixIoFinderImpl = Module["_posixIoFinderImpl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_posixIoFinderImpl"].apply(null, arguments) };
	var _posixOpen = Module["_posixOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_posixOpen"].apply(null, arguments) };
	var _pragmaVtabBestIndex = Module["_pragmaVtabBestIndex"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabBestIndex"].apply(null, arguments) };
	var _pragmaVtabClose = Module["_pragmaVtabClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabClose"].apply(null, arguments) };
	var _pragmaVtabColumn = Module["_pragmaVtabColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabColumn"].apply(null, arguments) };
	var _pragmaVtabConnect = Module["_pragmaVtabConnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabConnect"].apply(null, arguments) };
	var _pragmaVtabDisconnect = Module["_pragmaVtabDisconnect"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabDisconnect"].apply(null, arguments) };
	var _pragmaVtabEof = Module["_pragmaVtabEof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabEof"].apply(null, arguments) };
	var _pragmaVtabFilter = Module["_pragmaVtabFilter"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabFilter"].apply(null, arguments) };
	var _pragmaVtabNext = Module["_pragmaVtabNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabNext"].apply(null, arguments) };
	var _pragmaVtabOpen = Module["_pragmaVtabOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabOpen"].apply(null, arguments) };
	var _pragmaVtabRowid = Module["_pragmaVtabRowid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pragmaVtabRowid"].apply(null, arguments) };
	var _printfFunc = Module["_printfFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_printfFunc"].apply(null, arguments) };
	var _propagateConstantExprRewrite = Module["_propagateConstantExprRewrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_propagateConstantExprRewrite"].apply(null, arguments) };
	var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pthread_cond_broadcast"].apply(null, arguments) };
	var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pthread_mutex_lock"].apply(null, arguments) };
	var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_pthread_mutex_unlock"].apply(null, arguments) };
	var _quoteFunc = Module["_quoteFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_quoteFunc"].apply(null, arguments) };
	var _randomBlob = Module["_randomBlob"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_randomBlob"].apply(null, arguments) };
	var _randomFunc = Module["_randomFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_randomFunc"].apply(null, arguments) };
	var _rankStepFunc = Module["_rankStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_rankStepFunc"].apply(null, arguments) };
	var _rankValueFunc = Module["_rankValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_rankValueFunc"].apply(null, arguments) };
	var _read = Module["_read"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_read"].apply(null, arguments) };
	var _readlink = Module["_readlink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_readlink"].apply(null, arguments) };
	var _recomputeColumnsUsedExpr = Module["_recomputeColumnsUsedExpr"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_recomputeColumnsUsedExpr"].apply(null, arguments) };
	var _renameColumnExprCb = Module["_renameColumnExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameColumnExprCb"].apply(null, arguments) };
	var _renameColumnFunc = Module["_renameColumnFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameColumnFunc"].apply(null, arguments) };
	var _renameColumnSelectCb = Module["_renameColumnSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameColumnSelectCb"].apply(null, arguments) };
	var _renameTableExprCb = Module["_renameTableExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameTableExprCb"].apply(null, arguments) };
	var _renameTableFunc = Module["_renameTableFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameTableFunc"].apply(null, arguments) };
	var _renameTableSelectCb = Module["_renameTableSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameTableSelectCb"].apply(null, arguments) };
	var _renameTableTest = Module["_renameTableTest"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameTableTest"].apply(null, arguments) };
	var _renameUnmapExprCb = Module["_renameUnmapExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameUnmapExprCb"].apply(null, arguments) };
	var _renameUnmapSelectCb = Module["_renameUnmapSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_renameUnmapSelectCb"].apply(null, arguments) };
	var _replaceFunc = Module["_replaceFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_replaceFunc"].apply(null, arguments) };
	var _resolveExprStep = Module["_resolveExprStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_resolveExprStep"].apply(null, arguments) };
	var _resolveRemoveWindowsCb = Module["_resolveRemoveWindowsCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_resolveRemoveWindowsCb"].apply(null, arguments) };
	var _resolveSelectStep = Module["_resolveSelectStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_resolveSelectStep"].apply(null, arguments) };
	var _rmdir = Module["_rmdir"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_rmdir"].apply(null, arguments) };
	var _roundFunc = Module["_roundFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_roundFunc"].apply(null, arguments) };
	var _row_numberStepFunc = Module["_row_numberStepFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_row_numberStepFunc"].apply(null, arguments) };
	var _row_numberValueFunc = Module["_row_numberValueFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_row_numberValueFunc"].apply(null, arguments) };
	var _rtrimCollFunc = Module["_rtrimCollFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_rtrimCollFunc"].apply(null, arguments) };
	var _sbrk = Module["_sbrk"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sbrk"].apply(null, arguments) };
	var _selectAddSubqueryTypeInfo = Module["_selectAddSubqueryTypeInfo"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectAddSubqueryTypeInfo"].apply(null, arguments) };
	var _selectExpander = Module["_selectExpander"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectExpander"].apply(null, arguments) };
	var _selectPopWith = Module["_selectPopWith"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectPopWith"].apply(null, arguments) };
	var _selectSrcCount = Module["_selectSrcCount"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectSrcCount"].apply(null, arguments) };
	var _selectWindowRewriteExprCb = Module["_selectWindowRewriteExprCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectWindowRewriteExprCb"].apply(null, arguments) };
	var _selectWindowRewriteSelectCb = Module["_selectWindowRewriteSelectCb"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_selectWindowRewriteSelectCb"].apply(null, arguments) };
	var _sn_write = Module["_sn_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sn_write"].apply(null, arguments) };
	var _sourceidFunc = Module["_sourceidFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sourceidFunc"].apply(null, arguments) };
	var _sqlite3BtreeNext = Module["_sqlite3BtreeNext"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3BtreeNext"].apply(null, arguments) };
	var _sqlite3BtreePrevious = Module["_sqlite3BtreePrevious"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3BtreePrevious"].apply(null, arguments) };
	var _sqlite3ExprIfFalse = Module["_sqlite3ExprIfFalse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3ExprIfFalse"].apply(null, arguments) };
	var _sqlite3ExprIfTrue = Module["_sqlite3ExprIfTrue"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3ExprIfTrue"].apply(null, arguments) };
	var _sqlite3ExprWalkNoop = Module["_sqlite3ExprWalkNoop"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3ExprWalkNoop"].apply(null, arguments) };
	var _sqlite3InitCallback = Module["_sqlite3InitCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3InitCallback"].apply(null, arguments) };
	var _sqlite3InvalidFunction = Module["_sqlite3InvalidFunction"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3InvalidFunction"].apply(null, arguments) };
	var _sqlite3Json1Init = Module["_sqlite3Json1Init"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3Json1Init"].apply(null, arguments) };
	var _sqlite3MallocSize = Module["_sqlite3MallocSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MallocSize"].apply(null, arguments) };
	var _sqlite3MemFree = Module["_sqlite3MemFree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemFree"].apply(null, arguments) };
	var _sqlite3MemInit = Module["_sqlite3MemInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemInit"].apply(null, arguments) };
	var _sqlite3MemMalloc = Module["_sqlite3MemMalloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemMalloc"].apply(null, arguments) };
	var _sqlite3MemRealloc = Module["_sqlite3MemRealloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemRealloc"].apply(null, arguments) };
	var _sqlite3MemRoundup = Module["_sqlite3MemRoundup"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemRoundup"].apply(null, arguments) };
	var _sqlite3MemShutdown = Module["_sqlite3MemShutdown"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemShutdown"].apply(null, arguments) };
	var _sqlite3MemSize = Module["_sqlite3MemSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3MemSize"].apply(null, arguments) };
	var _sqlite3RowSetDelete = Module["_sqlite3RowSetDelete"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3RowSetDelete"].apply(null, arguments) };
	var _sqlite3SchemaClear = Module["_sqlite3SchemaClear"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3SchemaClear"].apply(null, arguments) };
	var _sqlite3SelectWalkFail = Module["_sqlite3SelectWalkFail"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3SelectWalkFail"].apply(null, arguments) };
	var _sqlite3SelectWalkNoop = Module["_sqlite3SelectWalkNoop"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3SelectWalkNoop"].apply(null, arguments) };
	var _sqlite3TestExtInit = Module["_sqlite3TestExtInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3TestExtInit"].apply(null, arguments) };
	var _sqlite3VdbeFrameMemDel = Module["_sqlite3VdbeFrameMemDel"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3VdbeFrameMemDel"].apply(null, arguments) };
	var _sqlite3VdbeRecordCompare = Module["_sqlite3VdbeRecordCompare"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3VdbeRecordCompare"].apply(null, arguments) };
	var _sqlite3WalDefaultHook = Module["_sqlite3WalDefaultHook"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3WalDefaultHook"].apply(null, arguments) };
	var _sqlite3WalkerDepthDecrease = Module["_sqlite3WalkerDepthDecrease"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3WalkerDepthDecrease"].apply(null, arguments) };
	var _sqlite3WalkerDepthIncrease = Module["_sqlite3WalkerDepthIncrease"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3WalkerDepthIncrease"].apply(null, arguments) };
	var _sqlite3WindowExtraAggFuncDepth = Module["_sqlite3WindowExtraAggFuncDepth"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3WindowExtraAggFuncDepth"].apply(null, arguments) };
	var _sqlite3_free = Module["_sqlite3_free"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqlite3_free"].apply(null, arguments) };
	var _sqliteDefaultBusyCallback = Module["_sqliteDefaultBusyCallback"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sqliteDefaultBusyCallback"].apply(null, arguments) };
	var _stat = Module["_stat"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_stat"].apply(null, arguments) };
	var _statAccumDestructor = Module["_statAccumDestructor"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_statAccumDestructor"].apply(null, arguments) };
	var _statGet = Module["_statGet"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_statGet"].apply(null, arguments) };
	var _statInit = Module["_statInit"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_statInit"].apply(null, arguments) };
	var _statPush = Module["_statPush"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_statPush"].apply(null, arguments) };
	var _strftimeFunc = Module["_strftimeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_strftimeFunc"].apply(null, arguments) };
	var _substrFunc = Module["_substrFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_substrFunc"].apply(null, arguments) };
	var _sumFinalize = Module["_sumFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sumFinalize"].apply(null, arguments) };
	var _sumInverse = Module["_sumInverse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sumInverse"].apply(null, arguments) };
	var _sumStep = Module["_sumStep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_sumStep"].apply(null, arguments) };
	var _timeFunc = Module["_timeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_timeFunc"].apply(null, arguments) };
	var _totalFinalize = Module["_totalFinalize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_totalFinalize"].apply(null, arguments) };
	var _total_changes = Module["_total_changes"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_total_changes"].apply(null, arguments) };
	var _trace_processor_compute_metric = Module["_trace_processor_compute_metric"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_compute_metric"].apply(null, arguments) };
	var _trace_processor_disable_and_read_metatrace = Module["_trace_processor_disable_and_read_metatrace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_disable_and_read_metatrace"].apply(null, arguments) };
	var _trace_processor_enable_metatrace = Module["_trace_processor_enable_metatrace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_enable_metatrace"].apply(null, arguments) };
	var _trace_processor_get_metric_descriptors = Module["_trace_processor_get_metric_descriptors"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_get_metric_descriptors"].apply(null, arguments) };
	var _trace_processor_notify_eof = Module["_trace_processor_notify_eof"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_notify_eof"].apply(null, arguments) };
	var _trace_processor_parse = Module["_trace_processor_parse"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_parse"].apply(null, arguments) };
	var _trace_processor_raw_query = Module["_trace_processor_raw_query"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trace_processor_raw_query"].apply(null, arguments) };
	var _trimFunc = Module["_trimFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_trimFunc"].apply(null, arguments) };
	var _typeofFunc = Module["_typeofFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_typeofFunc"].apply(null, arguments) };
	var _unicodeFunc = Module["_unicodeFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unicodeFunc"].apply(null, arguments) };
	var _unixAccess = Module["_unixAccess"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixAccess"].apply(null, arguments) };
	var _unixCheckReservedLock = Module["_unixCheckReservedLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixCheckReservedLock"].apply(null, arguments) };
	var _unixClose = Module["_unixClose"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixClose"].apply(null, arguments) };
	var _unixCurrentTimeInt64 = Module["_unixCurrentTimeInt64"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixCurrentTimeInt64"].apply(null, arguments) };
	var _unixDelete = Module["_unixDelete"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixDelete"].apply(null, arguments) };
	var _unixDeviceCharacteristics = Module["_unixDeviceCharacteristics"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixDeviceCharacteristics"].apply(null, arguments) };
	var _unixFetch = Module["_unixFetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixFetch"].apply(null, arguments) };
	var _unixFileControl = Module["_unixFileControl"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixFileControl"].apply(null, arguments) };
	var _unixFileSize = Module["_unixFileSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixFileSize"].apply(null, arguments) };
	var _unixFullPathname = Module["_unixFullPathname"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixFullPathname"].apply(null, arguments) };
	var _unixGetLastError = Module["_unixGetLastError"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixGetLastError"].apply(null, arguments) };
	var _unixGetSystemCall = Module["_unixGetSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixGetSystemCall"].apply(null, arguments) };
	var _unixGetpagesize = Module["_unixGetpagesize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixGetpagesize"].apply(null, arguments) };
	var _unixLock = Module["_unixLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixLock"].apply(null, arguments) };
	var _unixNextSystemCall = Module["_unixNextSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixNextSystemCall"].apply(null, arguments) };
	var _unixOpen = Module["_unixOpen"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixOpen"].apply(null, arguments) };
	var _unixRandomness = Module["_unixRandomness"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixRandomness"].apply(null, arguments) };
	var _unixRead = Module["_unixRead"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixRead"].apply(null, arguments) };
	var _unixSectorSize = Module["_unixSectorSize"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixSectorSize"].apply(null, arguments) };
	var _unixSetSystemCall = Module["_unixSetSystemCall"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixSetSystemCall"].apply(null, arguments) };
	var _unixShmBarrier = Module["_unixShmBarrier"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixShmBarrier"].apply(null, arguments) };
	var _unixShmLock = Module["_unixShmLock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixShmLock"].apply(null, arguments) };
	var _unixShmMap = Module["_unixShmMap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixShmMap"].apply(null, arguments) };
	var _unixShmUnmap = Module["_unixShmUnmap"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixShmUnmap"].apply(null, arguments) };
	var _unixSleep = Module["_unixSleep"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixSleep"].apply(null, arguments) };
	var _unixSync = Module["_unixSync"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixSync"].apply(null, arguments) };
	var _unixTruncate = Module["_unixTruncate"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixTruncate"].apply(null, arguments) };
	var _unixUnfetch = Module["_unixUnfetch"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixUnfetch"].apply(null, arguments) };
	var _unixUnlock = Module["_unixUnlock"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixUnlock"].apply(null, arguments) };
	var _unixWrite = Module["_unixWrite"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unixWrite"].apply(null, arguments) };
	var _unlink = Module["_unlink"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_unlink"].apply(null, arguments) };
	var _upperFunc = Module["_upperFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_upperFunc"].apply(null, arguments) };
	var _vdbeRecordCompareInt = Module["_vdbeRecordCompareInt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_vdbeRecordCompareInt"].apply(null, arguments) };
	var _vdbeRecordCompareString = Module["_vdbeRecordCompareString"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_vdbeRecordCompareString"].apply(null, arguments) };
	var _vdbeSorterCompare = Module["_vdbeSorterCompare"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_vdbeSorterCompare"].apply(null, arguments) };
	var _vdbeSorterCompareInt = Module["_vdbeSorterCompareInt"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_vdbeSorterCompareInt"].apply(null, arguments) };
	var _vdbeSorterCompareText = Module["_vdbeSorterCompareText"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_vdbeSorterCompareText"].apply(null, arguments) };
	var _versionFunc = Module["_versionFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_versionFunc"].apply(null, arguments) };
	var _whereIndexExprTransColumn = Module["_whereIndexExprTransColumn"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_whereIndexExprTransColumn"].apply(null, arguments) };
	var _whereIndexExprTransNode = Module["_whereIndexExprTransNode"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_whereIndexExprTransNode"].apply(null, arguments) };
	var _write = Module["_write"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_write"].apply(null, arguments) };
	var _zcalloc = Module["_zcalloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_zcalloc"].apply(null, arguments) };
	var _zcfree = Module["_zcfree"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_zcfree"].apply(null, arguments) };
	var _zeroblobFunc = Module["_zeroblobFunc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["_zeroblobFunc"].apply(null, arguments) };
	var establishStackSpace = Module["establishStackSpace"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["establishStackSpace"].apply(null, arguments) };
	var getTempRet0 = Module["getTempRet0"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["getTempRet0"].apply(null, arguments) };
	var runPostSets = Module["runPostSets"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["runPostSets"].apply(null, arguments) };
	var setTempRet0 = Module["setTempRet0"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["setTempRet0"].apply(null, arguments) };
	var setThrew = Module["setThrew"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["setThrew"].apply(null, arguments) };
	var stackAlloc = Module["stackAlloc"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["stackAlloc"].apply(null, arguments) };
	var stackRestore = Module["stackRestore"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["stackRestore"].apply(null, arguments) };
	var stackSave = Module["stackSave"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["stackSave"].apply(null, arguments) };
	var dynCall_i = Module["dynCall_i"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_i"].apply(null, arguments) };
	var dynCall_ii = Module["dynCall_ii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_ii"].apply(null, arguments) };
	var dynCall_iii = Module["dynCall_iii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iii"].apply(null, arguments) };
	var dynCall_iiii = Module["dynCall_iiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiii"].apply(null, arguments) };
	var dynCall_iiiii = Module["dynCall_iiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiii"].apply(null, arguments) };
	var dynCall_iiiiid = Module["dynCall_iiiiid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiid"].apply(null, arguments) };
	var dynCall_iiiiii = Module["dynCall_iiiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiii"].apply(null, arguments) };
	var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiiid"].apply(null, arguments) };
	var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiiii"].apply(null, arguments) };
	var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiiiii"].apply(null, arguments) };
	var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiiiiii"].apply(null, arguments) };
	var dynCall_iiiiij = Module["dynCall_iiiiij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiiij"].apply(null, arguments) };
	var dynCall_iiiij = Module["dynCall_iiiij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiiij"].apply(null, arguments) };
	var dynCall_iij = Module["dynCall_iij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iij"].apply(null, arguments) };
	var dynCall_iiji = Module["dynCall_iiji"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iiji"].apply(null, arguments) };
	var dynCall_iijii = Module["dynCall_iijii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iijii"].apply(null, arguments) };
	var dynCall_iijijii = Module["dynCall_iijijii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_iijijii"].apply(null, arguments) };
	var dynCall_v = Module["dynCall_v"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_v"].apply(null, arguments) };
	var dynCall_vi = Module["dynCall_vi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_vi"].apply(null, arguments) };
	var dynCall_vii = Module["dynCall_vii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_vii"].apply(null, arguments) };
	var dynCall_viii = Module["dynCall_viii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viii"].apply(null, arguments) };
	var dynCall_viiii = Module["dynCall_viiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiii"].apply(null, arguments) };
	var dynCall_viiiii = Module["dynCall_viiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiiii"].apply(null, arguments) };
	var dynCall_viiiiii = Module["dynCall_viiiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiiiii"].apply(null, arguments) };
	var dynCall_viiiij = Module["dynCall_viiiij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiiij"].apply(null, arguments) };
	var dynCall_viiiijii = Module["dynCall_viiiijii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiiijii"].apply(null, arguments) };
	var dynCall_viiij = Module["dynCall_viiij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiij"].apply(null, arguments) };
	var dynCall_viij = Module["dynCall_viij"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viij"].apply(null, arguments) };
	var dynCall_viijdi = Module["dynCall_viijdi"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijdi"].apply(null, arguments) };
	var dynCall_viijdii = Module["dynCall_viijdii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijdii"].apply(null, arguments) };
	var dynCall_viiji = Module["dynCall_viiji"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viiji"].apply(null, arguments) };
	var dynCall_viijii = Module["dynCall_viijii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijii"].apply(null, arguments) };
	var dynCall_viijiiii = Module["dynCall_viijiiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijiiii"].apply(null, arguments) };
	var dynCall_viijiiiji = Module["dynCall_viijiiiji"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijiiiji"].apply(null, arguments) };
	var dynCall_viijiiijiii = Module["dynCall_viijiiijiii"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viijiiijiii"].apply(null, arguments) };
	var dynCall_viji = Module["dynCall_viji"] = function() {
	  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
	  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
	  return Module["asm"]["dynCall_viji"].apply(null, arguments) };



	// === Auto-generated postamble setup entry stuff ===

	Module['asm'] = asm;

	if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["intArrayToString"]) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	Module["ccall"] = ccall;
	Module["cwrap"] = cwrap;
	if (!Module["setValue"]) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getValue"]) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["allocate"]) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getMemory"]) Module["getMemory"] = function() { abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() { abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["AsciiToString"]) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stringToAscii"]) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stackTrace"]) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addOnInit"]) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addOnExit"]) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["addRunDependency"]) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	Module["FS"] = FS;
	if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createPath"]) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createLink"]) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["FS_unlink"]) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you"); };
	if (!Module["GL"]) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["staticAlloc"]) Module["staticAlloc"] = function() { abort("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() { abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["warnOnce"]) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() { abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() { abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getLEB"]) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["registerFunctions"]) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	Module["addFunction"] = addFunction;
	if (!Module["removeFunction"]) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["prettyPrint"]) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["makeBigInt"]) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["dynCall"]) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stackSave"]) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stackRestore"]) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };
	if (!Module["stackAlloc"]) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); };if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", { get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); } });
	if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", { get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); } });
	if (!Module["ALLOC_STATIC"]) Object.defineProperty(Module, "ALLOC_STATIC", { get: function() { abort("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); } });
	if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", { get: function() { abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); } });
	if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", { get: function() { abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)"); } });



	// Modularize mode returns a function, which can be called to
	// create instances. The instances provide a then() method,
	// must like a Promise, that receives a callback. The callback
	// is called when the module is ready to run, with the module
	// as a parameter. (Like a Promise, it also returns the module
	// so you can use the output of .then(..)).
	Module['then'] = function(func) {
	  // We may already be ready to run code at this time. if
	  // so, just queue a call to the callback.
	  if (Module['calledRun']) {
	    func(Module);
	  } else {
	    // we are not ready to call then() yet. we must call it
	    // at the same time we would call onRuntimeInitialized.
	    var old = Module['onRuntimeInitialized'];
	    Module['onRuntimeInitialized'] = function() {
	      if (old) old();
	      func(Module);
	    };
	  }
	  return Module;
	};

	/**
	 * @constructor
	 * @extends {Error}
	 * @this {ExitStatus}
	 */
	function ExitStatus(status) {
	  this.name = "ExitStatus";
	  this.message = "Program terminated with exit(" + status + ")";
	  this.status = status;
	}ExitStatus.prototype = new Error();
	ExitStatus.prototype.constructor = ExitStatus;

	var initialStackTop;

	dependenciesFulfilled = function runCaller() {
	  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
	  if (!Module['calledRun']) run();
	  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
	};





	/** @type {function(Array=)} */
	function run(args) {
	  args = args || Module['arguments'];

	  if (runDependencies > 0) {
	    return;
	  }

	  writeStackCookie();

	  preRun();

	  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
	  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

	  function doRun() {
	    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
	    Module['calledRun'] = true;

	    if (ABORT) return;

	    ensureInitRuntime();

	    preMain();

	    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

	    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

	    postRun();
	  }

	  if (Module['setStatus']) {
	    Module['setStatus']('Running...');
	    setTimeout(function() {
	      setTimeout(function() {
	        Module['setStatus']('');
	      }, 1);
	      doRun();
	    }, 1);
	  } else {
	    doRun();
	  }
	  checkStackCookie();
	}
	Module['run'] = run;

	function checkUnflushedContent() {
	  // Compiler settings do not allow exiting the runtime, so flushing
	  // the streams is not possible. but in ASSERTIONS mode we check
	  // if there was something to flush, and if so tell the user they
	  // should request that the runtime be exitable.
	  // Normally we would not even include flush() at all, but in ASSERTIONS
	  // builds we do so just for this check, and here we see if there is any
	  // content to flush, that is, we check if there would have been
	  // something a non-ASSERTIONS build would have not seen.
	  // How we flush the streams depends on whether we are in NO_FILESYSTEM
	  // mode (which has its own special function for this; otherwise, all
	  // the code is inside libc)
	  var print = Module['print'];
	  var printErr = Module['printErr'];
	  var has = false;
	  Module['print'] = Module['printErr'] = function(x) {
	    has = true;
	  };
	  try { // it doesn't matter if it fails
	    var flush = Module['_fflush'];
	    if (flush) flush(0);
	    // also flush in the JS FS layer
	    var hasFS = true;
	    if (hasFS) {
	      ['stdout', 'stderr'].forEach(function(name) {
	        var info = FS.analyzePath('/dev/' + name);
	        if (!info) return;
	        var stream = info.object;
	        var rdev = stream.rdev;
	        var tty = TTY.ttys[rdev];
	        if (tty && tty.output && tty.output.length) {
	          has = true;
	        }
	      });
	    }
	  } catch(e) {}
	  Module['print'] = print;
	  Module['printErr'] = printErr;
	  if (has) {
	    warnOnce('stdio streams had content in them that was not flushed. you should set NO_EXIT_RUNTIME to 0 (see the FAQ), or make sure to emit a newline when you printf etc.');
	  }
	}

	function exit(status, implicit) {
	  checkUnflushedContent();

	  // if this is just main exit-ing implicitly, and the status is 0, then we
	  // don't need to do anything here and can just leave. if the status is
	  // non-zero, though, then we need to report it.
	  // (we may have warned about this earlier, if a situation justifies doing so)
	  if (implicit && Module['noExitRuntime'] && status === 0) {
	    return;
	  }

	  if (Module['noExitRuntime']) {
	    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
	    if (!implicit) {
	      Module.printErr('exit(' + status + ') called, but NO_EXIT_RUNTIME is set, so halting execution but not exiting the runtime or preventing further async execution (build with NO_EXIT_RUNTIME=0, if you want a true shutdown)');
	    }
	  } else {

	    ABORT = true;
	    STACKTOP = initialStackTop;

	    exitRuntime();

	    if (Module['onExit']) Module['onExit'](status);
	  }

	  if (ENVIRONMENT_IS_NODE) {
	    process['exit'](status);
	  }
	  Module['quit'](status, new ExitStatus(status));
	}
	Module['exit'] = exit;

	var abortDecorators = [];

	function abort(what) {
	  if (Module['onAbort']) {
	    Module['onAbort'](what);
	  }

	  if (what !== undefined) {
	    Module.print(what);
	    Module.printErr(what);
	    what = JSON.stringify(what);
	  } else {
	    what = '';
	  }

	  ABORT = true;

	  var extra = '';
	  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
	  if (abortDecorators) {
	    abortDecorators.forEach(function(decorator) {
	      output = decorator(output, what);
	    });
	  }
	  throw output;
	}
	Module['abort'] = abort;

	// {{PRE_RUN_ADDITIONS}}

	if (Module['preInit']) {
	  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
	  while (Module['preInit'].length > 0) {
	    Module['preInit'].pop()();
	  }
	}


	Module["noExitRuntime"] = true;

	run();

	// {{POST_RUN_ADDITIONS}}





	// {{MODULE_ADDITIONS}}





	  return trace_processor_wasm;
	};
	module.exports = trace_processor_wasm;
	});

	var deferred = createCommonjsModule(function (module, exports) {
	// Copyright (C) 2018 The Android Open Source Project
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//      http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.defer = void 0;
	/**
	 * Create a promise with exposed resolve and reject callbacks.
	 */
	function defer() {
	    let resolve = null;
	    let reject = null;
	    const p = new Promise((res, rej) => [resolve, reject] = [res, rej]);
	    return Object.assign(p, { resolve, reject });
	}
	exports.defer = defer;

	});

	var logging = createCommonjsModule(function (module, exports) {
	// Copyright (C) 2018 The Android Open Source Project
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//      http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.reportError = exports.setErrorHandler = exports.assertFalse = exports.assertTrue = exports.assertExists = void 0;
	let errorHandler = (_) => { };
	function assertExists(value) {
	    if (value === null || value === undefined) {
	        throw new Error('Value doesn\'t exist');
	    }
	    return value;
	}
	exports.assertExists = assertExists;
	function assertTrue(value, optMsg) {
	    if (value !== true) {
	        throw new Error(optMsg ? optMsg : 'Failed assertion');
	    }
	}
	exports.assertTrue = assertTrue;
	function assertFalse(value, optMsg) {
	    assertTrue(!value, optMsg);
	}
	exports.assertFalse = assertFalse;
	function setErrorHandler(handler) {
	    errorHandler = handler;
	}
	exports.setErrorHandler = setErrorHandler;
	function reportError(err) {
	    let errLog = '';
	    let errorObj = undefined;
	    if (err instanceof ErrorEvent) {
	        errLog = err.message;
	        errorObj = err.error;
	    }
	    else if (err instanceof PromiseRejectionEvent) {
	        errLog = `${err.reason}`;
	        errorObj = err.reason;
	    }
	    else {
	        errLog = `${err}`;
	    }
	    if (errorObj !== undefined && errorObj !== null) {
	        const errStack = errorObj.stack;
	        errLog += '\n';
	        errLog += errStack !== undefined ? errStack : JSON.stringify(errorObj);
	    }
	    errLog += `\n\nUA: ${navigator.userAgent}\n`;
	    console.error(errLog, err);
	    errorHandler(errLog);
	}
	exports.reportError = reportError;

	});

	var wasm_bridge = createCommonjsModule(function (module, exports) {
	// Copyright (C) 2018 The Android Open Source Project
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//      http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.WasmBridge = void 0;


	// The Initialize() call will allocate a buffer of REQ_BUF_SIZE bytes which
	// will be used to copy the input request data. This is to avoid passing the
	// input data on the stack, which has a limited (~1MB) size.
	// The buffer will be allocated by the C++ side and reachable at
	// HEAPU8[reqBufferAddr, +REQ_BUFFER_SIZE].
	const REQ_BUF_SIZE = 32 * 1024 * 1024;
	class WasmBridge {
	    constructor(init) {
	        this.reqBufferAddr = 0;
	        this.lastStderr = [];
	        this.aborted = false;
	        this.currentRequestResult = null;
	        const deferredRuntimeInitialized = deferred.defer();
	        this.connection = init({
	            locateFile: (s) => s,
	            print: (line) => console.log(line),
	            printErr: (line) => this.appendAndLogErr(line),
	            onRuntimeInitialized: () => deferredRuntimeInitialized.resolve(),
	        });
	        this.whenInitialized = deferredRuntimeInitialized.then(() => {
	            const fn = this.connection.addFunction(this.onReply.bind(this), 'iii');
	            this.reqBufferAddr = this.connection.ccall('Initialize', 
	            /*return=*/ 'number', 
	            /*args=*/ ['number', 'number'], [fn, REQ_BUF_SIZE]);
	        });
	    }
	    callWasm(req) {
	        if (this.aborted) {
	            throw new Error('Wasm module crashed');
	        }
	        logging.assertTrue(req.data.length <= REQ_BUF_SIZE);
	        const endAddr = this.reqBufferAddr + req.data.length;
	        this.connection.HEAPU8.subarray(this.reqBufferAddr, endAddr).set(req.data);
	        try {
	            this.connection.ccall(req.methodName, // C method name.
	            'void', // Return type.
	            ['number'], // Arg types.
	            [req.data.length] // Args.
	            );
	            const result = logging.assertExists(this.currentRequestResult);
	            this.currentRequestResult = null;
	            result.id = req.id;
	            return result;
	        }
	        catch (err) {
	            this.aborted = true;
	            let abortReason = typeof err === 'string' ? err : JSON.stringify(err);
	            abortReason += '\n\nstderr: \n' + this.lastStderr.join('\n');
	            throw new Error(abortReason);
	        }
	    }
	    // This is invoked from ccall in the same call stack as callWasm.
	    onReply(heapPtr, size) {
	        const data = this.connection.HEAPU8.slice(heapPtr, heapPtr + size);
	        this.currentRequestResult = {
	            id: 0,
	            data,
	        };
	    }
	    appendAndLogErr(line) {
	        console.warn(line);
	        // Keep the last N lines in the |lastStderr| buffer.
	        this.lastStderr.push(line);
	        if (this.lastStderr.length > 512) {
	            this.lastStderr.shift();
	        }
	    }
	}
	exports.WasmBridge = WasmBridge;

	});

	var engine = createCommonjsModule(function (module, exports) {
	// Copyright (C) 2018 The Android Open Source Project
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//      http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.
	Object.defineProperty(exports, "__esModule", { value: true });


	// tslint:disable no-any
	// Proxy all messages to WasmBridge#callWasm.
	const anySelf = self;
	// Messages can arrive before we are initialized, queue these for later.
	const msgQueue = [];
	anySelf.onmessage = (msg) => {
	    msgQueue.push(msg);
	};
	const bridge = new wasm_bridge.WasmBridge(trace_processor);
	bridge.whenInitialized.then(() => {
	    const handleMsg = (msg) => {
	        const request = msg.data;
	        anySelf.postMessage(bridge.callWasm(request));
	    };
	    // Dispatch queued messages.
	    let msg;
	    while (msg = msgQueue.shift()) {
	        handleMsg(msg);
	    }
	    anySelf.onmessage = handleMsg;
	});

	});

	return engine;

}());
//# sourceMappingURL=engine_bundle.js.map
